<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XiaoTang&#39; Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhizhi.tangliangdong.me/"/>
  <updated>2020-03-11T01:52:54.879Z</updated>
  <id>http://zhizhi.tangliangdong.me/</id>
  
  <author>
    <name>XiaoTang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>springboot 多线程事务一起回滚</title>
    <link href="http://zhizhi.tangliangdong.me/2020/03/10/2020-3-10-springboot-multithreading-transaction/"/>
    <id>http://zhizhi.tangliangdong.me/2020/03/10/2020-3-10-springboot-multithreading-transaction/</id>
    <published>2020-03-10T07:55:49.000Z</published>
    <updated>2020-03-11T01:52:54.879Z</updated>
    
    <content type="html"><![CDATA[<p>今天再看极客时间的时候，看到关于项目中 <em>ThreadLocal</em> 的坑。学习的途中，想着之前项目上调用所有的海康摄像头抓图的那个方法执行起来特别慢，每个监控都要发送一次请求到海康ISC平台。如果网络是通的，那还好说，如果监控的网络不通，那接口调用起来就特别慢，都要等好几秒超时了才会返回，因为做的是单线程的，所以就只能一个一个等着，速度就特别慢，所以在这里就比较适合用多线程来实现。</p><a id="more"></a><p>实际使用下来，也将时间缩减到了原来的 <strong>1/4</strong> 了，效果显著。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">catchAllPicture</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="comment">// 获取所有的需要同步的监控区域</span></span><br><span class="line">        List&lt;CameraArea&gt; cameraAreaList = cameraAreaService.getCameraArea();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(CameraArea item: cameraAreaList)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                <span class="comment">// 每个监控区域下的所有监控进行抓图</span></span><br><span class="line">                cameraService.catchPictureByCameraArea(item);</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是在询问技术总监时，他还提到一个线程数的问题，并发的线程数不宜太多，太多了服务器容易卡，从而影响到其他的业务。</p><p>因此需要限制线程的创建数量</p><h2 id="ExecutorService"><a href="#ExecutorService" class="headerlink" title="ExecutorService"></a>ExecutorService</h2><p>使用该类的工厂方法创建实例，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> MAX_THREADS = <span class="number">3</span>; <span class="comment">//定义线程数最大值</span></span><br><span class="line"></span><br><span class="line">ExecutorService executor = Executors.newFixedThreadPool(MAX_THREADS);</span><br></pre></td></tr></table></figure><p>使用 <code>submit()</code> 方法将 <code>Callable</code>或<code>Runnable</code>任务交给 <code>ExecutorService</code>，并返回 <code>Future</code>类型的结果。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Future&lt;String&gt; future = executorService.submit(runnableTask);</span><br></pre></td></tr></table></figure><hr><p>将 ExecutorService 使用到项目中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> MAX_THREADS = <span class="number">3</span>; <span class="comment">//定义线程数最大值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 最多可创建三个线程</span></span><br><span class="line">ExecutorService executorService = Executors.newFixedThreadPool(MAX_THREADS);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">catchAllPicture</span><span class="params">()</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="comment">// 获取监控区域列表</span></span><br><span class="line">        List&lt;CameraArea&gt; cameraAreaList = cameraAreaService.getCameraArea();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(CameraArea item: cameraAreaList)&#123;</span><br><span class="line">            <span class="comment">// 多线程执行</span></span><br><span class="line">            executorService.submit(()-&gt;&#123;</span><br><span class="line">                <span class="comment">// 每个监控区域下的所有监控进行抓图</span></span><br><span class="line">                cameraService.catchPictureByCameraArea(item);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多线程实现事务一起回滚"><a href="#多线程实现事务一起回滚" class="headerlink" title="多线程实现事务一起回滚"></a>多线程实现事务一起回滚</h2><p>多线程虽然能提高cpu的利用率，但是每个线程里的事务都不一样，springboot的声明式事务也是在单线程里才有效。因此若是某个线程出问题，或者是在主线程上报错，都无法实现事务的整体回滚。</p><ul><li><p>为了实现所有线程的事务整体回滚，我们需要手动进行回滚。</p></li><li><p>如果我们不对所有线程进行拦截，每个线程执行完，就自己提交到数据库了。</p></li></ul><p>因此我们需要对主线程进行拦截，让主线程等待所有的子线程执行完毕之后再执行下去。</p><h3 id="手动回滚提交"><a href="#手动回滚提交" class="headerlink" title="手动回滚提交"></a>手动回滚提交</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> PlatformTransactionManager transactionManager;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(String content)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 1、</span></span><br><span class="line">    <span class="comment">// 获取事务状态</span></span><br><span class="line">    DefaultTransactionDefinition def = <span class="keyword">new</span> DefaultTransactionDefinition();</span><br><span class="line">    def.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRED);</span><br><span class="line">    TransactionStatus status = transactionManager.getTransaction(def);</span><br><span class="line">    <span class="comment">// 回滚提交</span></span><br><span class="line">    status.setRollbackOnly();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2、</span></span><br><span class="line">    <span class="comment">// 直接回滚提交</span></span><br><span class="line">    TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CyclicBarrier-同步屏障"><a href="#CyclicBarrier-同步屏障" class="headerlink" title="CyclicBarrier 同步屏障"></a>CyclicBarrier 同步屏障</h3><blockquote><p>CyclicBarrier 的字面意思是可循环使用（Cyclic）的屏障（Barrier）。它要做的事情是，让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续干活。</p><p>CyclicBarrier 默认的构造方法是 CyclicBarrier(int parties)，其参数表示屏障拦截的线程数量，每个线程调用await方法告诉CyclicBarrier我已经到达了屏障，然后当前线程被阻塞。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CyclicBarrierTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 线程数量</span></span><br><span class="line">    <span class="keyword">static</span> Integer THREAD_NUM = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> CyclicBarrier cyclicBarrier = <span class="keyword">new</span> CyclicBarrier(THREAD_NUM);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 子线程数 = THREAD_NUM - 1 （主线程数）</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; THREAD_NUM - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 进来的线程先等待，当阻塞的线程数达到 THREAD_NUM 时，就会释放</span></span><br><span class="line">                    cyclicBarrier.await();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (BrokenBarrierException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 主线程先等待，当阻塞的线程数达到 THREAD_NUM 时，就会释放</span></span><br><span class="line">            cyclicBarrier.await();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>需要在每个线程的内部将事务保存下来，若是任何一个线程的执行出现错误，我们就回滚所有的事务。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> PlatformTransactionManager transactionManager;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 事务集合，用来存储子线程事务</span></span><br><span class="line">List&lt;TransactionStatus&gt; transactionStatuses = Collections.synchronizedList(<span class="keyword">new</span> ArrayList&lt;TransactionStatus&gt;());</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> MAX_THREADS = <span class="number">3</span>; <span class="comment">// 定义线程数 </span></span><br><span class="line"></span><br><span class="line">CyclicBarrier c = <span class="keyword">new</span> CyclicBarrier(MAX_THREADS);</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Transactional</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">    <span class="comment">// spring无法处理thread的事务，声明式事务无效</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; MAX_THREADS - <span class="number">1</span> ; i++)&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="comment">// 获取事务状态</span></span><br><span class="line">            DefaultTransactionDefinition def = <span class="keyword">new</span> DefaultTransactionDefinition();</span><br><span class="line">            def.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRED);</span><br><span class="line">            TransactionStatus status = transactionManager.getTransaction(def);</span><br><span class="line">            <span class="comment">// 将当前子线程的事务添加到集合中</span></span><br><span class="line">            transactionStatuses.add(status);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                 <span class="comment">//执行业务逻辑 插入或更新操作</span></span><br><span class="line">                User user = <span class="keyword">new</span> User();</span><br><span class="line">                user.setName(name);</span><br><span class="line">                save(user);</span><br><span class="line">                c.await();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="comment">// 回滚所有事务</span></span><br><span class="line">                <span class="keyword">for</span> (TransactionStatus transactionStatus:transactionStatuses) &#123;</span><br><span class="line">                    transactionStatus.setRollbackOnly();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        c.await();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://blog.csdn.net/zsj777/article/details/81394323?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">多线程事务回滚</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天再看极客时间的时候，看到关于项目中 &lt;em&gt;ThreadLocal&lt;/em&gt; 的坑。学习的途中，想着之前项目上调用所有的海康摄像头抓图的那个方法执行起来特别慢，每个监控都要发送一次请求到海康ISC平台。如果网络是通的，那还好说，如果监控的网络不通，那接口调用起来就特别慢，都要等好几秒超时了才会返回，因为做的是单线程的，所以就只能一个一个等着，速度就特别慢，所以在这里就比较适合用多线程来实现。&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="springboot" scheme="http://zhizhi.tangliangdong.me/tags/springboot/"/>
    
      <category term="多线程" scheme="http://zhizhi.tangliangdong.me/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>linux vimrc 配置</title>
    <link href="http://zhizhi.tangliangdong.me/2020/03/09/2020-3-9-linux-vimrc/"/>
    <id>http://zhizhi.tangliangdong.me/2020/03/09/2020-3-9-linux-vimrc/</id>
    <published>2020-03-09T08:40:38.000Z</published>
    <updated>2020-03-09T08:52:24.751Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>如果你希望你所做的配置是永久性的，那么需要在你的用户目录创建一个 Vim 的配置文件 .vimrc 。</p></blockquote><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">" vimrc.vim - Extension of vim-sensible plugin with less sensible defaults.</span></span><br><span class="line"><span class="string">"</span> Maintainer:   Adam Stankiewicz &lt;sheerun@sher.pl&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> exists(<span class="string">'g:loaded_vimrc'</span>) || &amp;compatible</span><br><span class="line">  finish</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">let</span> g:loaded_vimrc = <span class="string">'yes'</span></span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line"><span class="string">""</span> Basics</span><br><span class="line"></span><br><span class="line"><span class="string">" Disable strange Vi defaults.</span></span><br><span class="line"><span class="string">set nocompatible</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Turn on filetype plugins (:<span class="built_in">help</span> filetype-plugin).</span><br><span class="line"><span class="keyword">if</span> has(<span class="string">'autocmd'</span>)</span><br><span class="line">  filetype plugin indent on</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line"><span class="string">" Enable syntax highlighting.</span></span><br><span class="line"><span class="string">if has('syntax')</span></span><br><span class="line"><span class="string">  syntax enable</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Autoindent when starting new line, or using `o` or `O`.</span><br><span class="line"><span class="built_in">set</span> autoindent</span><br><span class="line"></span><br><span class="line"><span class="string">" Allow backspace in insert mode.</span></span><br><span class="line"><span class="string">set backspace=indent,eol,start</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Don<span class="string">'t scan included files. The .tags file is more performant.</span></span><br><span class="line"><span class="string">set complete-=i</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Use '</span>shiftwidth<span class="string">' when using `&lt;Tab&gt;` in front of a line.</span></span><br><span class="line"><span class="string">" By default it'</span>s used only <span class="keyword">for</span> <span class="built_in">shift</span> commands (`&lt;`, `&gt;`).</span><br><span class="line"><span class="built_in">set</span> smarttab</span><br><span class="line"></span><br><span class="line"><span class="string">" Disable octal format for number processing.</span></span><br><span class="line"><span class="string">set nrformats-=octal</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Allow <span class="keyword">for</span> mappings including `Esc`, <span class="keyword">while</span> preserving</span><br><span class="line"><span class="string">" zero timeout after pressing it manually.</span></span><br><span class="line"><span class="string">"</span> (it only nvim needs fixing this)</span><br><span class="line"><span class="keyword">if</span> !has(<span class="string">'nvim'</span>) &amp;&amp; &amp;ttimeoutlen == -1</span><br><span class="line">  <span class="built_in">set</span> ttimeout</span><br><span class="line">  <span class="built_in">set</span> ttimeoutlen=100</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line"><span class="string">" Enable highlighted case-insensitive incremential search.</span></span><br><span class="line"><span class="string">set incsearch</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Indent using two spaces.</span><br><span class="line"><span class="built_in">set</span> tabstop=2</span><br><span class="line"><span class="built_in">set</span> shiftwidth=2</span><br><span class="line"><span class="built_in">set</span> expandtab</span><br><span class="line"></span><br><span class="line"><span class="string">" Use `Ctrl-L` to clear the highlighting of :set hlsearch.</span></span><br><span class="line"><span class="string">if maparg('&lt;C-L&gt;', 'n') ==# ''</span></span><br><span class="line"><span class="string">  nnoremap &lt;silent&gt; &lt;C-L&gt; :nohlsearch&lt;C-R&gt;=has('diff')?'&lt;Bar&gt;diffupdate':''&lt;CR&gt;&lt;CR&gt;&lt;C-L&gt;</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Always show window statuses, even <span class="keyword">if</span> there<span class="string">'s only one.</span></span><br><span class="line"><span class="string">set laststatus=2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Show the line and column number of the cursor position.</span></span><br><span class="line"><span class="string">set ruler</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Autocomplete commands using nice menu in place of window status.</span></span><br><span class="line"><span class="string">" Enable `Ctrl-N` and `Ctrl-P` to scroll through matches.</span></span><br><span class="line"><span class="string">set wildmenu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" When '</span>wrap<span class="string">' is on, display last line even if it doesn'</span>t fit.</span><br><span class="line"><span class="built_in">set</span> display+=lastline</span><br><span class="line"></span><br><span class="line"><span class="string">" Force utf-8 encoding</span></span><br><span class="line"><span class="string">set encoding=utf-8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Set default whitespace characters when using `:<span class="built_in">set</span> list`</span><br><span class="line"><span class="built_in">set</span> listchars=tab:&gt;\ ,trail:-,extends:&gt;,precedes:&lt;,nbsp:+</span><br><span class="line"></span><br><span class="line"><span class="string">" Delete comment character when joining commented lines</span></span><br><span class="line"><span class="string">if v:version &gt; 703 || v:version == 703 &amp;&amp; has("</span>patch541<span class="string">")</span></span><br><span class="line"><span class="string">  set formatoptions+=j</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Search upwards <span class="keyword">for</span> tags file instead only locally</span><br><span class="line"><span class="keyword">if</span> has(<span class="string">'path_extra'</span>)</span><br><span class="line">  setglobal tags-=./tags tags^=./tags;</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line"><span class="string">" Reload unchanged files automatically.</span></span><br><span class="line"><span class="string">set autoread</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Increase <span class="built_in">history</span> size to 1000 items.</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">history</span>=1000</span><br><span class="line"></span><br><span class="line"><span class="string">" Allow for up to 50 opened tabs on Vim start.</span></span><br><span class="line"><span class="string">set tabpagemax=50</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Always save upper <span class="keyword">case</span> variables to viminfo file.</span><br><span class="line"><span class="built_in">set</span> viminfo^=!</span><br><span class="line"></span><br><span class="line"><span class="string">" Enable undofile and set undodir and backupdir</span></span><br><span class="line"><span class="string">let s:dir = has('win32') ? '<span class="variable">$APPDATA</span>/Vim' : isdirectory(<span class="variable">$HOME</span>.'/Library') ? '~/Library/Vim' : empty(<span class="variable">$XDG_DATA_HOME</span>) ? '~/.local/share/vim' : '<span class="variable">$XDG_DATA_HOME</span>/vim'</span></span><br><span class="line"><span class="string">let &amp;backupdir = expand(s:dir) . '/backup//'</span></span><br><span class="line"><span class="string">let &amp;undodir = expand(s:dir) . '/undo//'</span></span><br><span class="line"><span class="string">set undofile</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Allow color schemes to <span class="keyword">do</span> bright colors without forcing bold.</span><br><span class="line"><span class="keyword">if</span> &amp;t_Co == 8 &amp;&amp; <span class="variable">$TERM</span> !~<span class="comment"># '^linux\|^Eterm'</span></span><br><span class="line">  <span class="built_in">set</span> t_Co=16</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line"><span class="string">" Load matchit.vim, but only if the user hasn't installed a newer version.</span></span><br><span class="line"><span class="string">if !exists('g:loaded_matchit') &amp;&amp; findfile('plugin/matchit.vim', &amp;rtp) ==# ''</span></span><br><span class="line"><span class="string">  runtime! macros/matchit.vim</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> `Ctrl-U` <span class="keyword">in</span> insert mode deletes a lot. Use `Ctrl-G` u to first <span class="built_in">break</span> undo,</span><br><span class="line"><span class="string">" so that you can undo `Ctrl-U` without undoing what you typed before it.</span></span><br><span class="line"><span class="string">inoremap &lt;C-U&gt; &lt;C-G&gt;u&lt;C-U&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Avoid problems with fish shell</span><br><span class="line"><span class="string">" ([issue](https://github.com/tpope/vim-sensible/issues/50)).</span></span><br><span class="line"><span class="string">if &amp;shell =~# 'fish$' &amp;&amp; (v:version &lt; 704 || v:version == 704 &amp;&amp; !has('patch276'))</span></span><br><span class="line"><span class="string">  set shell=/bin/bash</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span><span class="string">" Extras</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Set monako font <span class="keyword">if</span> using macvim</span><br><span class="line"><span class="keyword">if</span> has(<span class="string">"gui_macvim"</span>)</span><br><span class="line">  <span class="built_in">set</span> guifont=Monaco:h13</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line"><span class="string">" Keep flags when repeating last substitute command.</span></span><br><span class="line"><span class="string">nnoremap &amp; :&amp;&amp;&lt;CR&gt;</span></span><br><span class="line"><span class="string">xnoremap &amp; :&amp;&amp;&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Y yanks from the cursor to the end of line as expected. See :<span class="built_in">help</span> Y.</span><br><span class="line">nnoremap Y y$</span><br><span class="line"></span><br><span class="line"><span class="string">" Automatically create directories for backup and undo files.</span></span><br><span class="line"><span class="string">if !isdirectory(expand(s:dir))</span></span><br><span class="line"><span class="string">  call system("</span>mkdir -p <span class="string">" . expand(s:dir) . "</span>/&#123;backup,undo&#125;<span class="string">")</span></span><br><span class="line"><span class="string">end</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Highlight line under cursor. It helps with navigation.</span><br><span class="line"><span class="built_in">set</span> cursorline</span><br><span class="line"></span><br><span class="line"><span class="string">" Keep 8 lines above or below the cursor when scrolling.</span></span><br><span class="line"><span class="string">set scrolloff=8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Keep 15 columns next to the cursor when scrolling horizontally.</span><br><span class="line"><span class="built_in">set</span> sidescroll=1</span><br><span class="line"><span class="built_in">set</span> sidescrolloff=15</span><br><span class="line"></span><br><span class="line"><span class="string">" Set minimum window size to 79x5.</span></span><br><span class="line"><span class="string">set winwidth=79</span></span><br><span class="line"><span class="string">set winheight=5</span></span><br><span class="line"><span class="string">set winminheight=5</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> If opening buffer, search first <span class="keyword">in</span> opened windows.</span><br><span class="line"><span class="built_in">set</span> switchbuf=usetab</span><br><span class="line"></span><br><span class="line"><span class="string">" Hide buffers instead of asking if to save them.</span></span><br><span class="line"><span class="string">set hidden</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Wrap lines by default</span><br><span class="line"><span class="built_in">set</span> wrap linebreak</span><br><span class="line"><span class="built_in">set</span> showbreak=<span class="string">" "</span></span><br><span class="line"></span><br><span class="line"><span class="string">" Allow easy navigation between wrapped lines.</span></span><br><span class="line"><span class="string">vmap j gj</span></span><br><span class="line"><span class="string">vmap k gk</span></span><br><span class="line"><span class="string">nmap j gj</span></span><br><span class="line"><span class="string">nmap k gk</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> For autocompletion, complete as much as you can.</span><br><span class="line"><span class="built_in">set</span> wildmode=longest,full</span><br><span class="line"></span><br><span class="line"><span class="string">" Show line numbers on the sidebar.</span></span><br><span class="line"><span class="string">set number</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Disable any annoying beeps on errors.</span><br><span class="line"><span class="built_in">set</span> noerrorbells</span><br><span class="line"><span class="built_in">set</span> visualbell</span><br><span class="line"></span><br><span class="line"><span class="string">" Don't parse modelines (google "</span>vim modeline vulnerability<span class="string">").</span></span><br><span class="line"><span class="string">set nomodeline</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Do not fold by default. But <span class="keyword">if</span>, <span class="keyword">do</span> it up to 3 levels.</span><br><span class="line"><span class="built_in">set</span> foldmethod=indent</span><br><span class="line"><span class="built_in">set</span> foldnestmax=3</span><br><span class="line"><span class="built_in">set</span> nofoldenable</span><br><span class="line"></span><br><span class="line"><span class="string">" Enable mouse for scrolling and window resizing.</span></span><br><span class="line"><span class="string">set mouse=a</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Disable swap to prevent annoying messages.</span><br><span class="line"><span class="built_in">set</span> noswapfile</span><br><span class="line"></span><br><span class="line"><span class="string">" Save up to 100 marks, enable capital marks.</span></span><br><span class="line"><span class="string">set viminfo='100,f1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Enable search highlighting.</span><br><span class="line"><span class="built_in">set</span> hlsearch</span><br><span class="line"></span><br><span class="line"><span class="string">" Ignore case when searching.</span></span><br><span class="line"><span class="string">set ignorecase</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Show mode <span class="keyword">in</span> statusbar, not separately.</span><br><span class="line"><span class="built_in">set</span> noshowmode</span><br><span class="line"></span><br><span class="line"><span class="string">" Don't ignore case when search has capital letter</span></span><br><span class="line"><span class="string">"</span> (although also don<span class="string">'t ignore case by default).</span></span><br><span class="line"><span class="string">set smartcase</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Use dash as word separator.</span></span><br><span class="line"><span class="string">set iskeyword+=-</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Add gems.tags to files searched for tags.</span></span><br><span class="line"><span class="string">set tags+=gems.tags</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Disable output, vcs, archive, rails, temp and backup files.</span></span><br><span class="line"><span class="string">set wildignore+=*.o,*.out,*.obj,.git,*.rbc,*.rbo,*.class,.svn,*.gem</span></span><br><span class="line"><span class="string">set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz</span></span><br><span class="line"><span class="string">set wildignore+=*/vendor/gems/*,*/vendor/cache/*,*/.bundle/*,*/.sass-cache/*</span></span><br><span class="line"><span class="string">set wildignore+=*.swp,*~,._*</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Auto center on matched string.</span></span><br><span class="line"><span class="string">noremap n nzz</span></span><br><span class="line"><span class="string">noremap N Nzz</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Visually select the text that was last edited/pasted (Vimcast#26).</span></span><br><span class="line"><span class="string">noremap gV `[v`]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Expand %% to path of current buffer in command mode.</span></span><br><span class="line"><span class="string">cnoremap &lt;expr&gt; %% getcmdtype() == '</span>:<span class="string">' ? expand('</span>%:h<span class="string">').'</span>/<span class="string">' : '</span>%%<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Enable saving by `Ctrl-s`</span></span><br><span class="line"><span class="string">nnoremap &lt;C-s&gt; :w&lt;CR&gt;</span></span><br><span class="line"><span class="string">inoremap &lt;C-s&gt; &lt;ESC&gt;:w&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Use Q to intelligently close a window</span></span><br><span class="line"><span class="string">" (if there are multiple windows into the same buffer)</span></span><br><span class="line"><span class="string">" or kill the buffer entirely if it'</span>s the last window looking into that buffer.</span><br><span class="line"><span class="keyword">function</span>! CloseWindowOrKillBuffer()</span><br><span class="line">  <span class="built_in">let</span> number_of_windows_to_this_buffer = len(filter(range(1, winnr(<span class="string">'$'</span>)), <span class="string">"winbufnr(v:val) == bufnr('%')"</span>))</span><br><span class="line">  <span class="keyword">if</span> matchstr(expand(<span class="string">"%"</span>), <span class="string">'NERD'</span>) == <span class="string">'NERD'</span></span><br><span class="line">    wincmd c</span><br><span class="line">    <span class="built_in">return</span></span><br><span class="line">  endif</span><br><span class="line">  <span class="keyword">if</span> number_of_windows_to_this_buffer &gt; 1</span><br><span class="line">    wincmd c</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    bdelete</span><br><span class="line">  endif</span><br><span class="line">endfunction</span><br><span class="line">nnoremap &lt;silent&gt; Q :call CloseWindowOrKillBuffer()&lt;CR&gt;</span><br><span class="line"></span><br><span class="line"><span class="string">" Set window title by default.</span></span><br><span class="line"><span class="string">set title</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Always focus on splited window.</span><br><span class="line"><span class="built_in">set</span> splitright</span><br><span class="line"><span class="built_in">set</span> splitbelow</span><br><span class="line"></span><br><span class="line"><span class="string">" Don't display the intro message on starting Vim.</span></span><br><span class="line"><span class="string">set shortmess+=I</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Use Silver Searcher <span class="keyword">for</span> CtrlP plugin (<span class="keyword">if</span> available)</span><br><span class="line"><span class="string">" Fallback to git ls-files for fast listing.</span></span><br><span class="line"><span class="string">"</span> Because we use fast strategies, <span class="built_in">disable</span> caching.</span><br><span class="line"><span class="built_in">let</span> g:ctrlp_use_caching = 0</span><br><span class="line"><span class="keyword">if</span> executable(<span class="string">'ag'</span>)</span><br><span class="line">    <span class="built_in">set</span> grepprg=ag\ --nogroup\ --nocolor</span><br><span class="line">    <span class="built_in">let</span> g:ctrlp_user_command = <span class="string">'cd %s &amp;&amp; ag -l --nocolor -g ""'</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">let</span> g:ctrlp_user_command = [<span class="string">'.git'</span>,</span><br><span class="line">    \ <span class="string">'cd %s &amp;&amp; git ls-files . -co --exclude-standard'</span>,</span><br><span class="line">    \ <span class="string">'find %s -type f'</span> ]</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line"><span class="string">" Accept CtrlP selections also with &lt;Space&gt;</span></span><br><span class="line"><span class="string">let g:ctrlp_prompt_mappings = &#123;</span></span><br><span class="line"><span class="string">  \ 'AcceptSelection("</span>e<span class="string">")': ['&lt;Space&gt;', '&lt;CR&gt;', '&lt;2-LeftMouse&gt;'],</span></span><br><span class="line"><span class="string">  \ &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Make sure pasting <span class="keyword">in</span> visual mode doesn<span class="string">'t replace paste buffer</span></span><br><span class="line"><span class="string">function! RestoreRegister()</span></span><br><span class="line"><span class="string">  let @" = s:restore_reg</span></span><br><span class="line"><span class="string">  return '</span><span class="string">'</span></span><br><span class="line"><span class="string">endfunction</span></span><br><span class="line"><span class="string">function! s:Repl()</span></span><br><span class="line"><span class="string">  let s:restore_reg = @"</span></span><br><span class="line"><span class="string">  return "p@=RestoreRegister()\&lt;cr&gt;"</span></span><br><span class="line"><span class="string">endfunction</span></span><br><span class="line"><span class="string">vmap &lt;silent&gt; &lt;expr&gt; p &lt;sid&gt;Repl()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Prevent common mistake of pressing q: instead :q</span></span><br><span class="line"><span class="string">map q: :q</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Make a simple "search" text object.</span></span><br><span class="line"><span class="string">" http://vim.wikia.com/wiki/Copy_or_change_search_hit</span></span><br><span class="line"><span class="string">" It allows for replacing search matches with cs and then /././.</span></span><br><span class="line"><span class="string">vnoremap &lt;silent&gt; s //e&lt;C-r&gt;=&amp;selection=='</span>exclusive<span class="string">'?'</span>+1<span class="string">':'</span><span class="string">'&lt;CR&gt;&lt;CR&gt;</span></span><br><span class="line"><span class="string">    \:&lt;C-u&gt;call histdel('</span>search<span class="string">',-1)&lt;Bar&gt;let @/=histget('</span>search<span class="string">',-1)&lt;CR&gt;gv</span></span><br><span class="line"><span class="string">omap s :normal vs&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Disable writebackup because some tools have issues with it:</span></span><br><span class="line"><span class="string">" https://github.com/neoclide/coc.nvim/issues/649</span></span><br><span class="line"><span class="string">set nowritebackup</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Reduce updatetime from 4000 to 300 to avoid issues with coc.nvim</span></span><br><span class="line"><span class="string">set updatetime=300</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Auto reload if file was changed somewhere else (for autoread)</span></span><br><span class="line"><span class="string">au CursorHold * checktime</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Enable loading filetype plugins</span></span><br><span class="line"><span class="string">filetype plugin on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Merge signcolumn with number line (if supported)</span></span><br><span class="line"><span class="string">if has("patch-8.1.1564")</span></span><br><span class="line"><span class="string">  set signcolumn=number</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"" Color Scheme</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Vim color file</span></span><br><span class="line"><span class="string">" Original Maintainer:  Lars H. Nielsen (dengmao@gmail.com)</span></span><br><span class="line"><span class="string">" Last Change:  2014-05-31</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="string">" Modified version of wombat for 256-color terminals by</span></span><br><span class="line"><span class="string">"   Adam Stankiewicz (sheerun@sher.pl)</span></span><br><span class="line"><span class="string">" Modified version of wombat for 256-color terminals by</span></span><br><span class="line"><span class="string">"   David Liang (bmdavll@gmail.com)</span></span><br><span class="line"><span class="string">" based on version by</span></span><br><span class="line"><span class="string">"   Danila Bespalov (danila.bespalov@gmail.com)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set background=dark</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if version &gt; 580</span></span><br><span class="line"><span class="string">  hi clear</span></span><br><span class="line"><span class="string">  if exists("syntax_on")</span></span><br><span class="line"><span class="string">    syntax reset</span></span><br><span class="line"><span class="string">  endif</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let colors_name = "wombat256mod"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" General colors</span></span><br><span class="line"><span class="string">hi  Normal        ctermfg=252  ctermbg=234    cterm=none     guifg=#e3e0d7  guibg=#242424  gui=none</span></span><br><span class="line"><span class="string">hi  Cursor        ctermfg=234  ctermbg=228    cterm=none     guifg=#242424  guibg=#eae788  gui=none</span></span><br><span class="line"><span class="string">hi  Visual        ctermfg=251  ctermbg=239    cterm=none     guifg=#c3c6ca  guibg=#554d4b  gui=none</span></span><br><span class="line"><span class="string">hi  VisualNOS     ctermfg=251  ctermbg=236    cterm=none     guifg=#c3c6ca  guibg=#303030  gui=none</span></span><br><span class="line"><span class="string">hi  Search        ctermfg=177  ctermbg=241    cterm=none     guifg=#d787ff  guibg=#636066  gui=none</span></span><br><span class="line"><span class="string">hi  Folded        ctermfg=103  ctermbg=237    cterm=none     guifg=#a0a8b0  guibg=#3a4046  gui=none</span></span><br><span class="line"><span class="string">hi  Title         ctermfg=230  cterm=bold     guifg=#ffffd7  gui=bold</span></span><br><span class="line"><span class="string">hi  StatusLine    ctermfg=230  ctermbg=238    cterm=none     guifg=#ffffd7  guibg=#444444  gui=italic</span></span><br><span class="line"><span class="string">hi  VertSplit     ctermfg=238  ctermbg=238    cterm=none     guifg=#444444  guibg=#444444  gui=none</span></span><br><span class="line"><span class="string">hi  StatusLineNC  ctermfg=241  ctermbg=238    cterm=none     guifg=#857b6f  guibg=#444444  gui=none</span></span><br><span class="line"><span class="string">hi  LineNr        ctermfg=241  ctermbg=232    cterm=none     guifg=#857b6f  guibg=#080808  gui=none term=none</span></span><br><span class="line"><span class="string">hi  SpecialKey    ctermfg=241  ctermbg=235    cterm=none     guifg=#626262  guibg=#2b2b2b  gui=none</span></span><br><span class="line"><span class="string">hi  WarningMsg    ctermfg=203  guifg=#ff5f55</span></span><br><span class="line"><span class="string">hi  ErrorMsg      ctermfg=196  ctermbg=234    cterm=bold     guifg=#e3e0d7  guibg=#3a3a3a  gui=bold</span></span><br><span class="line"><span class="string">hi  SpellBad      ctermfg=196  ctermbg=234    cterm=bold     guifg=#e3e0d7  guibg=#3a3a3a  gui=bold</span></span><br><span class="line"><span class="string">hi  SpellCap      ctermfg=196  ctermbg=234    cterm=bold     guifg=#e3e0d7  guibg=#3a3a3a  gui=bold</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Vim &gt;= 7.0 specific colors</span></span><br><span class="line"><span class="string">if version &gt;= 700</span></span><br><span class="line"><span class="string">hi  CursorLine    ctermbg=236  cterm=none   guibg=#32322f</span></span><br><span class="line"><span class="string">hi  CursorLineNr  ctermbg=234    cterm=none      guibg=#242424  gui=none</span></span><br><span class="line"><span class="string">hi  MatchParen    ctermfg=228  ctermbg=101  cterm=bold     guifg=#eae788  guibg=#857b6f  gui=bold</span></span><br><span class="line"><span class="string">hi  Pmenu         ctermfg=230  ctermbg=238  guifg=#ffffd7  guibg=#444444</span></span><br><span class="line"><span class="string">hi  PmenuSel      ctermfg=232  ctermbg=192  guifg=#080808  guibg=#cae982</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Diff highlighting</span></span><br><span class="line"><span class="string">hi  DiffAdd     ctermbg=17   guibg=#2a0d6a</span></span><br><span class="line"><span class="string">hi  DiffDelete  ctermfg=234  ctermbg=60     cterm=none     guifg=#242424  guibg=#3e3969  gui=none</span></span><br><span class="line"><span class="string">hi  DiffText    ctermbg=53   cterm=none     guibg=#73186e  gui=none</span></span><br><span class="line"><span class="string">hi  DiffChange  ctermbg=237  guibg=#382a37</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"hi CursorIM</span></span><br><span class="line"><span class="string">"hi Directory</span></span><br><span class="line"><span class="string">"hi IncSearch</span></span><br><span class="line"><span class="string">"hi Menu</span></span><br><span class="line"><span class="string">"hi ModeMsg</span></span><br><span class="line"><span class="string">"hi MoreMsg</span></span><br><span class="line"><span class="string">"hi PmenuSbar</span></span><br><span class="line"><span class="string">"hi PmenuThumb</span></span><br><span class="line"><span class="string">"hi Question</span></span><br><span class="line"><span class="string">"hi Scrollbar</span></span><br><span class="line"><span class="string">"hi SignColumn</span></span><br><span class="line"><span class="string">"hi SpellBad</span></span><br><span class="line"><span class="string">"hi SpellCap</span></span><br><span class="line"><span class="string">"hi SpellLocal</span></span><br><span class="line"><span class="string">"hi SpellRare</span></span><br><span class="line"><span class="string">"hi TabLine</span></span><br><span class="line"><span class="string">"hi TabLineFill</span></span><br><span class="line"><span class="string">"hi TabLineSel</span></span><br><span class="line"><span class="string">"hi Tooltip</span></span><br><span class="line"><span class="string">"hi User1</span></span><br><span class="line"><span class="string">"hi User9</span></span><br><span class="line"><span class="string">"hi WildMenu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Syntax highlighting</span></span><br><span class="line"><span class="string">hi  Keyword     ctermfg=111  cterm=none  guifg=#88b8f6  gui=none</span></span><br><span class="line"><span class="string">hi  Statement   ctermfg=111  cterm=none  guifg=#88b8f6  gui=none</span></span><br><span class="line"><span class="string">hi  Constant    ctermfg=173  cterm=none  guifg=#e5786d  gui=none</span></span><br><span class="line"><span class="string">hi  Number      ctermfg=173  cterm=none  guifg=#e5786d  gui=none</span></span><br><span class="line"><span class="string">hi  PreProc     ctermfg=173  cterm=none  guifg=#e5786d  gui=none</span></span><br><span class="line"><span class="string">hi  Function    ctermfg=192  cterm=none  guifg=#cae982  gui=none</span></span><br><span class="line"><span class="string">hi  Identifier  ctermfg=192  cterm=none  guifg=#cae982  gui=none</span></span><br><span class="line"><span class="string">hi  Type        ctermfg=186  cterm=none  guifg=#d4d987  gui=none</span></span><br><span class="line"><span class="string">hi  Special     ctermfg=229  cterm=none  guifg=#eadead  gui=none</span></span><br><span class="line"><span class="string">hi  String      ctermfg=113  cterm=none  guifg=#95e454  gui=italic</span></span><br><span class="line"><span class="string">hi  Comment     ctermfg=246  cterm=none  guifg=#9c998e  gui=italic</span></span><br><span class="line"><span class="string">hi  Todo        ctermfg=101  cterm=none  guifg=#857b6f  gui=italic</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">" Links</span></span><br><span class="line"><span class="string">hi! link FoldColumn    Folded</span></span><br><span class="line"><span class="string">hi! link CursorColumn  CursorLine</span></span><br><span class="line"><span class="string">hi! link NonText LineNr</span></span><br><span class="line"><span class="string">hi! link SignColumn LineNr</span></span><br><span class="line"><span class="string">hi! link CocErrorHighlight ErrorMsg</span></span><br><span class="line"><span class="string">hi! link CocWarningHighlight WarningMsg</span></span><br></pre></td></tr></table></figure><p><a href="https://github.com/sheerun/vimrc" target="_blank" rel="noopener">github链接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;如果你希望你所做的配置是永久性的，那么需要在你的用户目录创建一个 Vim 的配置文件 .vimrc 。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://zhizhi.tangliangdong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>springboot transaction事务</title>
    <link href="http://zhizhi.tangliangdong.me/2020/03/09/2020-3-9-springboot-transaction/"/>
    <id>http://zhizhi.tangliangdong.me/2020/03/09/2020-3-9-springboot-transaction/</id>
    <published>2020-03-09T05:46:57.000Z</published>
    <updated>2020-03-09T06:37:46.470Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>propagation 事务的传播行为，默认值为 Propagation.REQUIRED。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 事务</span></span><br><span class="line"><span class="meta">@Transactional</span>(propagation = Propagation.REQUIRED)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><ol><li><strong>REQUIRED</strong></li></ol><p>使用当前事务，如果当前没事务，则自己新建一个事务，子方法是必须运行在一个事务中的；</p><p>如果当前存在事务，则加入这个事务，成为一个整体。</p><ol start="2"><li><strong>SUPPORTS</strong></li></ol><p>如果当前有事务，则使用事务；如果当前没事务，则不使用事务。</p><ol start="3"><li><strong>MANDATORY</strong></li></ol><p>该传播属性强制必须存在一个事务，如果不存在，则抛出异常。</p><ol start="4"><li><strong>REQUIRES_NEW</strong></li></ol><p>如果当前有事务，则挂起该事务，并且自己创建一个新的事务给自己使用（别的事务报错，不会影响到该事务）；</p><p>如果当前没有事务，则相当于 <em>REQUIRED</em>。</p><ol start="5"><li><strong>NOT_SUPPORTED</strong></li></ol><p>如果当前有事务，则把事务挂起，自己不适用事务去运行数据库操作。</p><ol start="6"><li><strong>NEVER</strong></li></ol><p>如果当前有事务存在，就直接抛出异常。</p><ol start="7"><li><strong>NESTED</strong></li></ol><ul><li><p>如果当前有事务，则开启子事务（嵌套事务），嵌套事务是独立提交或者回滚；</p></li><li><p>如果当前没有事务，则同 REQUIRED。</p></li><li><p>但是如果主事务提交，则会携带子事务一起提交。</p></li><li><p>如果主事务回滚，则子事务会一起回滚。相反，子事务异常，则父事务可以回滚或者不回滚。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span>(propagation = Propagation.REQUIRED)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testPropagations</span><span class="params">()</span></span>&#123;</span><br><span class="line">    saveParent();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="comment">// save point</span></span><br><span class="line">        <span class="comment">// 这里子事务报错不会影响到父事务</span></span><br><span class="line">        saveChildren();</span><br><span class="line">    &#125; <span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveParent</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Stu stu = <span class="keyword">new</span> Stu();</span><br><span class="line">    stu.setName(<span class="string">"parent"</span>);</span><br><span class="line">    stu.setAge(<span class="number">44</span>);</span><br><span class="line">    stuMapper.insert(stu);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Transactional</span>(propagation = Propagation.NESTED)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveChildren</span><span class="params">()</span></span>&#123;</span><br><span class="line">    saveChild1();</span><br><span class="line">    <span class="keyword">int</span> a= <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">    saveChild2();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;propagation 事务的传播行为，默认值为 Propagation.REQUIRED。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 事务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Transactional&lt;/span&gt;(propagation = Propagation.REQUIRED)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Integer &lt;span class=&quot;title&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="springboot" scheme="http://zhizhi.tangliangdong.me/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>springboot添加动态定时任务</title>
    <link href="http://zhizhi.tangliangdong.me/2020/03/05/2020-3-5-springboot-dynamic-task/"/>
    <id>http://zhizhi.tangliangdong.me/2020/03/05/2020-3-5-springboot-dynamic-task/</id>
    <published>2020-03-05T08:36:00.000Z</published>
    <updated>2020-03-05T08:21:37.953Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>首先这里我们需要重新认识一个类ThreadPoolTaskScheduler：线程池任务调度类，能够开启线程池进行任务调度。</p></li><li><p>ThreadPoolTaskScheduler.schedule()方法会创建一个定时计划ScheduledFuture，在这个方法需要添加两个参数，Runnable（线程接口类） 和CronTrigger（定时任务触发器）</p></li><li><p>在ScheduledFuture中有一个cancel可以停止定时任务。</p></li></ul><a id="more"></a><p>因为项目中需要给每个用户添加一个专属的定时器，而且每个用户的定时器任务执行的时间间隔也不尽相同，因此不能采用静态的定时器，而是需要动态的从数据库中读取每个用户自定义的时间间隔设置。</p><h3 id="动态添加定时器"><a href="#动态添加定时器" class="headerlink" title="动态添加定时器"></a>动态添加定时器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 利用线程池实现任务调度</span></span><br><span class="line"><span class="comment"> * Task任务调度器可以实现任务的调度和删除</span></span><br><span class="line"><span class="comment"> * 原理:</span></span><br><span class="line"><span class="comment"> * 实现一个类：ThreadPoolTaskScheduler线程池任务调度器，能够开启线程池进行任务调度</span></span><br><span class="line"><span class="comment"> * ThreadPoolTaskScheduler.schedule（）方法会创建一个定时计划ScheduleFuture,</span></span><br><span class="line"><span class="comment"> * 在这个方法中添加两个参数一个是Runable:线程接口类，和CronTrigger(定时任务触发器)</span></span><br><span class="line"><span class="comment"> * 在ScheduleFuture中有一个cancel可以停止定时任务</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Admin</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * Scheduled Task是一种轻量级的任务定时调度器，相比于Quartz,减少了很多的配置信息，但是Scheduled Task 不适用于服务器集群，引文在服务器集群下会出现任务被多次调度执行的情况，因为集群的节点之间是不会共享任务信息的</span></span><br><span class="line"><span class="comment"> * 每个节点的定时任务都会定时执行</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElevatorDynamicTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HashMap&lt;String, ScheduledFuture&lt;?&gt;&gt; elevatorTaskMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ElevatorBlackBoxSingleAlarmGroupService elevatorBlackBoxSingleAlarmGroupService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setThreadPoolTaskScheduler</span><span class="params">(ThreadPoolTaskScheduler threadPoolTaskScheduler)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.threadPoolTaskScheduler = threadPoolTaskScheduler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建对应定时器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hxzId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startCron</span><span class="params">(String hxzId, String minute)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( elevatorTaskMap.containsKey(hxzId) )&#123;</span><br><span class="line">            System.out.println(<span class="string">"该"</span> + hxzId + <span class="string">"已存在"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        LogTemplate.LogForInfo(hxzId + <span class="string">"已添加定时器，时间间隔为"</span>+minute+<span class="string">"分钟"</span>);</span><br><span class="line">        elevatorTaskMap.put(hxzId,  threadPoolTaskScheduler.schedule(()-&gt;&#123;</span><br><span class="line">            <span class="comment">// 定时检测给用户推送预警信息</span></span><br><span class="line">            System.out.println(<span class="string">"定时器"</span>)</span><br><span class="line">        &#125;, <span class="keyword">new</span> CronTrigger(<span class="string">"30 0/"</span>+minute+<span class="string">" * * * *"</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 结束对应定时器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hxzId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stopCron</span><span class="params">(String hxzId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (elevatorTaskMap.get(hxzId) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            elevatorTaskMap.get(hxzId).cancel(<span class="keyword">true</span>);</span><br><span class="line">            elevatorTaskMap.remove(hxzId);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"DynamicTask.stopCron()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map <span class="title">getMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> elevatorTaskMap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态定时器"><a href="#静态定时器" class="headerlink" title="静态定时器"></a>静态定时器</h3><ul><li>@Scheduled(fixedDelay = 5000)    两次任务的间隔是<strong>前次任务的结束与下次任务的开始</strong>。</li><li>@Scheduled(fixedRate = 5000)   两次任务执行时间间隔是 <strong>任务的开始点</strong></li><li>@Scheduled(cron = “0/5 * * * * *”)     当时间达到设置的时间会触发事件。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScheduledTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每次任务执行完5秒后再执行一次</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Title</span>: testFixDelay</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>:表示上一次任务执行完成后多久再次执行，参数类型为long，单位ms;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Scheduled</span>(fixedDelay = <span class="number">5000</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">catchPicture</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"定时抓图"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每5秒执行一次任务</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Title</span>: testFixDelay</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>:表示上一次任务执行完成后多久再次执行，参数类型为long，单位ms;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Scheduled</span>(fixedRate = <span class="number">5000</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">alarm</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"定时抓图"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每5秒执行一次</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0/5 * * * * *"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"每5秒检测一次"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://blog.csdn.net/qq_34125349/article/details/77430956" target="_blank" rel="noopener">spring-boot 定时任务之Scheduled Task</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;首先这里我们需要重新认识一个类ThreadPoolTaskScheduler：线程池任务调度类，能够开启线程池进行任务调度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ThreadPoolTaskScheduler.schedule()方法会创建一个定时计划ScheduledFuture，在这个方法需要添加两个参数，Runnable（线程接口类） 和CronTrigger（定时任务触发器）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在ScheduledFuture中有一个cancel可以停止定时任务。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="springboot" scheme="http://zhizhi.tangliangdong.me/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>Linux查看文件目录大小</title>
    <link href="http://zhizhi.tangliangdong.me/2020/03/05/2020-3-5-linux-show-file-directory/"/>
    <id>http://zhizhi.tangliangdong.me/2020/03/05/2020-3-5-linux-show-file-directory/</id>
    <published>2020-03-05T08:29:44.000Z</published>
    <updated>2020-03-05T09:08:51.767Z</updated>
    
    <content type="html"><![CDATA[<p>项目上的 <code>rocketmq</code> 因为服务器硬盘满了，无法继续使用了，因此需要去清理服务器上一些没用的数据。</p><a id="more"></a><h3 id="df-h-显示磁盘空间信息"><a href="#df-h-显示磁盘空间信息" class="headerlink" title="df -h   显示磁盘空间信息"></a>df -h   显示磁盘空间信息</h3><p><img src="1.png" alt="df -h"></p><h3 id="du-sh-显示该路径下文件夹的大小"><a href="#du-sh-显示该路径下文件夹的大小" class="headerlink" title="du -sh *   显示该路径下文件夹的大小"></a>du -sh *   显示该路径下文件夹的大小</h3><p><img src="2.png" alt="du -sh *"></p><h3 id="du-s-sort-nr-根据文件夹大小排序显示文件夹"><a href="#du-s-sort-nr-根据文件夹大小排序显示文件夹" class="headerlink" title="du -s * | sort -nr   根据文件夹大小排序显示文件夹"></a>du -s * | sort -nr   根据文件夹大小排序显示文件夹</h3><p><img src="4.png" alt="du -s * | sort -nr"></p><blockquote><p>这里就不要使用 <code>du -sh *</code> 了，排序会乱</p></blockquote><h3 id="ls-lh"><a href="#ls-lh" class="headerlink" title="ls -lh"></a>ls -lh</h3><p><img src="3.png" alt="ls -lh"></p><p>该命令第5列的数字：<br>1、对于普通文件，显示的是文件的大小（字节数）<br>2、对于设备文件是指主设备号（第6列为次设备号）<br>3、对于目录，是指目录大小（目录内inode列表所占空间，而<strong>不是目录内文件所占的空间大小</strong>）<br>4、对于符号链接，是指链接文件的路径名的字节数</p><h3 id="ls和du统计机制"><a href="#ls和du统计机制" class="headerlink" title="ls和du统计机制"></a>ls和du统计机制</h3><ul><li><strong>ls</strong> 显示的是一个文件占用的磁盘空间</li><li><strong>du</strong> 显示的是一个文件的大小</li></ul><p>占用空间取决于文件系统的块（block）的大小，linux一般默认是4k(4096),因此，一个大小为1个字节的文件，最小也要占用4k，如果你创建文件系统的时候制定块大小是16K，那么即便一个文件只有1个字节，占用空间也是16K。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目上的 &lt;code&gt;rocketmq&lt;/code&gt; 因为服务器硬盘满了，无法继续使用了，因此需要去清理服务器上一些没用的数据。&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://zhizhi.tangliangdong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>hexo next主题添加note</title>
    <link href="http://zhizhi.tangliangdong.me/2020/02/26/2020-2-26-hexo-next-note/"/>
    <id>http://zhizhi.tangliangdong.me/2020/02/26/2020-2-26-hexo-next-note/</id>
    <published>2020-02-26T04:38:09.000Z</published>
    <updated>2020-03-09T07:01:26.040Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hexo-next主题不一样的提示块"><a href="#hexo-next主题不一样的提示块" class="headerlink" title="hexo next主题不一样的提示块"></a>hexo next主题不一样的提示块</h3><a id="more"></a><div class="note default">            <p>default 提示块标签</p>          </div><div class="note primary">            <p>primary 提示块标签</p>          </div><div class="note success">            <p>success 提示块标签</p>          </div><div class="note info">            <p>info 提示块标签</p>          </div><div class="note warning">            <p>warning 提示块标签</p>          </div><div class="note danger">            <p>danger 提示块标签</p>          </div><p>使用方法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><h3 id="选项卡功能"><a href="#选项卡功能" class="headerlink" title="选项卡功能"></a>选项卡功能</h3><hr><div class="tabs" id="tab"><ul class="nav-tabs"><li class="tab"><a href="#tab-1">tab1</a></li><li class="tab active"><a href="#tab-2">tab2</a></li><li class="tab"><a href="#tab-3">A</a></li></ul><div class="tab-content"><div class="tab-pane" id="tab-1"><p><strong>选项卡 1</strong> </p></div><div class="tab-pane active" id="tab-2"><p><strong>选项卡 2</strong></p></div><div class="tab-pane" id="tab-3"><p><strong>选项卡 3</strong> </p></div></div></div><hr><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">tabs</span> tab,2 %&#125;</span><span class="xml"> 名字为tab，默认在第1个选项卡，如果是-1则隐藏</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab tab1 --&gt;</span></span></span><br><span class="line"><span class="xml">**选项卡 1** </span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab tab2 --&gt;</span></span></span><br><span class="line"><span class="xml">**选项卡 2**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab A --&gt;</span></span></span><br><span class="line"><span class="xml">**选项卡 3** 名字为A</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endtabs</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h3 id="文本居中的引用"><a href="#文本居中的引用" class="headerlink" title="文本居中的引用"></a>文本居中的引用</h3><blockquote class="blockquote-center"><p>人的一切痛苦，本质上都是对自己无能的愤怒</p></blockquote><blockquote class="blockquote-center"><p>王小波 </p></blockquote><figure class="highlight markdown"><figcaption><span>标签调用方法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 其中 class="blockquote-center" 是必须的 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">"blockquote-center"</span>&gt;</span></span>blah blah blah<span class="xml"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span></span></span><br><span class="line">&#123;% centerquote %&#125;人的一切痛苦，本质上都是对自己无能的愤怒&#123;% endcenterquote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 标签别名 --&gt;</span></span></span><br><span class="line">&#123;% cq %&#125; 王小波 &#123;% endcq %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>  参考自</p><ul><li><a href="https://jinnsjj.github.io/uncategorized/hexo-next-note/" target="_blank" rel="noopener">在hexo-NexT中插入note提示块</a></li><li><a href="https://theme-next.iissnan.com/tag-plugins.html" target="_blank" rel="noopener">内置标签</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;hexo-next主题不一样的提示块&quot;&gt;&lt;a href=&quot;#hexo-next主题不一样的提示块&quot; class=&quot;headerlink&quot; title=&quot;hexo next主题不一样的提示块&quot;&gt;&lt;/a&gt;hexo next主题不一样的提示块&lt;/h3&gt;
    
    </summary>
    
      <category term="功能" scheme="http://zhizhi.tangliangdong.me/categories/%E5%8A%9F%E8%83%BD/"/>
    
    
      <category term="hexo" scheme="http://zhizhi.tangliangdong.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>linux find命令常用操作</title>
    <link href="http://zhizhi.tangliangdong.me/2020/02/25/2020-02-25-linux-find/"/>
    <id>http://zhizhi.tangliangdong.me/2020/02/25/2020-02-25-linux-find/</id>
    <published>2020-02-25T13:49:39.000Z</published>
    <updated>2020-03-09T07:01:26.034Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查找指定名称的档案"><a href="#查找指定名称的档案" class="headerlink" title="查找指定名称的档案"></a>查找指定名称的档案</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name nginx</span><br></pre></td></tr></table></figure><p>之后会列出所有包含nginx的文件或文件夹的路径</p><blockquote><p>  查找不区分字母大小写</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -iname nginx</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="仅查找目录或文件"><a href="#仅查找目录或文件" class="headerlink" title="仅查找目录或文件"></a>仅查找目录或文件</h3><p><code>find</code>的<code>-type</code>参数可以指定所要查找的档案的类型，常用：</p><ul><li><code>-type d</code>：只查找目录类型。<strong>d</strong> 是directory的首字母，表示 “<strong>目录</strong>”。</li><li><code>-type f</code>：只查找文件类型。<strong>f</strong> 是file的首字母，表示 “<strong>文件</strong>”。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只查找名为nginx的文件夹</span></span><br><span class="line">find / -<span class="built_in">type</span> d -name nginx </span><br><span class="line"></span><br><span class="line"><span class="comment"># 只查找名为nginx的文件</span></span><br><span class="line">find / -<span class="built_in">type</span> f -name nginx</span><br></pre></td></tr></table></figure><h3 id="操作查找结果"><a href="#操作查找结果" class="headerlink" title="操作查找结果"></a>操作查找结果</h3><blockquote><p>  find 命令会默认显示每个查找到文件。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name <span class="string">"*.jpg"</span></span><br></pre></td></tr></table></figure><p>等价于</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name <span class="string">"*.jpg"</span> -<span class="built_in">print</span></span><br></pre></td></tr></table></figure><p>格式化打印结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name <span class="string">"*.jpg"</span> -<span class="built_in">printf</span> <span class="string">"%p - %u\n"</span></span><br></pre></td></tr></table></figure><ul><li>%p：文件名</li><li>%u：文件的所有者</li></ul><h4 id="调用命令"><a href="#调用命令" class="headerlink" title="调用命令"></a>调用命令</h4><p><code>-exec</code>可以将搜索出来的结果，输入到其他命令中进行再处理。</p><p>比如在查找出来的文件中搜索字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在所有的nginx.conf文件中搜索8888的字符串，并将包含的文件列出来。</span></span><br><span class="line">find ./ -name <span class="string">"nginx.conf"</span> -<span class="built_in">exec</span> grep -l <span class="string">"8888"</span> &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在所有的nginx.conf文件中搜索8888的字符串，并将包含的文件和所在行的内容 列出来。</span></span><br><span class="line">find ./ -name <span class="string">"nginx.conf"</span> -<span class="built_in">exec</span> grep -n <span class="string">"8888"</span> ./ &#123;&#125; \;</span><br></pre></td></tr></table></figure><ul><li>这个操作不必用双引号括起来</li><li>*<em>{} *</em>会用查找到的每个文件来替换</li><li><strong>\ **用来转义</strong>; 字符**</li><li>*<em>; *</em>是必须的结尾</li></ul><div class="note info">            <p>因为测试环境装了很多的nginx，find搜索出来的nginx太多，端口号为nginx的配置文件找不到，通过<code>ps</code>和<code>netstat</code>命令也无法确定该nginx的目录。因此就将 find 和 grep命令结合起来使用。</p>          </div><h3 id="文件的修改与存取时间"><a href="#文件的修改与存取时间" class="headerlink" title="文件的修改与存取时间"></a>文件的修改与存取时间</h3><ul><li>-atime （access time）在过去n天内被读取过的文件</li><li>-ctime 在过去n天内被修改过的文件 </li><li>-amin 在过去 n 分钟内被读取过</li><li>-cmin 在过去 n 分钟内被修改过</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查找7天内被修改过的文件</span></span><br><span class="line">find / -ctime 7</span><br></pre></td></tr></table></figure><h3 id="根据文件大小查找"><a href="#根据文件大小查找" class="headerlink" title="根据文件大小查找"></a>根据文件大小查找</h3><p>使用 <code>-size</code>参数可以指定文件的大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查找大小刚好是50MB的文件</span></span><br><span class="line">find / -size 50M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找大于50KB的文件</span></span><br><span class="line">find . -size +50K</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找小于1G的文件</span></span><br><span class="line">finmd . -size -1G</span><br></pre></td></tr></table></figure><hr><blockquote><p>  参考自 <a href="https://blog.gtwang.org/linux/unix-linux-find-command-examples/" target="_blank" rel="noopener"><a href="https://blog.gtwang.org/linux/unix-linux-find-command-examples/" target="_blank" rel="noopener">Unix/Linux 的 find 指令使用教學、技巧與範例整理</a></a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;查找指定名称的档案&quot;&gt;&lt;a href=&quot;#查找指定名称的档案&quot; class=&quot;headerlink&quot; title=&quot;查找指定名称的档案&quot;&gt;&lt;/a&gt;查找指定名称的档案&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;find / -name nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;之后会列出所有包含nginx的文件或文件夹的路径&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  查找不区分字母大小写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;find / -iname nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://zhizhi.tangliangdong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>更新centos7安装mysql5.7</title>
    <link href="http://zhizhi.tangliangdong.me/2020/02/23/2020-2-23-centos7-install-mysql/"/>
    <id>http://zhizhi.tangliangdong.me/2020/02/23/2020-2-23-centos7-install-mysql/</id>
    <published>2020-02-22T23:59:07.000Z</published>
    <updated>2020-03-09T07:01:26.039Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-添加Mysql5-7仓库"><a href="#1-添加Mysql5-7仓库" class="headerlink" title="1.添加Mysql5.7仓库"></a>1.添加Mysql5.7仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -ivh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="2-确认mysql仓库是否添加成功"><a href="#2-确认mysql仓库是否添加成功" class="headerlink" title="2. 确认mysql仓库是否添加成功"></a>2. 确认mysql仓库是否添加成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum repolist all | grep mysql | grep enabled</span><br></pre></td></tr></table></figure><p>如果展示像下面,则表示成功添加仓库:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql-connectors-community/x86_64  MySQL Connectors Community    enabled:     51</span><br><span class="line">mysql-tools-community/x86_64       MySQL Tools Community         enabled:     63</span><br><span class="line">mysql57-community/x86_64           MySQL 5.7 Community Server    enabled:    267</span><br></pre></td></tr></table></figure><h3 id="3-开始安装Mysql5-7"><a href="#3-开始安装Mysql5-7" class="headerlink" title="3. 开始安装Mysql5.7"></a>3. 开始安装Mysql5.7</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><h3 id="4-启动mysql"><a href="#4-启动mysql" class="headerlink" title="4. 启动mysql"></a>4. 启动mysql</h3><ul><li>启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start mysqld</span><br></pre></td></tr></table></figure><ul><li>设置系统启动时自动启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure><ul><li>查看启动状态</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status mysqld</span><br></pre></td></tr></table></figure><h3 id="5-Mysql的安全设置"><a href="#5-Mysql的安全设置" class="headerlink" title="5. Mysql的安全设置"></a>5. Mysql的安全设置</h3><p>CentOS上的root默认密码可以在文件/var/log/mysqld.log找到，通过下面命令可以打印出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/<span class="built_in">log</span>/mysqld.log | grep -i <span class="string">'temporary password'</span></span><br></pre></td></tr></table></figure><p>登录后需要修改root密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user <span class="string">'root'</span>@<span class="string">'localhost'</span> identified by <span class="string">'123456'</span>;</span><br></pre></td></tr></table></figure><blockquote><p>  修改用户密码</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update mysql.user <span class="built_in">set</span> authentication_string=password(<span class="string">'123qwe'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span> and Host = <span class="string">'localhost'</span>;</span><br></pre></td></tr></table></figure><hr><p>执行下面命令进行安全设置，这个命令会进行设置root密码设置，移除匿名用户，禁止root用户远程连接等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><h3 id="6-创建用户、赋予权限"><a href="#6-创建用户、赋予权限" class="headerlink" title="6. 创建用户、赋予权限"></a>6. 创建用户、赋予权限</h3><ul><li>创建远程登录用户</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER <span class="string">'root'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'123456'</span>;</span><br></pre></td></tr></table></figure><ul><li>赋予该用户所有的权限</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'root'</span>@<span class="string">'localhost'</span> WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><h3 id="7-设置数据库编码为utf8"><a href="#7-设置数据库编码为utf8" class="headerlink" title="7. 设置数据库编码为utf8"></a>7. 设置数据库编码为utf8</h3><ul><li>打开配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/my.cnf</span><br></pre></td></tr></table></figure><ul><li>在[mysqld]，[client]，[mysql]节点下添加编码设置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">collation-server = utf8_unicode_ci</span><br><span class="line">init-connect=<span class="string">'SET NAMES utf8'</span></span><br><span class="line">character-set-server = utf8</span><br></pre></td></tr></table></figure><ul><li>重启Mysql即可</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart mysqld</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-添加Mysql5-7仓库&quot;&gt;&lt;a href=&quot;#1-添加Mysql5-7仓库&quot; class=&quot;headerlink&quot; title=&quot;1.添加Mysql5.7仓库&quot;&gt;&lt;/a&gt;1.添加Mysql5.7仓库&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo rpm -ivh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://zhizhi.tangliangdong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux curl模拟 GET/POST 调试接口</title>
    <link href="http://zhizhi.tangliangdong.me/2020/02/22/2020-2-22-linux-debug-interface/"/>
    <id>http://zhizhi.tangliangdong.me/2020/02/22/2020-2-22-linux-debug-interface/</id>
    <published>2020-02-22T14:02:57.000Z</published>
    <updated>2020-03-09T07:01:26.036Z</updated>
    
    <content type="html"><![CDATA[<h2 id="curl-GET请求"><a href="#curl-GET请求" class="headerlink" title="curl GET请求"></a>curl GET请求</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:8088/project/getProjectList?pageNum=1&amp;pageSize=10</span><br></pre></td></tr></table></figure><p>若是想看更加详细的请求信息，我们可以再加上 -v 参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:8088/project/getProjectList?pageNum=1&amp;pageSize=10 -v</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="curl-POST请求"><a href="#curl-POST请求" class="headerlink" title="curl POST请求"></a>curl POST请求</h2><blockquote><p>  我们可以用 <code>-X POST</code> 来申明我们的请求方法，默认是GET请求，用 <code>-d</code> 参数，来传送我们的参数。</p></blockquote><div class="note danger">            <p>所以，我们可以用 <code>-X PUT</code> 和 <code>-X DELETE</code> 来指定另外的请求方法。</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -d <span class="string">"mobile=18257146867&amp;authCode=123456&amp;CID=0&amp;platform=1"</span> http://localhost:8088/login/loginByAuthCode</span><br></pre></td></tr></table></figure><p>如果要传输json格式参数，则可以用 <code>-H</code> 参数来申明请求的 <code>header</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl localhost:9999/api/send -X POST -H <span class="string">"Content-Type:application/json"</span> -d <span class="string">'"username":"xiaotang","content":"hello world"'</span></span><br></pre></td></tr></table></figure><p>我们可以用 <code>-H</code> 来设置更多的 <code>header</code> 比如，用户的 <code>token</code> 之类的。</p><h2 id="curl-POST-上传文件"><a href="#curl-POST-上传文件" class="headerlink" title="curl POST 上传文件"></a>curl POST 上传文件</h2><p>可以用 <code>-F &quot;file=@__FILE_PATH__&quot;</code> 的格式，传输文件即可。命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl localhost:8088/upload/file -F <span class="string">"file=@/mnt/1463739554391.jpg"</span> -F <span class="string">"fileType=2"</span> -F <span class="string">"location=杭州"</span></span><br></pre></td></tr></table></figure><p>每个参数都要单独用 -F 命令单独写</p><hr><p>参考自 <a href="https://blog.csdn.net/FungLeo/article/details/80703365" target="_blank" rel="noopener">curl 模拟 GET\POST 请求，以及 curl post 上传文件</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;curl-GET请求&quot;&gt;&lt;a href=&quot;#curl-GET请求&quot; class=&quot;headerlink&quot; title=&quot;curl GET请求&quot;&gt;&lt;/a&gt;curl GET请求&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl http://localhost:8088/project/getProjectList?pageNum=1&amp;amp;pageSize=10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;若是想看更加详细的请求信息，我们可以再加上 -v 参数&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl http://localhost:8088/project/getProjectList?pageNum=1&amp;amp;pageSize=10 -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://zhizhi.tangliangdong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>docker 修改创建容器时的参数</title>
    <link href="http://zhizhi.tangliangdong.me/2020/02/19/2020-2-19-docker-modify-config/"/>
    <id>http://zhizhi.tangliangdong.me/2020/02/19/2020-2-19-docker-modify-config/</id>
    <published>2020-02-19T06:59:52.000Z</published>
    <updated>2020-03-09T07:01:26.089Z</updated>
    
    <content type="html"><![CDATA[<p>每次docker 创建容器的时候总是很快就建好了，但是之后会发现总是少写了参数，比如mysql的 <code>MYSQL_ROOT_PASSWORD</code>、tomcat和mysql的 <code>--link</code> 。但是删了容器重新来过也麻烦。但是直接进入到容器里吧，连 <code>vim</code>、<code>vi</code> 的编辑器都没有。但是我们还可以通过修改容器配置文件的方法来达到我们的目的。</p><p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p><a id="more"></a><p>=======</p><!-- more --><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>d3c8f929fa1bffaafb4080236a5259cdcff6f1a4</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><ul><li>停止容器 <code>docker stop &lt;container ID&gt;</code></li><li>停止docker服务 <code>systemctl stop docker</code></li><li>进入到 <code>/var/lib/docker/containers/&lt;container ID&gt;</code>，其下有两个文件<ul><li>hostconfig.json</li><li>config.v2.json</li></ul></li></ul><p>比如修改容器的端口映射：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/lib/docker/containers/&lt;container ID&gt;`  <span class="comment">#容器id</span></span><br><span class="line"></span><br><span class="line">vim hostconfig.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 之前的端口映射</span></span><br><span class="line"><span class="string">"PortBindings"</span>:&#123;<span class="string">"8080/tcp"</span>:[&#123;<span class="string">"HostIp"</span>:<span class="string">""</span>,<span class="string">"HostPort"</span>:<span class="string">"9001"</span>&#125;]&#125;</span><br><span class="line"><span class="comment"># 前一个数字是容器端口, 后一个是宿主机端口。将宿主机的9001端口映射到容器的8080端口</span></span><br></pre></td></tr></table></figure><ul><li>启动docker服务(systemctl start docker)</li><li>启动容器(docker start <container id>)</container></li></ul><p><strong>hostconfig.json</strong></p><p><img src="1.png" alt="hostconfig.json"></p><p><strong>config.v2.json</strong></p><p><img src="2.png" alt="config.v2.json"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每次docker 创建容器的时候总是很快就建好了，但是之后会发现总是少写了参数，比如mysql的 &lt;code&gt;MYSQL_ROOT_PASSWORD&lt;/code&gt;、tomcat和mysql的 &lt;code&gt;--link&lt;/code&gt; 。但是删了容器重新来过也麻烦。但是直接进入到容器里吧，连 &lt;code&gt;vim&lt;/code&gt;、&lt;code&gt;vi&lt;/code&gt; 的编辑器都没有。但是我们还可以通过修改容器配置文件的方法来达到我们的目的。&lt;/p&gt;
&lt;p&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="docker" scheme="http://zhizhi.tangliangdong.me/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>springboot使用ResponseBodyAdvice统一包装结果</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/16/2020-1-16-springboot-return-data-pack/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/16/2020-1-16-springboot-return-data-pack/</id>
    <published>2020-01-16T02:22:38.000Z</published>
    <updated>2020-01-16T03:37:40.691Z</updated>
    
    <content type="html"><![CDATA[<p>在我们使用SpringBoot编写接口的时候，最好是返回一个统一格式的JSON，该格式包含错误码，附带信息，以及携带的数据。这样前端在解析的时候就能统一解析，同时携带错误码可以更加容易的排查错误。</p><a id="more"></a><h2 id="添加ResponseBodyAdvice"><a href="#添加ResponseBodyAdvice" class="headerlink" title="添加ResponseBodyAdvice"></a>添加ResponseBodyAdvice</h2><p><strong><code>ResponseBodyAdvice</code>接口里一共包含了两个方法</strong></p><ul><li><code>supports</code>:该组件是否支持给定的控制器方法返回类型和选择的{@code HttpMessageConverter}类型。<strong>用于判断是否需要做处理。</strong></li><li><code>beforeBodyWrite</code>:在选择{@code HttpMessageConverter}之后调用，在调用其写方法之前调用。<strong>用于做返回处理。</strong></li></ul><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.dto.ResponseBodyDTO</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回的结果类</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseBodyDTO</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> Object result;</span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResponseBodyDTO</span><span class="params">(Object result)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = <span class="number">200</span>;</span><br><span class="line">        <span class="keyword">this</span>.success = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.msg = <span class="string">"操作成功"</span>;</span><br><span class="line">        <span class="keyword">this</span>.result = result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResponseBodyDTO</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.config.ResponseDataHandler</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseDataHandler</span> <span class="keyword">implements</span> <span class="title">ResponseBodyAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supports</span><span class="params">(MethodParameter methodParameter, Class aClass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">beforeBodyWrite</span><span class="params">(Object body, MethodParameter returnType, MediaType mediaType, Class aClass, ServerHttpRequest serverHttpRequest, ServerHttpResponse serverHttpResponse)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(! (body <span class="keyword">instanceof</span> ResponseBodyDTO))&#123;</span><br><span class="line">            ResponseBodyDTO responseBodyDTO = <span class="keyword">new</span> ResponseBodyDTO();</span><br><span class="line">            responseBodyDTO.setCode(<span class="number">200</span>);</span><br><span class="line">            responseBodyDTO.setMsg(<span class="string">"操作成功"</span>);</span><br><span class="line">            responseBodyDTO.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">            responseBodyDTO.setResult(body);</span><br><span class="line">            body = responseBodyDTO;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> body;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"getMap"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"username"</span>, <span class="string">"xiaotang"</span>);</span><br><span class="line">    map.put(<span class="string">"age"</span>, <span class="number">1</span>);</span><br><span class="line">    map.put(<span class="string">"sex"</span>, <span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="3.png" alt></p><p>返回结果已经成功包装了。</p><hr><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.controller.LoginController</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"login"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"test"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果如上所示，最后返回值是null，则会报错，因此需要再添加一个 <strong>HttpMessageConverter</strong></p><p><img src="2.png" alt></p><hr><h2 id="添加-HttpMessageConverter"><a href="#添加-HttpMessageConverter" class="headerlink" title="添加 HttpMessageConverter"></a>添加 HttpMessageConverter</h2><p>简单来说只要在添加 WebMvcConfigurer中添加 <code>MappingJackson2HttpMessageConverter</code></p><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.config.WebConfigurer</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfigurer</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureMessageConverters</span><span class="params">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> </span>&#123;</span><br><span class="line">converters.add(<span class="number">0</span>, <span class="keyword">new</span> MappingJackson2HttpMessageConverter());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note danger">            <p>converters 列表里的转换器位置越靠前，优先级越高，因此在后面的转换器可能会被覆盖，因此我们自己添加的converter 最好添加在前面，以免失效。</p>          </div><h3 id="使用-FastJsonHttpMessageConverter"><a href="#使用-FastJsonHttpMessageConverter" class="headerlink" title="使用 FastJsonHttpMessageConverter"></a>使用 FastJsonHttpMessageConverter</h3><blockquote><p>如果你使用 Spring MVC 来构建 Web 应用并对性能有较高的要求的话，可以使用 Fastjson 提供的<code>FastJsonHttpMessageConverter</code> 来替换 Spring MVC 默认的 <code>HttpMessageConverter</code> 以提高 <code>@RestController @ResponseBody @RequestBody</code> 注解的 JSON序列化速度。而且可选择的配置也很多。</p></blockquote><div class="note info">            <p>FastJsonHttpMessageConverter 可以将返回对象中的 <code>list: null</code> 转换成 []，还可以给 int 、 boolean、string 附上初始值 0、false、””。</p>          </div><p>FastJsonHttpMessageConverter是基于fastjson的一种HttpMessageConverter，spring系统默认使用的是MappingJackson2HttpMessageConverter，因此添加的 fastJsonHttpMessageConverter 一定要放在MappingJackson2HttpMessageConverter 之前。</p><p><img src="1.png" alt="Converters"></p><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.config.WebConfigurer</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfigurer</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureMessageConverters</span><span class="params">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        converters.add(0, new MappingJackson2HttpMessageConverter());</span></span><br><span class="line">        FastJsonHttpMessageConverter fastConverter = <span class="keyword">new</span> FastJsonHttpMessageConverter();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、添加fastjson的配置信息</span></span><br><span class="line">        FastJsonConfig fastJsonConfig = <span class="keyword">new</span> FastJsonConfig();</span><br><span class="line"></span><br><span class="line">        SerializerFeature[] serializerFeatures = <span class="keyword">new</span> SerializerFeature[]&#123;</span><br><span class="line">                <span class="comment">//    输出key是包含双引号</span></span><br><span class="line"><span class="comment">//                SerializerFeature.QuoteFieldNames,</span></span><br><span class="line">                <span class="comment">//    是否输出为null的字段,若为null 则显示该字段</span></span><br><span class="line">                SerializerFeature.WriteMapNullValue,</span><br><span class="line">                <span class="comment">//    数值字段如果为null，则输出为0</span></span><br><span class="line">                SerializerFeature.WriteNullNumberAsZero,</span><br><span class="line">                <span class="comment">//     List字段如果为null,输出为[],而非null</span></span><br><span class="line"><span class="comment">//                SerializerFeature.WriteNullListAsEmpty,</span></span><br><span class="line">                <span class="comment">//    字符类型字段如果为null,输出为"",而非null</span></span><br><span class="line">                SerializerFeature.WriteNullStringAsEmpty,</span><br><span class="line">                <span class="comment">//    Boolean字段如果为null,输出为false,而非null</span></span><br><span class="line">                SerializerFeature.WriteNullBooleanAsFalse,</span><br><span class="line">                <span class="comment">//    Date的日期转换器</span></span><br><span class="line">                SerializerFeature.WriteDateUseDateFormat,</span><br><span class="line">                <span class="comment">//    循环引用</span></span><br><span class="line">                SerializerFeature.DisableCircularReferenceDetect,</span><br><span class="line">        &#125;;</span><br><span class="line">        fastJsonConfig.setSerializerFeatures(serializerFeatures);</span><br><span class="line">        fastJsonConfig.setCharset(Charset.forName(<span class="string">"UTF-8"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3、在convert中添加配置信息</span></span><br><span class="line">        fastConverter.setFastJsonConfig(fastJsonConfig);</span><br><span class="line">        converters.add(<span class="number">0</span>, fastConverter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.dto.UserInfo</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Boolean sex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.controller.LoginController</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"testobject"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> UserInfo <span class="title">testobject</span><span class="params">()</span></span>&#123;</span><br><span class="line">    UserInfo userInfo = <span class="keyword">new</span> UserInfo();</span><br><span class="line">    userInfo.setUsername(<span class="string">"hello world"</span>);</span><br><span class="line">    <span class="keyword">return</span> userInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回值：</p><p><img src="4.png" alt="返回值"></p><p>list, string, boolean 类型都是非null了。</p><h2 id="更多的配置接口-WebMvcConfigurer"><a href="#更多的配置接口-WebMvcConfigurer" class="headerlink" title="更多的配置接口 WebMvcConfigurer"></a>更多的配置接口 WebMvcConfigurer</h2><p>参考 <a href="https://blog.csdn.net/fmwind/article/details/81235401" target="_blank" rel="noopener">Spring Boot配置接口 WebMvcConfigurer</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://blog.csdn.net/BBsatan/article/details/98748229" target="_blank" rel="noopener">springboot 使用fastjson替代默认jackson（踩坑路）</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在我们使用SpringBoot编写接口的时候，最好是返回一个统一格式的JSON，该格式包含错误码，附带信息，以及携带的数据。这样前端在解析的时候就能统一解析，同时携带错误码可以更加容易的排查错误。&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="springboot" scheme="http://zhizhi.tangliangdong.me/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>近视眼将来不用戴老花眼镜吗？</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-myopia-presbyopia/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-myopia-presbyopia/</id>
    <published>2020-01-10T06:35:53.000Z</published>
    <updated>2020-01-15T02:19:17.609Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>近视眼可以和老花眼相互抵消吗，让眼睛的视力恢复如初吗？</p></blockquote><a id="more"></a><p>因为我家人的眼睛几乎都是不近视的，而我爷爷奶奶甚至是爸爸早早的就戴上了老花镜，手机的字也调的很大，成了名副其实的老花眼，因此我也将 老花眼和远视眼划上了等号，也让我产生了如上的误解。</p><p>曾经也有人提出说不会抵消，那不会抵消的话，那近视眼一旦患上远视眼<strong>岂不是近处看不清，远处也看不清…</strong>那不是成了名副其实盲人了。应该不会这样吧:anger:</p><p>甚至我也对近视眼产生羡慕，因为在不久的将来近视眼也能恢复正常。</p><div class="note danger">            <p>但实际上，并没有那么简单，也没用我所想的那么美好。</p>          </div><p><img src="3.png" alt></p><h3 id="老花眼是什么？"><a href="#老花眼是什么？" class="headerlink" title="老花眼是什么？"></a>老花眼是什么？</h3><p>老花眼是一种正常的生理退化状态，是当人们步入中老年后必然会出现的视力问题，一般来说，通常出现在40-45岁以后。</p><h3 id="老花眼的原因"><a href="#老花眼的原因" class="headerlink" title="老花眼的原因"></a>老花眼的原因</h3><p>晶状体作为眼球重要的组成部分之一，就像是相机中的镜头一样，对光线有着屈光和调节的作用。</p><p>而随着年龄的增长，晶状体的硬化、增厚、弹性减弱和调节能力逐渐减退，以及眼部肌肉的调节能力也随之减退。</p><p>当得了老花眼的人看近物时，由于影像投射在视网膜上时无法完全聚焦，就导致了看近距离的物体时会变得模糊不清。</p><h3 id="近视眼的老花"><a href="#近视眼的老花" class="headerlink" title="近视眼的老花"></a>近视眼的老花</h3><p>近视眼和远视眼的抵消只是表面佩戴眼镜度数上的体现，但近视眼和老花眼并不会消失，我们眼镜的度数并不会因此发生改变。</p><p>近视眼和老花眼的病理并不相同，老花作为眼球自然的老化现象，是无法改变本来的近视眼的眼球状态的。</p><p>因此当近视眼老花后，看远处需要降低部分的近视度数才能看清。</p><ul><li>如果近视度数较低的话，那么可能看远处并不需要佩戴眼镜，看近处则需要根据个人情况。</li><li>如果是高度近视者的话，由于本来就看不清远处，加上眼睛调节能力减弱，很可能出现近处远处都看不清的情况，这样可能需要使用度数不同的眼睛（一副近视眼镜，一副老花眼镜）。</li></ul><p><img src="1.jpg" alt></p><p>所以开头的答案以及很明显了，得近视眼的再患上老花眼，就真的可能<strong>近的看不见</strong>，<strong>远的也看不见</strong>了</p><p><img src="4.png" alt></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.zhihu.com/question/20003947" target="_blank" rel="noopener">近视眼将来不用戴老花眼镜吗？ - 知乎</a> </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;近视眼可以和老花眼相互抵消吗，让眼睛的视力恢复如初吗？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活" scheme="http://zhizhi.tangliangdong.me/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>文件描述符 与 /dev/null</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-file-descriptor/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-file-descriptor/</id>
    <published>2020-01-10T02:55:21.000Z</published>
    <updated>2020-01-14T02:22:14.857Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>文件描述符是与文件输入、输出关联的整数。它们用来跟踪已打开的文件。最常见的文件描述符是stidin、stdout、和stderr。我们可以将某个文件描述符的内容重定向到另外一个文件描述符中。<br>                                                                                                    ——<em>《linux shell脚本攻略》</em></p></blockquote><a id="more"></a><h2 id="文件名描述符"><a href="#文件名描述符" class="headerlink" title="文件名描述符"></a>文件名描述符</h2><ul><li>0 —— stdin（标准输入）</li><li>1 —— stdout （标准输出）</li><li>2 —— stderr （标准错误输出）</li></ul><blockquote><p>重定向操作是shell命令对应的文件描述符输出的文本信息重新输入到另外一个文件中。</p></blockquote><p><strong>重定向标准输出stdout：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ls 123.txt 1&gt;stdout.txt</span><br><span class="line">$ cat stdout.txt</span><br><span class="line">123.txt</span><br></pre></td></tr></table></figure><div class="note info">            <p>标准输出的 <strong>1</strong> 可以省略，默认就是标准输出</p>          </div><div class="note danger">            <p>1&gt;stdout.txt，中间不能有任何的空格</p>          </div><p><strong>重定向标准错误stderr</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls abc.txt 2&gt;stderr.txt</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat stderr.txt</span></span><br><span class="line">ls: cannot access abc.txt: No such file or directory</span><br></pre></td></tr></table></figure><p>标准错误的重定向到了 stderr.txt 文件中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 你可以将stderr单独定向到一个文件，将stdout重定向到另一个文件：</span></span><br><span class="line">$ cmd 2&gt;stderr.txt 1&gt;stdout.txt</span><br><span class="line"><span class="comment"># stderr 和 stdout 都重定向到一个文件中</span></span><br><span class="line">$ cmd &gt; output.txt 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h2 id="linux特殊文件"><a href="#linux特殊文件" class="headerlink" title="linux特殊文件"></a>linux特殊文件</h2><blockquote><p>/dev/null是一个特殊的设备文件，这个文件接收到的任何数据都会被丢弃。因此，null这个设备通常也被成为位桶（bit bucket）或黑洞。</p><p>​                                                            ——《linux shell脚本攻略》</p></blockquote><p>重定向操作给这个 /dev/null 文件的所有东西都会被丢弃。因此如果不想让输出结果打印到控制台，就可以将输出重定向到 <em>/dev/null</em> 文件中。（可以标准错误重定向到 /dev/null 文件中）</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.zhihu.com/question/53295083/answer/135258024" target="_blank" rel="noopener">shell程序中 2&gt; /dev/null 代表什么意思？ - 裕用ID的回答 - 知乎</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;文件描述符是与文件输入、输出关联的整数。它们用来跟踪已打开的文件。最常见的文件描述符是stidin、stdout、和stderr。我们可以将某个文件描述符的内容重定向到另外一个文件描述符中。&lt;br&gt;                                                                                                    ——&lt;em&gt;《linux shell脚本攻略》&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://zhizhi.tangliangdong.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="linux" scheme="http://zhizhi.tangliangdong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>springcloud+nacos+seata 实现分布式事务管理</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-springcloud-nacos-seata/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-springcloud-nacos-seata/</id>
    <published>2020-01-10T02:00:43.000Z</published>
    <updated>2020-01-15T01:29:00.081Z</updated>
    
    <content type="html"><![CDATA[<p><code>Seata</code> 是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。<code>Seata</code> 将为用户提供了 AT、TCC、SAGA 和 XA 事务模式，为用户打造一站式的分布式解决方案。</p><a id="more"></a><ul><li>Seata的整合样例 <a href="https://github.com/seata/seata-samples.git" target="_blank" rel="noopener">Seata Samples</a></li></ul><p>如果​有​疑惑​的​可以去​看​看官方样例是如何使用的​，​依样画葫芦总是会简单​很多:smile:</p><h2 id="下载启动seata"><a href="#下载启动seata" class="headerlink" title="下载启动seata"></a>下载启动seata</h2><p>在 <a href="https://github.com/seata/seata" target="_blank" rel="noopener">Seata</a> 克隆代码，然后用idea打开启动</p><p><img src="1.png" alt="Seata Samples"></p><h3 id="seata-server模块"><a href="#seata-server模块" class="headerlink" title="seata-server模块"></a>seata-server模块</h3><figure class="highlight bash"><figcaption><span>/server/src/main/resources/register.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">registry &#123;</span><br><span class="line">  <span class="comment"># file 、nacos 、eureka、redis、zk、consul、etcd3、sofa</span></span><br><span class="line">  <span class="built_in">type</span> = <span class="string">"nacos"</span></span><br><span class="line"></span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = <span class="string">"localhost"</span></span><br><span class="line">    namespace = <span class="string">"public"</span></span><br><span class="line">    cluster = <span class="string">"default"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">config &#123;</span><br><span class="line">  <span class="comment"># file、nacos、apollo、zk、consul、etcd3</span></span><br><span class="line">  <span class="comment"># 配置中心的选择</span></span><br><span class="line">  <span class="built_in">type</span> = <span class="string">"file"</span></span><br><span class="line"></span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = <span class="string">"localhost"</span></span><br><span class="line">    namespace = <span class="string">"public"</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  file &#123;</span><br><span class="line">    name = <span class="string">"file.conf"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info">            <p>这里使用 nacos 作为注册中心，并采用 file.conf 配置的形式</p>          </div><figure class="highlight bash"><figcaption><span>/server/src/main/resources/file.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">service &#123;</span><br><span class="line">  <span class="comment">#transaction service group mapping</span></span><br><span class="line">  vgroup_mapping.my_test_tx_group = <span class="string">"default"</span></span><br><span class="line">  <span class="comment"># 这里的是之后对每个微服务进行配置所需要用到的</span></span><br><span class="line">  service.vgroup_mapping.order-service-fescar-service-group=<span class="string">"default"</span></span><br><span class="line">  service.vgroup_mapping.account-service-fescar-service-group=<span class="string">"default"</span></span><br><span class="line">  <span class="comment"># only support when registry.type=file, please don't set multiple addresses</span></span><br><span class="line">  default.grouplist = <span class="string">"127.0.0.1:8091"</span></span><br><span class="line">  <span class="comment"># disable seata</span></span><br><span class="line">  disableGlobalTransaction = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## transaction log store, only used in seata-server</span></span><br><span class="line">store &#123;</span><br><span class="line">  <span class="comment">## store mode: file、db</span></span><br><span class="line">  mode = <span class="string">"db"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## file store property</span></span><br><span class="line">  file &#123;</span><br><span class="line">    <span class="comment">## store location dir</span></span><br><span class="line">    dir = <span class="string">"sessionStore"</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">## database store property</span></span><br><span class="line">  db &#123;</span><br><span class="line">    <span class="comment">## the implement of javax.sql.DataSource, such as DruidDataSource(druid)/BasicDataSource(dbcp) etc.</span></span><br><span class="line">    datasource = <span class="string">"dbcp"</span></span><br><span class="line">    <span class="comment">## mysql/oracle/h2/oceanbase etc.</span></span><br><span class="line">    db-type = <span class="string">"mysql"</span></span><br><span class="line">    driver-class-name = <span class="string">"com.mysql.jdbc.Driver"</span></span><br><span class="line">    url = <span class="string">"jdbc:mysql://116.62.14.208:3306/seata"</span></span><br><span class="line">    user = <span class="string">"root"</span></span><br><span class="line">    password = <span class="string">"123456"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建seata数据库"><a href="#创建seata数据库" class="headerlink" title="创建seata数据库"></a>创建seata数据库</h3><p>seata 选择 store.mode = “db”，则需要创建数据库。</p><p>seata 所需的三个数据库，对应的sql的文件在根目录下的 <code>/script/server/db/mysql.sql</code></p><p><img src="4.png" alt="seata mysql"></p><p><img src="2.png" alt="seata sql"></p><p>然后就可以启动 seata-server，当然在此之前已经将nacos启动了，地址为<code>localhost;8848</code></p><h2 id="配置微服务-Account-Server"><a href="#配置微服务-Account-Server" class="headerlink" title="配置微服务 Account-Server"></a>配置微服务 Account-Server</h2><p> <strong>account-server</strong>、<strong>order-server</strong> 和 <strong>storage-server</strong> 差不多，就只展示一个的配置，</p><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xiaotang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-account<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>spring-account<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR1<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud-alibaba-dependencies.version</span>&gt;</span>0.2.2.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud-alibaba-dependencies.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">seata.version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">seata.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud-alibaba-seata.version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud-alibaba-seata.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- seata --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;seata.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-seata<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-alibaba-seata.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- feign --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-alibaba-dependencies.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="修改-application-yml-文件"><a href="#修改-application-yml-文件" class="headerlink" title="修改 application.yml 文件"></a>修改 application.yml 文件</h3><p>自定义事务组的名称 <code>tx-service-group: account-service-group</code></p><figure class="highlight yaml"><figcaption><span>application.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8021</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">account-server</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    nacos:</span></span><br><span class="line"><span class="attr">      discovery:</span> <span class="comment">#nacos注册地址</span></span><br><span class="line"><span class="attr">        server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">    <span class="comment"># seata 服务分组，要与服务端file.conf中service.vgroup_mapping的后缀对应</span></span><br><span class="line"><span class="attr">    alibaba:</span></span><br><span class="line"><span class="attr">      seata:</span></span><br><span class="line"><span class="attr">        tx-service-group:</span> <span class="string">account-service-group</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://localhost:3306/account?characterEncoding=utf8</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line"><span class="attr">  mapper-locations:</span> <span class="attr">classpath:/mapper/*.xml</span></span><br><span class="line"><span class="attr">  type-aliases-package:</span> <span class="string">com.xiaotang.springaccount</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line"><span class="attr">    org:</span></span><br><span class="line"><span class="attr">      springframework:</span></span><br><span class="line"><span class="attr">        boot:</span></span><br><span class="line"><span class="attr">          autoconfigure:</span> <span class="string">ERROR</span></span><br></pre></td></tr></table></figure><h3 id="添加并修改-registry-conf-配置文件"><a href="#添加并修改-registry-conf-配置文件" class="headerlink" title="添加并修改 registry.conf 配置文件"></a>添加并修改 registry.conf 配置文件</h3><p>主要是将注册中心改为 nacos</p><figure class="highlight bash"><figcaption><span>/src/main/resources/registry.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">registry &#123;</span><br><span class="line">  <span class="comment"># file 、nacos 、eureka、redis、zk、consul、etcd3、sofa</span></span><br><span class="line">  <span class="built_in">type</span> = <span class="string">"nacos"</span></span><br><span class="line"></span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = <span class="string">"localhost:8848"</span></span><br><span class="line">    namespace = <span class="string">"public"</span></span><br><span class="line">    cluster = <span class="string">"default"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">config &#123;</span><br><span class="line">  <span class="comment"># file、nacos 、apollo、zk、consul、etcd3</span></span><br><span class="line">  <span class="built_in">type</span> = <span class="string">"file"</span></span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = <span class="string">"localhost:8848"</span></span><br><span class="line">    namespace = <span class="string">""</span></span><br><span class="line">    cluster = <span class="string">"default"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加并修改-file-conf-配置文件，"><a href="#添加并修改-file-conf-配置文件，" class="headerlink" title="添加并修改 file.conf 配置文件，"></a>添加并修改 file.conf 配置文件，</h3><p>主要是修改自定义事务组名称</p><figure class="highlight bash"><figcaption><span>/src/main/resources/file.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">service &#123;</span><br><span class="line">  <span class="comment">#transaction service group mapping</span></span><br><span class="line">  vgroup_mapping.account-service-group=<span class="string">"default"</span></span><br><span class="line">  <span class="comment"># only support when registry.type=file, please don't set multiple addresses</span></span><br><span class="line">  default.grouplist = <span class="string">"127.0.0.1:8091"</span></span><br><span class="line">  <span class="comment"># disable seata</span></span><br><span class="line">  disableGlobalTransaction = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note danger">            <p>vgroup_mapping.account-service-group=”default” 必须配置，不然会一直查找这个配置，找不到控制台会报ERROR，同一个事务组的名称必须一致，在这里所有微服务的事务组名称必须都是 <code>account-service-group</code>。</p><p>其他配置可以不写，找不到会使用默认配置</p>          </div><p><img src="3.png" alt="ERROR"></p><hr><h3 id="在启动类中取消数据源的自动创建"><a href="#在启动类中取消数据源的自动创建" class="headerlink" title="在启动类中取消数据源的自动创建"></a>在启动类中取消数据源的自动创建</h3><p><code>exclude = DataSourceAutoConfiguration.class</code>，不去除就会报错。</p><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.SpringAccountApplication;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span>(exclude = DataSourceAutoConfiguration.class)</span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.xiaotang.springaccount.dao"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringAccountApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringAccountApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置-DataSourceProxyConfig-使用-Seata-对数据源进行代理"><a href="#配置-DataSourceProxyConfig-使用-Seata-对数据源进行代理" class="headerlink" title="配置 DataSourceProxyConfig 使用 Seata 对数据源进行代理"></a>配置 DataSourceProxyConfig 使用 Seata 对数据源进行代理</h3><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.config.DataSourceProxyConfig</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.seata.rm.datasource.DataSourceProxy;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceProxyConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// mapper.xml 映射文件坐标</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;mybatis.mapper-locations&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String mapperLocations;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">druidDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSourceProxy <span class="title">dataSourceProxy</span><span class="params">(DataSource dataSource)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceProxy(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">sqlSessionFactoryBean</span><span class="params">(DataSourceProxy dataSourceProxy)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SqlSessionFactoryBean sqlSessionFactoryBean = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        sqlSessionFactoryBean.setDataSource(dataSourceProxy);</span><br><span class="line">        sqlSessionFactoryBean.setMapperLocations(<span class="keyword">new</span> PathMatchingResourcePatternResolver()</span><br><span class="line">                .getResources(mapperLocations));</span><br><span class="line">        <span class="comment">// 添加数据库拦截器</span></span><br><span class="line">        sqlSessionFactoryBean.setPlugins(<span class="keyword">new</span> Interceptor[]&#123;<span class="keyword">new</span> InsertInterceptor()&#125;);</span><br><span class="line">        sqlSessionFactoryBean.setTransactionFactory(<span class="keyword">new</span> SpringManagedTransactionFactory());</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactoryBean.getObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-GlobalTransactional-注解开启全局分布式事务"><a href="#使用-GlobalTransactional-注解开启全局分布式事务" class="headerlink" title="使用 @GlobalTransactional 注解开启全局分布式事务"></a>使用 @GlobalTransactional 注解开启全局分布式事务</h3><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.service.AccountService</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountMapper accountMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrdersClient ordersClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StorageClient storageClient;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">add</span><span class="params">(Account account)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountMapper.insert(account);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 全局事务</span></span><br><span class="line">    <span class="meta">@GlobalTransactional</span></span><br><span class="line">    <span class="meta">@Transactional</span>(rollbackFor = Exception.class)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">addTest</span><span class="params">(Account account, Integer status)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 通过Feign调用order-server、storage-server接口</span></span><br><span class="line">        ordersClient.add(<span class="string">"banana"</span>, <span class="number">2</span>, <span class="number">1</span>, account.getUsername());</span><br><span class="line">        storageClient.add(<span class="string">"apple"</span>, <span class="number">3</span>);</span><br><span class="line">        Integer index = add(account);</span><br><span class="line">        <span class="keyword">if</span>(status == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"hello world"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给每个库都创建创建 <span class="label default">undo_log 表（日志回滚表 ）</span> ，文件在 <strong>seata/script/client/at/db/mysql.sql</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`undo_log`</span>(</span><br><span class="line">    <span class="string">`id`</span>            <span class="built_in">BIGINT</span>(<span class="number">20</span>)   <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'increment id'</span>,</span><br><span class="line">    <span class="string">`branch_id`</span>     <span class="built_in">BIGINT</span>(<span class="number">20</span>)   <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'branch transaction id'</span>,</span><br><span class="line">    <span class="string">`xid`</span>           <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'global transaction id'</span>,</span><br><span class="line">    <span class="string">`context`</span>       <span class="built_in">VARCHAR</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'undo_log context,such as serialization'</span>,</span><br><span class="line">    <span class="string">`rollback_info`</span> LONGBLOB     <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'rollback info'</span>,</span><br><span class="line">    <span class="string">`log_status`</span>    <span class="built_in">INT</span>(<span class="number">11</span>)      <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'0:normal status,1:defense status'</span>,</span><br><span class="line">    <span class="string">`log_created`</span>   DATETIME     <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'create datetime'</span>,</span><br><span class="line">    <span class="string">`log_modified`</span>  DATETIME     <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'modify datetime'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">    <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`ux_undo_log`</span> (<span class="string">`xid`</span>, <span class="string">`branch_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  AUTO_INCREMENT = <span class="number">1</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8 <span class="keyword">COMMENT</span> =<span class="string">'AT transaction mode undo table'</span>;</span><br></pre></td></tr></table></figure><h2 id="启动服务功能演示"><a href="#启动服务功能演示" class="headerlink" title="启动服务功能演示"></a>启动服务功能演示</h2><div class="tabs" id="选项卡-2"><ul class="nav-tabs"><li class="tab active"><a href="#选项卡-2-1">seata-server</a></li><li class="tab"><a href="#选项卡-2-2">account-server</a></li><li class="tab"><a href="#选项卡-2-3">order-server</a></li><li class="tab"><a href="#选项卡-2-4">storage-server</a></li></ul><div class="tab-content"><div class="tab-pane active" id="选项卡-2-1"><p><img src="5-0.png" alt="seata-server"></p></div><div class="tab-pane" id="选项卡-2-2"><p><img src="5-1.png" alt="account-server"></p></div><div class="tab-pane" id="选项卡-2-3"><p><img src="5-2.png" alt="order-server"></p></div><div class="tab-pane" id="选项卡-2-4"><p><img src="5-3.png" alt="storage-server"></p></div></div></div><p>成功注册到seata</p><hr><p>当我在添加完所有的数据后，最后抛出一个RuntimeException，就会看到order-server和storage-server 最后回滚了操作。</p><div class="tabs" id="选项卡-2"><ul class="nav-tabs"><li class="tab active"><a href="#选项卡-2-1">order-server</a></li><li class="tab"><a href="#选项卡-2-2">storage-server</a></li></ul><div class="tab-content"><div class="tab-pane active" id="选项卡-2-1"><p><img src="6-1.png" alt="order-server"></p></div><div class="tab-pane" id="选项卡-2-2"><p><img src="6-2.png" alt="storage-server"></p></div></div></div><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://juejin.im/post/5ddddd75e51d45330c6aec6f" target="_blank" rel="noopener">Spring Alibaba Cloud使用Seata实现分布式事务，Nacos作为配置中心(一)</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Seata&lt;/code&gt; 是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。&lt;code&gt;Seata&lt;/code&gt; 将为用户提供了 AT、TCC、SAGA 和 XA 事务模式，为用户打造一站式的分布式解决方案。&lt;/p&gt;
    
    </summary>
    
      <category term="springcloud" scheme="http://zhizhi.tangliangdong.me/categories/springcloud/"/>
    
    
      <category term="seata" scheme="http://zhizhi.tangliangdong.me/tags/seata/"/>
    
  </entry>
  
  <entry>
    <title>linux-buff-cache</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-linux-buff-cache/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-linux-buff-cache/</id>
    <published>2020-01-10T01:57:43.000Z</published>
    <updated>2020-01-10T03:15:46.203Z</updated>
    
    <content type="html"><![CDATA[<p>linux 硬盘缓存对执行性能的影响，linux不只是把你的内存吃了，</p><a id="more"></a><h2 id="清理内存"><a href="#清理内存" class="headerlink" title="清理内存"></a>清理内存</h2><p>我们可以使用特殊的文件 <code>/proc/sys/vm/drop_caches</code>，将 3 写入，我们就能清除硬盘缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ free -m</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          1504       1471         33          0         36        801</span><br><span class="line">-/+ buffers/cache:        633        871</span><br><span class="line">Swap:         2047          6       2041</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> 3 | sudo tee /proc/sys/vm/drop_caches </span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">$ free -m</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          1504        763        741          0          0        134</span><br><span class="line">-/+ buffers/cache:        629        875</span><br><span class="line">Swap:         2047          6       2041</span><br></pre></td></tr></table></figure><h2 id="硬盘缓存对程序加载的影响"><a href="#硬盘缓存对程序加载的影响" class="headerlink" title="硬盘缓存对程序加载的影响"></a>硬盘缓存对程序加载的影响</h2><p>让我们制作两个测试程序，一个用 Python，一个用 Java。 Python 和 Java都带有相当大的运行时，必须加载这些运行时才能运行该应用程序。 这是磁盘缓存发挥其魔力的完美方案。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ cat Hello.java</span><br><span class="line">class Hello &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello World! Regards, Java"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ javac Hello.java</span><br><span class="line"></span><br><span class="line">$ java Hello</span><br><span class="line">Hello World! Regards, Java</span><br></pre></td></tr></table></figure><p>我们先清除缓存，然后观察运行这两个程序需要多久</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> 3 | sudo tee /proc/sys/vm/drop_caches</span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">$ free -h</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.8G        1.1G        559M        768K        106M        538M</span><br><span class="line">Swap:            0B          0B          0B</span><br><span class="line"></span><br><span class="line">$ time java Hello</span><br><span class="line">Hello World! Regards, Java</span><br><span class="line"></span><br><span class="line">real0m0.350s</span><br><span class="line">user0m0.056s</span><br><span class="line">sys0m0.021s</span><br><span class="line"></span><br><span class="line">$ free -h</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.8G        1.1G        549M        768K        115M        534M</span><br><span class="line">Swap:            0B          0B          0B</span><br><span class="line"></span><br><span class="line">$ time java Hello</span><br><span class="line">Hello World! Regards, Java</span><br><span class="line"></span><br><span class="line">real0m0.202s</span><br><span class="line">user0m0.047s</span><br><span class="line">sys0m0.015s</span><br></pre></td></tr></table></figure><div class="note info">            <p>明显，第二次执行该程序的时间明显缩短了，而且 buff/cache 也变大了</p>          </div><h2 id="硬盘缓存对文件读取速度的影响"><a href="#硬盘缓存对文件读取速度的影响" class="headerlink" title="硬盘缓存对文件读取速度的影响"></a>硬盘缓存对文件读取速度的影响</h2><p>我们先创建一个大文件，看看磁盘缓存如何影响我们读取它的速度。我们创建了一个200MB的文件，文件的大小可以自己进行判断。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> 3 | sudo tee /proc/sys/vm/drop_caches</span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">$ free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.8G        1.1G        568M        768K        103M        546M</span><br><span class="line">Swap:            0B          0B          0B</span><br><span class="line"></span><br><span class="line">$ dd <span class="keyword">if</span>=/dev/zero of=bigfile bs=1M count=200</span><br><span class="line">200+0 records <span class="keyword">in</span></span><br><span class="line">200+0 records out</span><br><span class="line">209715200 bytes (210 MB) copied, 0.483083 s, 434 MB/s</span><br><span class="line"></span><br><span class="line">$ ls -lh bigfile</span><br><span class="line">-rw-r--r-- 1 root root 200M Jan 10 10:39 bigfile</span><br><span class="line"></span><br><span class="line">$ free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.8G        1.1G        362M        768K        310M        529M</span><br><span class="line">Swap:            0B          0B          0B</span><br></pre></td></tr></table></figure><p>由于文件刚刚被写入，因此它将进入磁盘缓存。 200MB的文件在“缓存”中引起了200MB的增加。 让我们读它，清除缓存，然后再次读以查看它有多快：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ time cat bigfile &gt; /dev/null</span><br><span class="line"></span><br><span class="line">real0m0.164s</span><br><span class="line">user0m0.001s</span><br><span class="line">sys0m0.053s</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> 3 | sudo tee /proc/sys/vm/drop_caches</span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">$ time cat bigfile &gt; /dev/null</span><br><span class="line"></span><br><span class="line">real0m1.831s</span><br><span class="line">user0m0.002s</span><br><span class="line">sys0m0.079s</span><br></pre></td></tr></table></figure><div class="note danger">            <p>读取的速度快了也有11倍了。</p>          </div><blockquote><p>Linux磁盘缓存非常简单。 它使用备用内存来大大提高磁盘访问速度，而不会占用应用程序任何内存。 在Linux上完全使用的ram存储是有效的硬件使用，而不是警告信号。</p></blockquote><a href="/2020/01/10/2020-1-10-file-descriptor/" title="对 > /dev/null 的延伸认识">对 > /dev/null 的延伸认识</a><hr><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li>部分翻译自 <a href="https://www.linuxatemyram.com/play.html" target="_blank" rel="noopener">Experiments and fun with the Linux disk cache</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux 硬盘缓存对执行性能的影响，linux不只是把你的内存吃了，&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://zhizhi.tangliangdong.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="linux" scheme="http://zhizhi.tangliangdong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>日志文件查看搜索</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/09/2020-1-9-linux-search/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/09/2020-1-9-linux-search/</id>
    <published>2020-01-09T08:47:23.000Z</published>
    <updated>2020-01-10T01:24:14.305Z</updated>
    
    <content type="html"><![CDATA[<p>筛查日志这件事，根据情况不同，采用的方法也会有所不同。比如日志很小，至多几千行这样的情况，我们完全可以使用一般的文本编辑器打开，直接查找所需内容即可。而像一些“大型”日志，尤其是长时间稳定性测试所产生的日志，动辄可能会有几个g，几十g，再用编辑器打开显然不够现实。</p><a id="more"></a><h2 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h2><blockquote><p> grep命令是linux下最好用的命令之一。grep用来筛选内容的速度应该是最快的，这点没有之一，大到几个g的文件，几秒就可以完成对单一关键词的筛取，可谓是查找大文件的“神器”，而且grep命令格式十分简单，常用的搜索功能只需三个参数即可完成。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [option] patten file</span><br></pre></td></tr></table></figure><table><thead><tr><th>缩写</th><th>全称</th><th>备注</th></tr></thead><tbody><tr><td>-a</td><td>–text</td><td>不要忽略二进制的数据。</td></tr><tr><td>-A &lt;显示行数&gt;</td><td>–after-context=&lt;显示行数&gt;</td><td>显示匹配行之<span class="label danger">后</span>的n行的内容</td></tr><tr><td>-b</td><td>–byte-offset</td><td>在匹配行之前，标示出该行第一个字符的编号。</td></tr><tr><td>-B &lt;显示行数&gt;</td><td>–before-context=&lt;显示行数&gt;</td><td>显示匹配行之<span class="label danger">前</span>的n行的内容</td></tr><tr><td>-c</td><td>–count</td><td>统计符合样式的列数</td></tr><tr><td>-C &lt;显示行数&gt;</td><td>–context=&lt;显示行数&gt;或 -&lt;显示行数&gt;</td><td>显示匹配行<span class="label danger">前后</span>前后的n行的内容</td></tr><tr><td>-i</td><td>–ignore-case</td><td>忽略字符大小写差异</td></tr><tr><td>-n</td><td>–line-number</td><td>显示符合样式的行号</td></tr><tr><td>-r</td><td>–recursive</td><td>遍历文件夹查找</td></tr><tr><td>-l</td><td>–file-with-matches</td><td>列出文件内容符合指定的样式的文件名称</td></tr><tr><td>-L</td><td>–files-without-match</td><td>列出文件内容<span class="label danger">不符合</span>指定的样式的文件名称。</td></tr><tr><td>-v</td><td>–revert-match</td><td>显示不包含匹配文本的所有行</td></tr></tbody></table><div class="note danger">            <p>如果 grep 命令打印 Binary file catalina.out matches，则需要加上 -a 参数</p>          </div><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><em>快速，可批量筛选出含有关键词的全部文本行。</em></td><td><em>如果关键词在文本中出现较多，无法快速定位至某一次关键词出现的位置，依然会出现刷屏效果。</em></td></tr></tbody></table><h2 id="more-less-命令"><a href="#more-less-命令" class="headerlink" title="more / less 命令"></a>more / less 命令</h2><blockquote><p>more和less命令都是用分页查看文本的方式，每次只显示一定行的文本，避免像cat那样被大量的文字快速刷屏，同时支持搜索，可以在文件中搜索某个关键词并实现定位。</p></blockquote><ul><li><strong>less</strong> 似乎更适合对于日志的筛查，可以进行向前或向后<strong>双方向的搜索</strong>，并且可以按方向键<strong>逐行前后滚动</strong></li><li><strong>more</strong> 只支持向后查找和向后翻页或滚动。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more/less file</span><br></pre></td></tr></table></figure><p><strong>搜索关键字：</strong>输入命令后按”/“，输入关键词后回车即可定位至关键词第一次出现的位置，此时按 <strong>n键</strong> 可切换至下一次出现的位置，使用less时，按 <strong>N键</strong> 返回上一次出现的位置。</p><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><em>可以自动定位关键词出现的位置，并显示关键词前后的文本内容，使用起来比较方便。</em></td><td><em>搜索速度较慢，文件特别大的话要等很久才能搜索到。</em></td></tr></tbody></table><h2 id="head-tail-命令"><a href="#head-tail-命令" class="headerlink" title="head / tail 命令"></a><strong>head / tail 命令</strong></h2><blockquote><p>head和tail命令是功能近似而作用位置相反的两个命令，head命令用来从开头读取文本，tail命令则是从尾部读取文本。当我们不关注日志中间的一大坨内容，只关注开头或结尾的部分内容时，head和tail命令可以说是最好的解决方案。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示开头到第n行</span></span><br><span class="line">head -n file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从倒数第n行开始显示到末尾</span></span><br><span class="line">tail -n file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从文件开头第n行开始显示到末尾</span></span><br><span class="line">tail +n file</span><br></pre></td></tr></table></figure><p><strong>使用方法：</strong>设置需要从文件开头 / 结尾查找的行数（n），即可显示对应结果。</p><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><em>方便实用，尤其是tail，可以从尾部读取文件。</em></td><td><em>单独使用不能查找关键词，需用管道结合 grep进行查找</em></td></tr></tbody></table><div class="note info">            <p><strong>head / tail和 grep 结合使用</strong></p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head/tail -n file | grep pattern</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://cloud.tencent.com/developer/article/1484955" target="_blank" rel="noopener">大日志，看我如何对付你</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;筛查日志这件事，根据情况不同，采用的方法也会有所不同。比如日志很小，至多几千行这样的情况，我们完全可以使用一般的文本编辑器打开，直接查找所需内容即可。而像一些“大型”日志，尤其是长时间稳定性测试所产生的日志，动辄可能会有几个g，几十g，再用编辑器打开显然不够现实。&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://zhizhi.tangliangdong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>vim 配置</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/08/2020-1-8-vim-config/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/08/2020-1-8-vim-config/</id>
    <published>2020-01-08T06:53:57.000Z</published>
    <updated>2020-01-08T07:13:42.429Z</updated>
    
    <content type="html"><![CDATA[<p>在阿里云服务器用 vim 修改配置文件时，发现没有显示行号，缩进还不是4个，而且鼠标也不能用，还有些别的问题，用起来不太方便，于是就对 vim 编辑器进行些基础的配置。</p><a id="more"></a><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置所有用户的vim配置文件</span></span><br><span class="line">vim /etc/vimrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动加载配置</span></span><br><span class="line"><span class="built_in">source</span> .vimrc</span><br></pre></td></tr></table></figure><h2 id="配置信息"><a href="#配置信息" class="headerlink" title="配置信息"></a>配置信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示行号</span></span><br><span class="line"><span class="built_in">set</span> nu</span><br><span class="line"><span class="comment"># 鼠标可用</span></span><br><span class="line"><span class="built_in">set</span> mouse=a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动时隐去援助提示</span></span><br><span class="line"><span class="built_in">set</span> shortmess=atI</span><br><span class="line"></span><br><span class="line"><span class="comment"># 语法高亮</span></span><br><span class="line">syntax on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用vim的键盘模式</span></span><br><span class="line"><span class="built_in">set</span> nocompatible</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不需要备份</span></span><br><span class="line"><span class="built_in">set</span> nobackup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 没有保存或文件只读时弹出确认</span></span><br><span class="line"><span class="built_in">set</span> confirm</span><br><span class="line"></span><br><span class="line"><span class="comment"># tab缩进</span></span><br><span class="line"><span class="built_in">set</span> tabstop=4</span><br><span class="line"><span class="built_in">set</span> shiftwidth=4</span><br><span class="line"><span class="built_in">set</span> expandtab</span><br><span class="line"><span class="built_in">set</span> smarttab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件自动检测外部更改</span></span><br><span class="line"><span class="built_in">set</span> autoread</span><br><span class="line"></span><br><span class="line"><span class="comment"># c文件自动缩进</span></span><br><span class="line"><span class="built_in">set</span> cindent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动对齐</span></span><br><span class="line"><span class="built_in">set</span> autoindent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 智能缩进</span></span><br><span class="line"><span class="built_in">set</span> smartindent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 高亮查找匹配</span></span><br><span class="line"><span class="built_in">set</span> hlsearch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 背景色</span></span><br><span class="line"><span class="built_in">set</span> background=dark</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示匹配</span></span><br><span class="line"><span class="built_in">set</span> showmatch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示标尺，就是在右下角显示光标位置</span></span><br><span class="line"><span class="built_in">set</span> ruler</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除vi的一致性</span></span><br><span class="line"><span class="built_in">set</span> nocompatible</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许折叠</span></span><br><span class="line"><span class="built_in">set</span> foldenable</span><br><span class="line"></span><br><span class="line"><span class="comment">#####################设置折叠#####################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据语法折叠</span></span><br><span class="line"><span class="built_in">set</span> fdm=syntax</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动折叠</span></span><br><span class="line"><span class="built_in">set</span> fdm=manual</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置键盘映射，通过空格设置折叠</span></span><br><span class="line">nnoremap &lt;space&gt; @=((foldclosed(line(<span class="string">'.'</span>)&lt;0)?<span class="string">'zc'</span>:<span class="string">'zo'</span>))&lt;CR&gt;</span><br><span class="line"><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span></span><br><span class="line"><span class="comment"># 不要闪烁</span></span><br><span class="line"><span class="built_in">set</span> novisualbell</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动显示状态行</span></span><br><span class="line"><span class="built_in">set</span> laststatus=2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 浅色显示当前行</span></span><br><span class="line">autocmd InsertLeave * se nocul</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用浅色高亮当前行</span></span><br><span class="line">autocmd InsertEnter * se cul</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示输入的命令</span></span><br><span class="line"><span class="built_in">set</span> showcmd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 被分割窗口之间显示空白</span></span><br><span class="line"><span class="built_in">set</span> fillchars=vert:/</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> fillchars=stl:/</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> fillchars=stlnc:/</span><br></pre></td></tr></table></figure><hr><h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><ul><li><a href="https://www.zhihu.com/question/19989337/answer/168444287" target="_blank" rel="noopener">有哪些编程必备的 Vim 配置？ - 地球的外星人君的回答 - 知乎</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在阿里云服务器用 vim 修改配置文件时，发现没有显示行号，缩进还不是4个，而且鼠标也不能用，还有些别的问题，用起来不太方便，于是就对 vim 编辑器进行些基础的配置。&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://zhizhi.tangliangdong.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="vim" scheme="http://zhizhi.tangliangdong.me/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>nginx反向代理(Reverse Proxy)</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/08/2020-1-8-nginx-reverse-Proxy/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/08/2020-1-8-nginx-reverse-Proxy/</id>
    <published>2020-01-08T05:38:06.000Z</published>
    <updated>2020-01-08T07:08:11.738Z</updated>
    
    <content type="html"><![CDATA[<p>反向代理（Reverse Proxy）方式是指以代理服务器来接受Internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给Internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器。</p><a id="more"></a><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><strong>正向代理</strong>：一个位于客户端和原始服务器之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。</p><p><strong>反向代理</strong>：以代理服务器来接受Internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给Internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器。</p><p><img src="1.png" alt="正向代理"></p><p><img src="2.png" alt="反向代理"></p><p>简单来说，</p><ul><li><p>正向代理就是<strong>代理服务器</strong>代理的是多个客户端</p></li><li><p>反向代理就是代理服务器代理的是多个服务端</p></li></ul><h2 id="反向代理的好处"><a href="#反向代理的好处" class="headerlink" title="反向代理的好处"></a>反向代理的好处</h2><ul><li>可以起到保护网站安全的作用，因为任何来自Internet的请求都必须先经过代理服务器。</li><li>通过缓存静态资源，加速Web请求。</li><li>实现负载均衡。顺便说下，目前市面上，主流的负载均衡方案，硬件设备有F5，软件方案有四层负载均衡的LVS，七层负载均衡的Nginx、Haproxy等。</li></ul><h2 id="nginx反向代理实战"><a href="#nginx反向代理实战" class="headerlink" title="nginx反向代理实战"></a>nginx反向代理实战</h2><p>在 http 节点下，添加 <code>upstream</code> 节点，添加 tomcat 集群</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">upstream tomcats &#123;</span><br><span class="line">       <span class="built_in"> server </span>127.0.0.1:9001;</span><br><span class="line">       <span class="built_in"> server </span>127.0.0.1:9002;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upstream 还可以为每个设备设置状态值，这些状态值的含义分别如下：</p><ul><li>down：表示单前的server暂时不参与负载.</li><li>weight：默认为1.weight越大，负载的权重就越大。</li><li>max_fails：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误.</li><li>fail_timeout: max_fails次失败后，暂停的时间。</li><li>backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。</li></ul><p><strong>例子：</strong></p><pre><code>upstream tomcats{    server 127.0.0.1:9001 down;    server 127.0.0.1:9002 backup;    server 127.0.0.1:9003 weight=2;    server 127.0.0.1:9004 max_fails=2 fail_timeout=60s;   }</code></pre><div class="note danger">            <p>注意 “=” 前后不能有空格</p>          </div><p>负载均衡分配策略：</p><ul><li><p>nano（轮询）：upstream按照轮询（默认）方式进行负载，每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。虽然这种方式简便、成本低廉。但缺点是：可靠性低和负载分配不均衡。</p></li><li><p>weight（权重）：指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。总和为10</p></li><li><p>ip_hash（访问ip）：每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</p><p>配置只需要在upstream中加入 ip_hash; 即可。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream tomcats &#123;</span><br><span class="line">      ip_hash;</span><br><span class="line">     <span class="built_in"> server </span>127.0.0.1:9001;</span><br><span class="line">     <span class="built_in"> server </span>127.0.0.1:9002;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>fair（第三方）：按后端服务器的响应时间来分配请求，响应时间短的优先分配。与weight分配策略类似。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream tomcats &#123;</span><br><span class="line">     <span class="built_in"> server </span>127.0.0.1:9001;</span><br><span class="line">     <span class="built_in"> server </span>127.0.0.1:9002;</span><br><span class="line">      fair;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><p>在http server 节点下配置location为Tomcat集群</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass_header</span> Server;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Scheme <span class="variable">$scheme</span>;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://tomcats;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="启动nginx并访问"><a href="#启动nginx并访问" class="headerlink" title="启动nginx并访问"></a>启动nginx并访问</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sbin/nginx</span><br></pre></td></tr></table></figure><div class="tabs" id="选项卡-2"><ul class="nav-tabs"><li class="tab active"><a href="#选项卡-2-1">server-01</a></li><li class="tab"><a href="#选项卡-2-2">server-02</a></li><li class="tab"><a href="#选项卡-2-3">server-03</a></li></ul><div class="tab-content"><div class="tab-pane active" id="选项卡-2-1"><p><img src="3.png" alt="server-01"></p></div><div class="tab-pane" id="选项卡-2-2"><p><img src="4.png" alt="server-02"></p></div><div class="tab-pane" id="选项卡-2-3"><p><img src="5.png" alt="server-03"></p></div></div></div><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://juejin.im/entry/57fb07b0816dfa0056c0ada8" target="_blank" rel="noopener">Nginx 反向代理详解</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;反向代理（Reverse Proxy）方式是指以代理服务器来接受Internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给Internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器。&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="nginx" scheme="http://zhizhi.tangliangdong.me/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>springboot mybatis拦截器interceptor配置</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/07/2020-1-7-mybatis-interceptor/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/07/2020-1-7-mybatis-interceptor/</id>
    <published>2020-01-07T02:43:41.000Z</published>
    <updated>2020-01-07T08:30:58.064Z</updated>
    
    <content type="html"><![CDATA[<p>在往数据库中插入数据时，如果 <em>uuid<em>、</em>createTime<em>、</em>updateTime</em> 没有赋值，则程序自动添加一个值，更新数据时则自动更新 <em>updateTime</em></p><a id="more"></a><h2 id="数据库连接配置"><a href="#数据库连接配置" class="headerlink" title="数据库连接配置"></a>数据库连接配置</h2><figure class="highlight yaml"><figcaption><span>/resources/application.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8020</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">order-server</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://localhost:3306/order?useUnicode=true&amp;amp;characterEncoding=utf8</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line"><span class="attr">  mapper-locations:</span> <span class="attr">classpath:/mapper/*.xml</span></span><br><span class="line"><span class="attr">  type-aliases-package:</span> <span class="string">com.xiaotang.springorder</span></span><br><span class="line"><span class="comment">#  configuration:</span></span><br><span class="line"><span class="comment">#    interceptors:</span></span><br><span class="line"><span class="comment">#      - com.xiaotang.springorder.interceptor.InsertInterceptor</span></span><br></pre></td></tr></table></figure><h2 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h2><p>Executor 提供的方法中，update 包含了 新增，修改和删除类型，无法直接区分，需要借助 <code>MappedStatement</code> 类的属性 <code>SqlCommandType</code> 来进行判断，该类包含了所有的操作类型</p><figure class="highlight java"><figcaption><span>SqlCommandType.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> SqlCommandType &#123;</span><br><span class="line">    UNKNOWN, INSERT, UPDATE, DELETE, SELECT, FLUSH;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>毕竟新增和修改的场景，有些参数是有区别的，比如<strong>创建时间</strong>和<strong>更新时间</strong>，<code>update</code> 时是无需兼顾创建时间字段的。</p><figure class="highlight java"><figcaption><span>拦截器中获取sql命令类型和参数</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取MappedStatement实例, 并获取当前SQL命令类型</span></span><br><span class="line">MappedStatement ms = (MappedStatement) invocation.getArgs()[<span class="number">0</span>];</span><br><span class="line">SqlCommandType commandType = ms.getSqlCommandType();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 获取当前正在被操作的类, 有可能是Java Bean, 也可能是普通的操作对象, 比如普通的参数传递</span></span><br><span class="line"><span class="comment">// 普通参数, 即是 @Param 包装或者原始 Map 对象, 普通参数会被 Mybatis 包装成 Map 对象</span></span><br><span class="line"><span class="comment">// 即是 org.apache.ibatis.binding.MapperMethod$ParamMap</span></span><br><span class="line">Object parameter = invocation.getArgs()[<span class="number">1</span>];</span><br><span class="line"><span class="comment">// 获取拦截器指定的方法类型, 通常需要拦截 update</span></span><br><span class="line">String methodName = invocation.getMethod().getName();</span><br></pre></td></tr></table></figure><figure class="highlight java"><figcaption><span>/src/main/java/com.xiaotang.springorder.interceptor</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Intercepts</span>(&#123;</span><br><span class="line">        <span class="meta">@Signature</span>(type = Executor.class, method = <span class="string">"update"</span>, args = &#123;MappedStatement.class, Object.class &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertInterceptor</span> <span class="keyword">implements</span> <span class="title">Interceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(Invocation invocation)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        Object[] objects = invocation.getArgs();</span><br><span class="line">        MappedStatement mappedStatement = (MappedStatement) invocation.getArgs()[<span class="number">0</span>];</span><br><span class="line">        String commandType =  mappedStatement.getSqlCommandType().name();</span><br><span class="line">        Object object = objects[<span class="number">1</span>];</span><br><span class="line">        BeanWrapper beanWrapper = <span class="keyword">new</span> BeanWrapperImpl(object);</span><br><span class="line">        PropertyDescriptor[] descriptors = beanWrapper.getPropertyDescriptors();</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"INSERT"</span>.equals(commandType)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (PropertyDescriptor descriptor : descriptors) &#123;</span><br><span class="line">                String filedName = descriptor.getName();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">"class"</span>.equals(filedName) &amp;&amp; !<span class="string">"empty"</span>.equals(filedName)) &#123;</span><br><span class="line">                    Field field = FieldUtils.getField(object.getClass(), filedName, <span class="keyword">true</span>);</span><br><span class="line">                    UUID uuid = field.getAnnotation(UUID.class);</span><br><span class="line">                    CreateTime createTime = field.getAnnotation(CreateTime.class);</span><br><span class="line">                    UpdateTime updateTime = field.getAnnotation(UpdateTime.class);</span><br><span class="line">                    <span class="keyword">if</span> (uuid != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(beanWrapper.getPropertyValue(filedName)==<span class="keyword">null</span> || <span class="string">""</span>.equals(beanWrapper.getPropertyValue(filedName))) &#123;</span><br><span class="line">                            beanWrapper.setPropertyValue(filedName, java.util.UUID.randomUUID().toString().replaceAll(<span class="string">"-"</span>, <span class="string">""</span>));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (createTime != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        beanWrapper.setPropertyValue(filedName, Calendar.getInstance().getTime());</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (updateTime != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        beanWrapper.setPropertyValue(filedName, Calendar.getInstance().getTime());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"UPDATE"</span>.equals(commandType))&#123;</span><br><span class="line">            <span class="keyword">for</span> (PropertyDescriptor descriptor : descriptors) &#123;</span><br><span class="line">                String filedName = descriptor.getName();</span><br><span class="line">                <span class="keyword">if</span>(!<span class="string">"class"</span>.equals(filedName)&amp;&amp;!<span class="string">"empty"</span>.equals(filedName))&#123;</span><br><span class="line">                    Field field=  FieldUtils.getField(object.getClass(), filedName, <span class="keyword">true</span>);</span><br><span class="line">                    UpdateTime updateTime = field.getAnnotation(UpdateTime.class);</span><br><span class="line">                    <span class="keyword">if</span>(updateTime!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                        beanWrapper.setPropertyValue(filedName, Calendar.getInstance().getTime());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        objects[<span class="number">1</span>] = beanWrapper.getWrappedInstance();</span><br><span class="line">        <span class="keyword">return</span> invocation.proceed();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">plugin</span><span class="params">(Object target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (target <span class="keyword">instanceof</span> Executor) &#123;</span><br><span class="line">            <span class="keyword">return</span> Plugin.wrap(target, <span class="keyword">this</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> target;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProperties</span><span class="params">(Properties properties)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>这样配置好拦截器并不会被springboot读取，还需要加一个配置类，将拦截器以bean的形式写入</p><figure class="highlight java"><figcaption><span>/src/main/java/com.xiaotang.springorder.interceptor</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">InsertInterceptor <span class="title">insertInterceptor</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> InsertInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><p><a href="https://segmentfault.com/a/1190000017393523" target="_blank" rel="noopener">Mybatis Interceptor 拦截器</a></p></li><li><p><a href="https://unclecatmyself.github.io/2019/01/19/propertyDescriptor/" target="_blank" rel="noopener">关于属性描述符PropertyDescriptor</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在往数据库中插入数据时，如果 &lt;em&gt;uuid&lt;em&gt;、&lt;/em&gt;createTime&lt;em&gt;、&lt;/em&gt;updateTime&lt;/em&gt; 没有赋值，则程序自动添加一个值，更新数据时则自动更新 &lt;em&gt;updateTime&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="springboot" scheme="http://zhizhi.tangliangdong.me/tags/springboot/"/>
    
      <category term="interceptor" scheme="http://zhizhi.tangliangdong.me/tags/interceptor/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud Gateway和Nacos实现动态路由</title>
    <link href="http://zhizhi.tangliangdong.me/2019/12/26/2019-12-27-springcloud-nacos-gateway-dynamic-config/"/>
    <id>http://zhizhi.tangliangdong.me/2019/12/26/2019-12-27-springcloud-nacos-gateway-dynamic-config/</id>
    <published>2019-12-26T09:08:39.000Z</published>
    <updated>2020-01-07T03:22:57.332Z</updated>
    
    <content type="html"><![CDATA[<p>网关中有两个重要的概念，那就是路由配置和路由规则，路由配置是指配置某请求路径路由到指定的目的地址。而路由规则是指匹配到路由配置之后，再根据路由规则进行转发处理。<br>Spring Cloud Gateway作为所有请求流量的入口，在实际生产环境中为了保证高可靠和高可用，尽量避免重启,需要实现Spring Cloud Gateway动态路由配置。</p><a id="more"></a><p>Spring Cloud Gateway的官方文档并没有讲如何动态配置，查看 Spring Cloud Gateway的源码，发现<code>在org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint</code>类中提供了动态配置的Rest接口，但是<code>需要开启Gateway的端点</code>，而且提供的功能不是很强大。通过参考和 <code>GatewayControllerEndpoint</code> 相关的代码，可以自己编码实际动态路由配置。</p><h2 id="用IDE新建Maven工程"><a href="#用IDE新建Maven工程" class="headerlink" title="用IDE新建Maven工程"></a>用IDE新建Maven工程</h2><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xiaotang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springcloud-gateway<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot Gateway<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR1<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud-alibaba-dependencies.version</span>&gt;</span>0.2.2.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud-alibaba-dependencies.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-alibaba-dependencies.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网关中有两个重要的概念，那就是路由配置和路由规则，路由配置是指配置某请求路径路由到指定的目的地址。而路由规则是指匹配到路由配置之后，再根据路由规则进行转发处理。&lt;br&gt;Spring Cloud Gateway作为所有请求流量的入口，在实际生产环境中为了保证高可靠和高可用，尽量避免重启,需要实现Spring Cloud Gateway动态路由配置。&lt;/p&gt;
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="Gateway" scheme="http://zhizhi.tangliangdong.me/tags/Gateway/"/>
    
      <category term="Spring Cloud" scheme="http://zhizhi.tangliangdong.me/tags/Spring-Cloud/"/>
    
      <category term="Nacos" scheme="http://zhizhi.tangliangdong.me/tags/Nacos/"/>
    
  </entry>
  
</feed>
