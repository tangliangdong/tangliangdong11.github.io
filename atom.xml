<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XiaoTang&#39; Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhizhi.tangliangdong.me/"/>
  <updated>2020-01-10T06:50:19.977Z</updated>
  <id>http://zhizhi.tangliangdong.me/</id>
  
  <author>
    <name>XiaoTang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>近视眼将来不用戴老花眼镜吗？</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-myopia-presbyopia/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-myopia-presbyopia/</id>
    <published>2020-01-10T06:35:53.000Z</published>
    <updated>2020-01-10T06:50:19.977Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>近视眼可以和老花眼相互抵消吗，让眼睛的视力恢复如初吗？</p></blockquote><a id="more"></a><p>因为我家人的眼睛几乎都是不近视的，而我爷爷奶奶甚至是爸爸早早的就戴上了老花镜，手机的字也调的很大，成了名副其实的老花眼，因此我也将 老花眼和远视眼划上了等号，也让我产生了如上的误解，</p><p>曾经也有人提出说不会抵消，那不会抵消的话，那近视眼一旦患上远视眼<strong>岂不是近处看不清，远处也看不清…</strong>那不是成了名副其实盲人了。应该不会这样吧:anger:</p><p>甚至我也对近视眼产生羡慕，因为在不久的将来近视眼也能恢复正常。</p><div class="note danger">            <p>但实际上，并没有那么简单，也没用我所想的那么美好。</p>          </div><p>…</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.zhihu.com/question/20003947" target="_blank" rel="noopener">近视眼将来不用戴老花眼镜吗？ - 知乎</a> </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;近视眼可以和老花眼相互抵消吗，让眼睛的视力恢复如初吗？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活" scheme="http://zhizhi.tangliangdong.me/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>文件描述符 与 /dev/null</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-file-descriptor/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-file-descriptor/</id>
    <published>2020-01-10T02:55:21.000Z</published>
    <updated>2020-01-14T02:22:14.857Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>文件描述符是与文件输入、输出关联的整数。它们用来跟踪已打开的文件。最常见的文件描述符是stidin、stdout、和stderr。我们可以将某个文件描述符的内容重定向到另外一个文件描述符中。<br>                                                                                                    ——<em>《linux shell脚本攻略》</em></p></blockquote><a id="more"></a><h2 id="文件名描述符"><a href="#文件名描述符" class="headerlink" title="文件名描述符"></a>文件名描述符</h2><ul><li>0 —— stdin（标准输入）</li><li>1 —— stdout （标准输出）</li><li>2 —— stderr （标准错误输出）</li></ul><blockquote><p>重定向操作是shell命令对应的文件描述符输出的文本信息重新输入到另外一个文件中。</p></blockquote><p><strong>重定向标准输出stdout：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ls 123.txt 1&gt;stdout.txt</span><br><span class="line">$ cat stdout.txt</span><br><span class="line">123.txt</span><br></pre></td></tr></table></figure><div class="note info">            <p>标准输出的 <strong>1</strong> 可以省略，默认就是标准输出</p>          </div><div class="note danger">            <p>1&gt;stdout.txt，中间不能有任何的空格</p>          </div><p><strong>重定向标准错误stderr</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls abc.txt 2&gt;stderr.txt</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat stderr.txt</span></span><br><span class="line">ls: cannot access abc.txt: No such file or directory</span><br></pre></td></tr></table></figure><p>标准错误的重定向到了 stderr.txt 文件中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 你可以将stderr单独定向到一个文件，将stdout重定向到另一个文件：</span></span><br><span class="line">$ cmd 2&gt;stderr.txt 1&gt;stdout.txt</span><br><span class="line"><span class="comment"># stderr 和 stdout 都重定向到一个文件中</span></span><br><span class="line">$ cmd &gt; output.txt 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h2 id="linux特殊文件"><a href="#linux特殊文件" class="headerlink" title="linux特殊文件"></a>linux特殊文件</h2><blockquote><p>/dev/null是一个特殊的设备文件，这个文件接收到的任何数据都会被丢弃。因此，null这个设备通常也被成为位桶（bit bucket）或黑洞。</p><p>​                                                            ——《linux shell脚本攻略》</p></blockquote><p>重定向操作给这个 /dev/null 文件的所有东西都会被丢弃。因此如果不想让输出结果打印到控制台，就可以将输出重定向到 <em>/dev/null</em> 文件中。（可以标准错误重定向到 /dev/null 文件中）</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.zhihu.com/question/53295083/answer/135258024" target="_blank" rel="noopener">shell程序中 2&gt; /dev/null 代表什么意思？ - 裕用ID的回答 - 知乎</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;文件描述符是与文件输入、输出关联的整数。它们用来跟踪已打开的文件。最常见的文件描述符是stidin、stdout、和stderr。我们可以将某个文件描述符的内容重定向到另外一个文件描述符中。&lt;br&gt;                                                                                                    ——&lt;em&gt;《linux shell脚本攻略》&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://zhizhi.tangliangdong.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="linux" scheme="http://zhizhi.tangliangdong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>springcloud+nacos+seata 实现分布式事务管理</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-springcloud-nacos-seata/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-springcloud-nacos-seata/</id>
    <published>2020-01-10T02:00:43.000Z</published>
    <updated>2020-01-15T01:29:00.081Z</updated>
    
    <content type="html"><![CDATA[<p><code>Seata</code> 是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。<code>Seata</code> 将为用户提供了 AT、TCC、SAGA 和 XA 事务模式，为用户打造一站式的分布式解决方案。</p><a id="more"></a><ul><li>Seata的整合样例 <a href="https://github.com/seata/seata-samples.git" target="_blank" rel="noopener">Seata Samples</a></li></ul><p>如果​有​疑惑​的​可以去​看​看官方样例是如何使用的​，​依样画葫芦总是会简单​很多:smile:</p><h2 id="下载启动seata"><a href="#下载启动seata" class="headerlink" title="下载启动seata"></a>下载启动seata</h2><p>在 <a href="https://github.com/seata/seata" target="_blank" rel="noopener">Seata</a> 克隆代码，然后用idea打开启动</p><p><img src="1.png" alt="Seata Samples"></p><h3 id="seata-server模块"><a href="#seata-server模块" class="headerlink" title="seata-server模块"></a>seata-server模块</h3><figure class="highlight bash"><figcaption><span>/server/src/main/resources/register.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">registry &#123;</span><br><span class="line">  <span class="comment"># file 、nacos 、eureka、redis、zk、consul、etcd3、sofa</span></span><br><span class="line">  <span class="built_in">type</span> = <span class="string">"nacos"</span></span><br><span class="line"></span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = <span class="string">"localhost"</span></span><br><span class="line">    namespace = <span class="string">"public"</span></span><br><span class="line">    cluster = <span class="string">"default"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">config &#123;</span><br><span class="line">  <span class="comment"># file、nacos、apollo、zk、consul、etcd3</span></span><br><span class="line">  <span class="comment"># 配置中心的选择</span></span><br><span class="line">  <span class="built_in">type</span> = <span class="string">"file"</span></span><br><span class="line"></span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = <span class="string">"localhost"</span></span><br><span class="line">    namespace = <span class="string">"public"</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  file &#123;</span><br><span class="line">    name = <span class="string">"file.conf"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info">            <p>这里使用 nacos 作为注册中心，并采用 file.conf 配置的形式</p>          </div><figure class="highlight bash"><figcaption><span>/server/src/main/resources/file.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">service &#123;</span><br><span class="line">  <span class="comment">#transaction service group mapping</span></span><br><span class="line">  vgroup_mapping.my_test_tx_group = <span class="string">"default"</span></span><br><span class="line">  <span class="comment"># 这里的是之后对每个微服务进行配置所需要用到的</span></span><br><span class="line">  service.vgroup_mapping.order-service-fescar-service-group=<span class="string">"default"</span></span><br><span class="line">  service.vgroup_mapping.account-service-fescar-service-group=<span class="string">"default"</span></span><br><span class="line">  <span class="comment"># only support when registry.type=file, please don't set multiple addresses</span></span><br><span class="line">  default.grouplist = <span class="string">"127.0.0.1:8091"</span></span><br><span class="line">  <span class="comment"># disable seata</span></span><br><span class="line">  disableGlobalTransaction = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## transaction log store, only used in seata-server</span></span><br><span class="line">store &#123;</span><br><span class="line">  <span class="comment">## store mode: file、db</span></span><br><span class="line">  mode = <span class="string">"db"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## file store property</span></span><br><span class="line">  file &#123;</span><br><span class="line">    <span class="comment">## store location dir</span></span><br><span class="line">    dir = <span class="string">"sessionStore"</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">## database store property</span></span><br><span class="line">  db &#123;</span><br><span class="line">    <span class="comment">## the implement of javax.sql.DataSource, such as DruidDataSource(druid)/BasicDataSource(dbcp) etc.</span></span><br><span class="line">    datasource = <span class="string">"dbcp"</span></span><br><span class="line">    <span class="comment">## mysql/oracle/h2/oceanbase etc.</span></span><br><span class="line">    db-type = <span class="string">"mysql"</span></span><br><span class="line">    driver-class-name = <span class="string">"com.mysql.jdbc.Driver"</span></span><br><span class="line">    url = <span class="string">"jdbc:mysql://116.62.14.208:3306/seata"</span></span><br><span class="line">    user = <span class="string">"root"</span></span><br><span class="line">    password = <span class="string">"123456"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建seata数据库"><a href="#创建seata数据库" class="headerlink" title="创建seata数据库"></a>创建seata数据库</h3><p>seata 选择 store.mode = “db”，则需要创建数据库。</p><p>seata 所需的三个数据库，对应的sql的文件在根目录下的 <code>/script/server/db/mysql.sql</code></p><p><img src="4.png" alt="seata mysql"></p><p><img src="2.png" alt="seata sql"></p><p>然后就可以启动 seata-server，当然在此之前已经将nacos启动了，地址为<code>localhost;8848</code></p><h2 id="配置微服务-Account-Server"><a href="#配置微服务-Account-Server" class="headerlink" title="配置微服务 Account-Server"></a>配置微服务 Account-Server</h2><p> <strong>account-server</strong>、<strong>order-server</strong> 和 <strong>storage-server</strong> 差不多，就只展示一个的配置，</p><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xiaotang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-account<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>spring-account<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR1<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud-alibaba-dependencies.version</span>&gt;</span>0.2.2.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud-alibaba-dependencies.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">seata.version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">seata.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud-alibaba-seata.version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud-alibaba-seata.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- seata --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;seata.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-seata<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-alibaba-seata.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- feign --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-alibaba-dependencies.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="修改-application-yml-文件"><a href="#修改-application-yml-文件" class="headerlink" title="修改 application.yml 文件"></a>修改 application.yml 文件</h3><p>自定义事务组的名称 <code>tx-service-group: account-service-group</code></p><figure class="highlight yaml"><figcaption><span>application.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8021</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">account-server</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    nacos:</span></span><br><span class="line"><span class="attr">      discovery:</span> <span class="comment">#nacos注册地址</span></span><br><span class="line"><span class="attr">        server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">    <span class="comment"># seata 服务分组，要与服务端file.conf中service.vgroup_mapping的后缀对应</span></span><br><span class="line"><span class="attr">    alibaba:</span></span><br><span class="line"><span class="attr">      seata:</span></span><br><span class="line"><span class="attr">        tx-service-group:</span> <span class="string">account-service-group</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://localhost:3306/account?characterEncoding=utf8</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line"><span class="attr">  mapper-locations:</span> <span class="attr">classpath:/mapper/*.xml</span></span><br><span class="line"><span class="attr">  type-aliases-package:</span> <span class="string">com.xiaotang.springaccount</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line"><span class="attr">    org:</span></span><br><span class="line"><span class="attr">      springframework:</span></span><br><span class="line"><span class="attr">        boot:</span></span><br><span class="line"><span class="attr">          autoconfigure:</span> <span class="string">ERROR</span></span><br></pre></td></tr></table></figure><h3 id="添加并修改-registry-conf-配置文件"><a href="#添加并修改-registry-conf-配置文件" class="headerlink" title="添加并修改 registry.conf 配置文件"></a>添加并修改 registry.conf 配置文件</h3><p>主要是将注册中心改为 nacos</p><figure class="highlight bash"><figcaption><span>/src/main/resources/registry.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">registry &#123;</span><br><span class="line">  <span class="comment"># file 、nacos 、eureka、redis、zk、consul、etcd3、sofa</span></span><br><span class="line">  <span class="built_in">type</span> = <span class="string">"nacos"</span></span><br><span class="line"></span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = <span class="string">"localhost:8848"</span></span><br><span class="line">    namespace = <span class="string">"public"</span></span><br><span class="line">    cluster = <span class="string">"default"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">config &#123;</span><br><span class="line">  <span class="comment"># file、nacos 、apollo、zk、consul、etcd3</span></span><br><span class="line">  <span class="built_in">type</span> = <span class="string">"file"</span></span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = <span class="string">"localhost:8848"</span></span><br><span class="line">    namespace = <span class="string">""</span></span><br><span class="line">    cluster = <span class="string">"default"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加并修改-file-conf-配置文件，"><a href="#添加并修改-file-conf-配置文件，" class="headerlink" title="添加并修改 file.conf 配置文件，"></a>添加并修改 file.conf 配置文件，</h3><p>主要是修改自定义事务组名称</p><figure class="highlight bash"><figcaption><span>/src/main/resources/file.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">service &#123;</span><br><span class="line">  <span class="comment">#transaction service group mapping</span></span><br><span class="line">  vgroup_mapping.account-service-group=<span class="string">"default"</span></span><br><span class="line">  <span class="comment"># only support when registry.type=file, please don't set multiple addresses</span></span><br><span class="line">  default.grouplist = <span class="string">"127.0.0.1:8091"</span></span><br><span class="line">  <span class="comment"># disable seata</span></span><br><span class="line">  disableGlobalTransaction = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note danger">            <p>vgroup_mapping.account-service-group=”default” 必须配置，不然会一直查找这个配置，找不到控制台会报ERROR，同一个事务组的名称必须一致，在这里所有微服务的事务组名称必须都是 <code>account-service-group</code>。</p><p>其他配置可以不写，找不到会使用默认配置</p>          </div><p><img src="3.png" alt="ERROR"></p><hr><h3 id="在启动类中取消数据源的自动创建"><a href="#在启动类中取消数据源的自动创建" class="headerlink" title="在启动类中取消数据源的自动创建"></a>在启动类中取消数据源的自动创建</h3><p><code>exclude = DataSourceAutoConfiguration.class</code>，不去除就会报错。</p><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.SpringAccountApplication;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span>(exclude = DataSourceAutoConfiguration.class)</span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.xiaotang.springaccount.dao"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringAccountApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringAccountApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置-DataSourceProxyConfig-使用-Seata-对数据源进行代理"><a href="#配置-DataSourceProxyConfig-使用-Seata-对数据源进行代理" class="headerlink" title="配置 DataSourceProxyConfig 使用 Seata 对数据源进行代理"></a>配置 DataSourceProxyConfig 使用 Seata 对数据源进行代理</h3><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.config.DataSourceProxyConfig</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.seata.rm.datasource.DataSourceProxy;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceProxyConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// mapper.xml 映射文件坐标</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;mybatis.mapper-locations&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String mapperLocations;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">druidDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSourceProxy <span class="title">dataSourceProxy</span><span class="params">(DataSource dataSource)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceProxy(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">sqlSessionFactoryBean</span><span class="params">(DataSourceProxy dataSourceProxy)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SqlSessionFactoryBean sqlSessionFactoryBean = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        sqlSessionFactoryBean.setDataSource(dataSourceProxy);</span><br><span class="line">        sqlSessionFactoryBean.setMapperLocations(<span class="keyword">new</span> PathMatchingResourcePatternResolver()</span><br><span class="line">                .getResources(mapperLocations));</span><br><span class="line">        <span class="comment">// 添加数据库拦截器</span></span><br><span class="line">        sqlSessionFactoryBean.setPlugins(<span class="keyword">new</span> Interceptor[]&#123;<span class="keyword">new</span> InsertInterceptor()&#125;);</span><br><span class="line">        sqlSessionFactoryBean.setTransactionFactory(<span class="keyword">new</span> SpringManagedTransactionFactory());</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactoryBean.getObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-GlobalTransactional-注解开启全局分布式事务"><a href="#使用-GlobalTransactional-注解开启全局分布式事务" class="headerlink" title="使用 @GlobalTransactional 注解开启全局分布式事务"></a>使用 @GlobalTransactional 注解开启全局分布式事务</h3><figure class="highlight java"><figcaption><span>com.xiaotang.springaccount.service.AccountService</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountMapper accountMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrdersClient ordersClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StorageClient storageClient;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">add</span><span class="params">(Account account)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountMapper.insert(account);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 全局事务</span></span><br><span class="line">    <span class="meta">@GlobalTransactional</span></span><br><span class="line">    <span class="meta">@Transactional</span>(rollbackFor = Exception.class)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">addTest</span><span class="params">(Account account, Integer status)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 通过Feign调用order-server、storage-server接口</span></span><br><span class="line">        ordersClient.add(<span class="string">"banana"</span>, <span class="number">2</span>, <span class="number">1</span>, account.getUsername());</span><br><span class="line">        storageClient.add(<span class="string">"apple"</span>, <span class="number">3</span>);</span><br><span class="line">        Integer index = add(account);</span><br><span class="line">        <span class="keyword">if</span>(status == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"hello world"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给每个库都创建创建 <span class="label default">undo_log 表（日志回滚表 ）</span> ，文件在 <strong>seata/script/client/at/db/mysql.sql</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`undo_log`</span>(</span><br><span class="line">    <span class="string">`id`</span>            <span class="built_in">BIGINT</span>(<span class="number">20</span>)   <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'increment id'</span>,</span><br><span class="line">    <span class="string">`branch_id`</span>     <span class="built_in">BIGINT</span>(<span class="number">20</span>)   <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'branch transaction id'</span>,</span><br><span class="line">    <span class="string">`xid`</span>           <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'global transaction id'</span>,</span><br><span class="line">    <span class="string">`context`</span>       <span class="built_in">VARCHAR</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'undo_log context,such as serialization'</span>,</span><br><span class="line">    <span class="string">`rollback_info`</span> LONGBLOB     <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'rollback info'</span>,</span><br><span class="line">    <span class="string">`log_status`</span>    <span class="built_in">INT</span>(<span class="number">11</span>)      <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'0:normal status,1:defense status'</span>,</span><br><span class="line">    <span class="string">`log_created`</span>   DATETIME     <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'create datetime'</span>,</span><br><span class="line">    <span class="string">`log_modified`</span>  DATETIME     <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'modify datetime'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">    <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`ux_undo_log`</span> (<span class="string">`xid`</span>, <span class="string">`branch_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  AUTO_INCREMENT = <span class="number">1</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8 <span class="keyword">COMMENT</span> =<span class="string">'AT transaction mode undo table'</span>;</span><br></pre></td></tr></table></figure><h2 id="启动服务功能演示"><a href="#启动服务功能演示" class="headerlink" title="启动服务功能演示"></a>启动服务功能演示</h2><div class="tabs" id="选项卡-2"><ul class="nav-tabs"><li class="tab active"><a href="#选项卡-2-1">seata-server</a></li><li class="tab"><a href="#选项卡-2-2">account-server</a></li><li class="tab"><a href="#选项卡-2-3">order-server</a></li><li class="tab"><a href="#选项卡-2-4">storage-server</a></li></ul><div class="tab-content"><div class="tab-pane active" id="选项卡-2-1"><p><img src="5-0.png" alt="seata-server"></p></div><div class="tab-pane" id="选项卡-2-2"><p><img src="5-1.png" alt="account-server"></p></div><div class="tab-pane" id="选项卡-2-3"><p><img src="5-2.png" alt="order-server"></p></div><div class="tab-pane" id="选项卡-2-4"><p><img src="5-3.png" alt="storage-server"></p></div></div></div><p>成功注册到seata</p><hr><p>当我在添加完所有的数据后，最后抛出一个RuntimeException，就会看到order-server和storage-server 最后回滚了操作。</p><div class="tabs" id="选项卡-2"><ul class="nav-tabs"><li class="tab active"><a href="#选项卡-2-1">order-server</a></li><li class="tab"><a href="#选项卡-2-2">storage-server</a></li></ul><div class="tab-content"><div class="tab-pane active" id="选项卡-2-1"><p><img src="6-1.png" alt="order-server"></p></div><div class="tab-pane" id="选项卡-2-2"><p><img src="6-2.png" alt="storage-server"></p></div></div></div><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://juejin.im/post/5ddddd75e51d45330c6aec6f" target="_blank" rel="noopener">Spring Alibaba Cloud使用Seata实现分布式事务，Nacos作为配置中心(一)</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Seata&lt;/code&gt; 是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。&lt;code&gt;Seata&lt;/code&gt; 将为用户提供了 AT、TCC、SAGA 和 XA 事务模式，为用户打造一站式的分布式解决方案。&lt;/p&gt;
    
    </summary>
    
      <category term="springcloud" scheme="http://zhizhi.tangliangdong.me/categories/springcloud/"/>
    
    
      <category term="seata" scheme="http://zhizhi.tangliangdong.me/tags/seata/"/>
    
  </entry>
  
  <entry>
    <title>linux-buff-cache</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-linux-buff-cache/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/10/2020-1-10-linux-buff-cache/</id>
    <published>2020-01-10T01:57:43.000Z</published>
    <updated>2020-01-10T03:15:46.203Z</updated>
    
    <content type="html"><![CDATA[<p>linux 硬盘缓存对执行性能的影响，linux不只是把你的内存吃了，</p><a id="more"></a><h2 id="清理内存"><a href="#清理内存" class="headerlink" title="清理内存"></a>清理内存</h2><p>我们可以使用特殊的文件 <code>/proc/sys/vm/drop_caches</code>，将 3 写入，我们就能清除硬盘缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ free -m</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          1504       1471         33          0         36        801</span><br><span class="line">-/+ buffers/cache:        633        871</span><br><span class="line">Swap:         2047          6       2041</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> 3 | sudo tee /proc/sys/vm/drop_caches </span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">$ free -m</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          1504        763        741          0          0        134</span><br><span class="line">-/+ buffers/cache:        629        875</span><br><span class="line">Swap:         2047          6       2041</span><br></pre></td></tr></table></figure><h2 id="硬盘缓存对程序加载的影响"><a href="#硬盘缓存对程序加载的影响" class="headerlink" title="硬盘缓存对程序加载的影响"></a>硬盘缓存对程序加载的影响</h2><p>让我们制作两个测试程序，一个用 Python，一个用 Java。 Python 和 Java都带有相当大的运行时，必须加载这些运行时才能运行该应用程序。 这是磁盘缓存发挥其魔力的完美方案。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ cat Hello.java</span><br><span class="line">class Hello &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello World! Regards, Java"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ javac Hello.java</span><br><span class="line"></span><br><span class="line">$ java Hello</span><br><span class="line">Hello World! Regards, Java</span><br></pre></td></tr></table></figure><p>我们先清除缓存，然后观察运行这两个程序需要多久</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> 3 | sudo tee /proc/sys/vm/drop_caches</span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">$ free -h</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.8G        1.1G        559M        768K        106M        538M</span><br><span class="line">Swap:            0B          0B          0B</span><br><span class="line"></span><br><span class="line">$ time java Hello</span><br><span class="line">Hello World! Regards, Java</span><br><span class="line"></span><br><span class="line">real0m0.350s</span><br><span class="line">user0m0.056s</span><br><span class="line">sys0m0.021s</span><br><span class="line"></span><br><span class="line">$ free -h</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.8G        1.1G        549M        768K        115M        534M</span><br><span class="line">Swap:            0B          0B          0B</span><br><span class="line"></span><br><span class="line">$ time java Hello</span><br><span class="line">Hello World! Regards, Java</span><br><span class="line"></span><br><span class="line">real0m0.202s</span><br><span class="line">user0m0.047s</span><br><span class="line">sys0m0.015s</span><br></pre></td></tr></table></figure><div class="note info">            <p>明显，第二次执行该程序的时间明显缩短了，而且 buff/cache 也变大了</p>          </div><h2 id="硬盘缓存对文件读取速度的影响"><a href="#硬盘缓存对文件读取速度的影响" class="headerlink" title="硬盘缓存对文件读取速度的影响"></a>硬盘缓存对文件读取速度的影响</h2><p>我们先创建一个大文件，看看磁盘缓存如何影响我们读取它的速度。我们创建了一个200MB的文件，文件的大小可以自己进行判断。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> 3 | sudo tee /proc/sys/vm/drop_caches</span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">$ free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.8G        1.1G        568M        768K        103M        546M</span><br><span class="line">Swap:            0B          0B          0B</span><br><span class="line"></span><br><span class="line">$ dd <span class="keyword">if</span>=/dev/zero of=bigfile bs=1M count=200</span><br><span class="line">200+0 records <span class="keyword">in</span></span><br><span class="line">200+0 records out</span><br><span class="line">209715200 bytes (210 MB) copied, 0.483083 s, 434 MB/s</span><br><span class="line"></span><br><span class="line">$ ls -lh bigfile</span><br><span class="line">-rw-r--r-- 1 root root 200M Jan 10 10:39 bigfile</span><br><span class="line"></span><br><span class="line">$ free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.8G        1.1G        362M        768K        310M        529M</span><br><span class="line">Swap:            0B          0B          0B</span><br></pre></td></tr></table></figure><p>由于文件刚刚被写入，因此它将进入磁盘缓存。 200MB的文件在“缓存”中引起了200MB的增加。 让我们读它，清除缓存，然后再次读以查看它有多快：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ time cat bigfile &gt; /dev/null</span><br><span class="line"></span><br><span class="line">real0m0.164s</span><br><span class="line">user0m0.001s</span><br><span class="line">sys0m0.053s</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> 3 | sudo tee /proc/sys/vm/drop_caches</span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">$ time cat bigfile &gt; /dev/null</span><br><span class="line"></span><br><span class="line">real0m1.831s</span><br><span class="line">user0m0.002s</span><br><span class="line">sys0m0.079s</span><br></pre></td></tr></table></figure><div class="note danger">            <p>读取的速度快了也有11倍了。</p>          </div><blockquote><p>Linux磁盘缓存非常简单。 它使用备用内存来大大提高磁盘访问速度，而不会占用应用程序任何内存。 在Linux上完全使用的ram存储是有效的硬件使用，而不是警告信号。</p></blockquote><a href="/2020/01/10/2020-1-10-file-descriptor/" title="对 > /dev/null 的延伸认识">对 > /dev/null 的延伸认识</a><hr><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li>部分翻译自 <a href="https://www.linuxatemyram.com/play.html" target="_blank" rel="noopener">Experiments and fun with the Linux disk cache</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux 硬盘缓存对执行性能的影响，linux不只是把你的内存吃了，&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://zhizhi.tangliangdong.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="linux" scheme="http://zhizhi.tangliangdong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>日志文件查看搜索</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/09/2020-1-9-linux-search/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/09/2020-1-9-linux-search/</id>
    <published>2020-01-09T08:47:23.000Z</published>
    <updated>2020-01-10T01:24:14.305Z</updated>
    
    <content type="html"><![CDATA[<p>筛查日志这件事，根据情况不同，采用的方法也会有所不同。比如日志很小，至多几千行这样的情况，我们完全可以使用一般的文本编辑器打开，直接查找所需内容即可。而像一些“大型”日志，尤其是长时间稳定性测试所产生的日志，动辄可能会有几个g，几十g，再用编辑器打开显然不够现实。</p><a id="more"></a><h2 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h2><blockquote><p> grep命令是linux下最好用的命令之一。grep用来筛选内容的速度应该是最快的，这点没有之一，大到几个g的文件，几秒就可以完成对单一关键词的筛取，可谓是查找大文件的“神器”，而且grep命令格式十分简单，常用的搜索功能只需三个参数即可完成。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [option] patten file</span><br></pre></td></tr></table></figure><table><thead><tr><th>缩写</th><th>全称</th><th>备注</th></tr></thead><tbody><tr><td>-a</td><td>–text</td><td>不要忽略二进制的数据。</td></tr><tr><td>-A &lt;显示行数&gt;</td><td>–after-context=&lt;显示行数&gt;</td><td>显示匹配行之<span class="label danger">后</span>的n行的内容</td></tr><tr><td>-b</td><td>–byte-offset</td><td>在匹配行之前，标示出该行第一个字符的编号。</td></tr><tr><td>-B &lt;显示行数&gt;</td><td>–before-context=&lt;显示行数&gt;</td><td>显示匹配行之<span class="label danger">前</span>的n行的内容</td></tr><tr><td>-c</td><td>–count</td><td>统计符合样式的列数</td></tr><tr><td>-C &lt;显示行数&gt;</td><td>–context=&lt;显示行数&gt;或 -&lt;显示行数&gt;</td><td>显示匹配行<span class="label danger">前后</span>前后的n行的内容</td></tr><tr><td>-i</td><td>–ignore-case</td><td>忽略字符大小写差异</td></tr><tr><td>-n</td><td>–line-number</td><td>显示符合样式的行号</td></tr><tr><td>-r</td><td>–recursive</td><td>遍历文件夹查找</td></tr><tr><td>-l</td><td>–file-with-matches</td><td>列出文件内容符合指定的样式的文件名称</td></tr><tr><td>-L</td><td>–files-without-match</td><td>列出文件内容<span class="label danger">不符合</span>指定的样式的文件名称。</td></tr><tr><td>-v</td><td>–revert-match</td><td>显示不包含匹配文本的所有行</td></tr></tbody></table><div class="note danger">            <p>如果 grep 命令打印 Binary file catalina.out matches，则需要加上 -a 参数</p>          </div><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><em>快速，可批量筛选出含有关键词的全部文本行。</em></td><td><em>如果关键词在文本中出现较多，无法快速定位至某一次关键词出现的位置，依然会出现刷屏效果。</em></td></tr></tbody></table><h2 id="more-less-命令"><a href="#more-less-命令" class="headerlink" title="more / less 命令"></a>more / less 命令</h2><blockquote><p>more和less命令都是用分页查看文本的方式，每次只显示一定行的文本，避免像cat那样被大量的文字快速刷屏，同时支持搜索，可以在文件中搜索某个关键词并实现定位。</p></blockquote><ul><li><strong>less</strong> 似乎更适合对于日志的筛查，可以进行向前或向后<strong>双方向的搜索</strong>，并且可以按方向键<strong>逐行前后滚动</strong></li><li><strong>more</strong> 只支持向后查找和向后翻页或滚动。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more/less file</span><br></pre></td></tr></table></figure><p><strong>搜索关键字：</strong>输入命令后按”/“，输入关键词后回车即可定位至关键词第一次出现的位置，此时按 <strong>n键</strong> 可切换至下一次出现的位置，使用less时，按 <strong>N键</strong> 返回上一次出现的位置。</p><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><em>可以自动定位关键词出现的位置，并显示关键词前后的文本内容，使用起来比较方便。</em></td><td><em>搜索速度较慢，文件特别大的话要等很久才能搜索到。</em></td></tr></tbody></table><h2 id="head-tail-命令"><a href="#head-tail-命令" class="headerlink" title="head / tail 命令"></a><strong>head / tail 命令</strong></h2><blockquote><p>head和tail命令是功能近似而作用位置相反的两个命令，head命令用来从开头读取文本，tail命令则是从尾部读取文本。当我们不关注日志中间的一大坨内容，只关注开头或结尾的部分内容时，head和tail命令可以说是最好的解决方案。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示开头到第n行</span></span><br><span class="line">head -n file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从倒数第n行开始显示到末尾</span></span><br><span class="line">tail -n file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从文件开头第n行开始显示到末尾</span></span><br><span class="line">tail +n file</span><br></pre></td></tr></table></figure><p><strong>使用方法：</strong>设置需要从文件开头 / 结尾查找的行数（n），即可显示对应结果。</p><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><em>方便实用，尤其是tail，可以从尾部读取文件。</em></td><td><em>单独使用不能查找关键词，需用管道结合 grep进行查找</em></td></tr></tbody></table><div class="note info">            <p><strong>head / tail和 grep 结合使用</strong></p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head/tail -n file | grep pattern</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://cloud.tencent.com/developer/article/1484955" target="_blank" rel="noopener">大日志，看我如何对付你</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;筛查日志这件事，根据情况不同，采用的方法也会有所不同。比如日志很小，至多几千行这样的情况，我们完全可以使用一般的文本编辑器打开，直接查找所需内容即可。而像一些“大型”日志，尤其是长时间稳定性测试所产生的日志，动辄可能会有几个g，几十g，再用编辑器打开显然不够现实。&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://zhizhi.tangliangdong.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>vim 配置</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/08/2020-1-8-vim-config/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/08/2020-1-8-vim-config/</id>
    <published>2020-01-08T06:53:57.000Z</published>
    <updated>2020-01-08T07:13:42.429Z</updated>
    
    <content type="html"><![CDATA[<p>在阿里云服务器用 vim 修改配置文件时，发现没有显示行号，缩进还不是4个，而且鼠标也不能用，还有些别的问题，用起来不太方便，于是就对 vim 编辑器进行些基础的配置。</p><a id="more"></a><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置所有用户的vim配置文件</span></span><br><span class="line">vim /etc/vimrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动加载配置</span></span><br><span class="line"><span class="built_in">source</span> .vimrc</span><br></pre></td></tr></table></figure><h2 id="配置信息"><a href="#配置信息" class="headerlink" title="配置信息"></a>配置信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示行号</span></span><br><span class="line"><span class="built_in">set</span> nu</span><br><span class="line"><span class="comment"># 鼠标可用</span></span><br><span class="line"><span class="built_in">set</span> mouse=a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动时隐去援助提示</span></span><br><span class="line"><span class="built_in">set</span> shortmess=atI</span><br><span class="line"></span><br><span class="line"><span class="comment"># 语法高亮</span></span><br><span class="line">syntax on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用vim的键盘模式</span></span><br><span class="line"><span class="built_in">set</span> nocompatible</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不需要备份</span></span><br><span class="line"><span class="built_in">set</span> nobackup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 没有保存或文件只读时弹出确认</span></span><br><span class="line"><span class="built_in">set</span> confirm</span><br><span class="line"></span><br><span class="line"><span class="comment"># tab缩进</span></span><br><span class="line"><span class="built_in">set</span> tabstop=4</span><br><span class="line"><span class="built_in">set</span> shiftwidth=4</span><br><span class="line"><span class="built_in">set</span> expandtab</span><br><span class="line"><span class="built_in">set</span> smarttab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件自动检测外部更改</span></span><br><span class="line"><span class="built_in">set</span> autoread</span><br><span class="line"></span><br><span class="line"><span class="comment"># c文件自动缩进</span></span><br><span class="line"><span class="built_in">set</span> cindent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动对齐</span></span><br><span class="line"><span class="built_in">set</span> autoindent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 智能缩进</span></span><br><span class="line"><span class="built_in">set</span> smartindent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 高亮查找匹配</span></span><br><span class="line"><span class="built_in">set</span> hlsearch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 背景色</span></span><br><span class="line"><span class="built_in">set</span> background=dark</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示匹配</span></span><br><span class="line"><span class="built_in">set</span> showmatch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示标尺，就是在右下角显示光标位置</span></span><br><span class="line"><span class="built_in">set</span> ruler</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除vi的一致性</span></span><br><span class="line"><span class="built_in">set</span> nocompatible</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许折叠</span></span><br><span class="line"><span class="built_in">set</span> foldenable</span><br><span class="line"></span><br><span class="line"><span class="comment">#####################设置折叠#####################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据语法折叠</span></span><br><span class="line"><span class="built_in">set</span> fdm=syntax</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动折叠</span></span><br><span class="line"><span class="built_in">set</span> fdm=manual</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置键盘映射，通过空格设置折叠</span></span><br><span class="line">nnoremap &lt;space&gt; @=((foldclosed(line(<span class="string">'.'</span>)&lt;0)?<span class="string">'zc'</span>:<span class="string">'zo'</span>))&lt;CR&gt;</span><br><span class="line"><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span></span><br><span class="line"><span class="comment"># 不要闪烁</span></span><br><span class="line"><span class="built_in">set</span> novisualbell</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动显示状态行</span></span><br><span class="line"><span class="built_in">set</span> laststatus=2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 浅色显示当前行</span></span><br><span class="line">autocmd InsertLeave * se nocul</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用浅色高亮当前行</span></span><br><span class="line">autocmd InsertEnter * se cul</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示输入的命令</span></span><br><span class="line"><span class="built_in">set</span> showcmd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 被分割窗口之间显示空白</span></span><br><span class="line"><span class="built_in">set</span> fillchars=vert:/</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> fillchars=stl:/</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> fillchars=stlnc:/</span><br></pre></td></tr></table></figure><hr><h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><ul><li><a href="https://www.zhihu.com/question/19989337/answer/168444287" target="_blank" rel="noopener">有哪些编程必备的 Vim 配置？ - 地球的外星人君的回答 - 知乎</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在阿里云服务器用 vim 修改配置文件时，发现没有显示行号，缩进还不是4个，而且鼠标也不能用，还有些别的问题，用起来不太方便，于是就对 vim 编辑器进行些基础的配置。&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://zhizhi.tangliangdong.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="vim" scheme="http://zhizhi.tangliangdong.me/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>nginx反向代理(Reverse Proxy)</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/08/2020-1-8-nginx-reverse-Proxy/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/08/2020-1-8-nginx-reverse-Proxy/</id>
    <published>2020-01-08T05:38:06.000Z</published>
    <updated>2020-01-08T07:08:11.738Z</updated>
    
    <content type="html"><![CDATA[<p>反向代理（Reverse Proxy）方式是指以代理服务器来接受Internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给Internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器。</p><a id="more"></a><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><strong>正向代理</strong>：一个位于客户端和原始服务器之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。</p><p><strong>反向代理</strong>：以代理服务器来接受Internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给Internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器。</p><p><img src="1.png" alt="正向代理"></p><p><img src="2.png" alt="反向代理"></p><p>简单来说，</p><ul><li><p>正向代理就是<strong>代理服务器</strong>代理的是多个客户端</p></li><li><p>反向代理就是代理服务器代理的是多个服务端</p></li></ul><h2 id="反向代理的好处"><a href="#反向代理的好处" class="headerlink" title="反向代理的好处"></a>反向代理的好处</h2><ul><li>可以起到保护网站安全的作用，因为任何来自Internet的请求都必须先经过代理服务器。</li><li>通过缓存静态资源，加速Web请求。</li><li>实现负载均衡。顺便说下，目前市面上，主流的负载均衡方案，硬件设备有F5，软件方案有四层负载均衡的LVS，七层负载均衡的Nginx、Haproxy等。</li></ul><h2 id="nginx反向代理实战"><a href="#nginx反向代理实战" class="headerlink" title="nginx反向代理实战"></a>nginx反向代理实战</h2><p>在 http 节点下，添加 <code>upstream</code> 节点，添加 tomcat 集群</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">upstream tomcats &#123;</span><br><span class="line">       <span class="built_in"> server </span>127.0.0.1:9001;</span><br><span class="line">       <span class="built_in"> server </span>127.0.0.1:9002;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upstream 还可以为每个设备设置状态值，这些状态值的含义分别如下：</p><ul><li>down：表示单前的server暂时不参与负载.</li><li>weight：默认为1.weight越大，负载的权重就越大。</li><li>max_fails：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误.</li><li>fail_timeout: max_fails次失败后，暂停的时间。</li><li>backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。</li></ul><p><strong>例子：</strong></p><pre><code>upstream tomcats{    server 127.0.0.1:9001 down;    server 127.0.0.1:9002 backup;    server 127.0.0.1:9003 weight=2;    server 127.0.0.1:9004 max_fails=2 fail_timeout=60s;   }</code></pre><div class="note danger">            <p>注意 “=” 前后不能有空格</p>          </div><p>负载均衡分配策略：</p><ul><li><p>nano（轮询）：upstream按照轮询（默认）方式进行负载，每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。虽然这种方式简便、成本低廉。但缺点是：可靠性低和负载分配不均衡。</p></li><li><p>weight（权重）：指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。总和为10</p></li><li><p>ip_hash（访问ip）：每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</p><p>配置只需要在upstream中加入 ip_hash; 即可。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream tomcats &#123;</span><br><span class="line">      ip_hash;</span><br><span class="line">     <span class="built_in"> server </span>127.0.0.1:9001;</span><br><span class="line">     <span class="built_in"> server </span>127.0.0.1:9002;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>fair（第三方）：按后端服务器的响应时间来分配请求，响应时间短的优先分配。与weight分配策略类似。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream tomcats &#123;</span><br><span class="line">     <span class="built_in"> server </span>127.0.0.1:9001;</span><br><span class="line">     <span class="built_in"> server </span>127.0.0.1:9002;</span><br><span class="line">      fair;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><p>在http server 节点下配置location为Tomcat集群</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass_header</span> Server;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Scheme <span class="variable">$scheme</span>;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://tomcats;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="启动nginx并访问"><a href="#启动nginx并访问" class="headerlink" title="启动nginx并访问"></a>启动nginx并访问</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sbin/nginx</span><br></pre></td></tr></table></figure><div class="tabs" id="选项卡-2"><ul class="nav-tabs"><li class="tab active"><a href="#选项卡-2-1">server-01</a></li><li class="tab"><a href="#选项卡-2-2">server-02</a></li><li class="tab"><a href="#选项卡-2-3">server-03</a></li></ul><div class="tab-content"><div class="tab-pane active" id="选项卡-2-1"><p><img src="3.png" alt="server-01"></p></div><div class="tab-pane" id="选项卡-2-2"><p><img src="4.png" alt="server-02"></p></div><div class="tab-pane" id="选项卡-2-3"><p><img src="5.png" alt="server-03"></p></div></div></div><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://juejin.im/entry/57fb07b0816dfa0056c0ada8" target="_blank" rel="noopener">Nginx 反向代理详解</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;反向代理（Reverse Proxy）方式是指以代理服务器来接受Internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给Internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器。&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://zhizhi.tangliangdong.me/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="nginx" scheme="http://zhizhi.tangliangdong.me/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>springboot mybatis拦截器interceptor配置</title>
    <link href="http://zhizhi.tangliangdong.me/2020/01/07/2020-1-7-mybatis-interceptor/"/>
    <id>http://zhizhi.tangliangdong.me/2020/01/07/2020-1-7-mybatis-interceptor/</id>
    <published>2020-01-07T02:43:41.000Z</published>
    <updated>2020-01-07T08:30:58.064Z</updated>
    
    <content type="html"><![CDATA[<p>在往数据库中插入数据时，如果 <em>uuid<em>、</em>createTime<em>、</em>updateTime</em> 没有赋值，则程序自动添加一个值，更新数据时则自动更新 <em>updateTime</em></p><a id="more"></a><h2 id="数据库连接配置"><a href="#数据库连接配置" class="headerlink" title="数据库连接配置"></a>数据库连接配置</h2><figure class="highlight yaml"><figcaption><span>/resources/application.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8020</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">order-server</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://localhost:3306/order?useUnicode=true&amp;amp;characterEncoding=utf8</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line"><span class="attr">  mapper-locations:</span> <span class="attr">classpath:/mapper/*.xml</span></span><br><span class="line"><span class="attr">  type-aliases-package:</span> <span class="string">com.xiaotang.springorder</span></span><br><span class="line"><span class="comment">#  configuration:</span></span><br><span class="line"><span class="comment">#    interceptors:</span></span><br><span class="line"><span class="comment">#      - com.xiaotang.springorder.interceptor.InsertInterceptor</span></span><br></pre></td></tr></table></figure><h2 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h2><p>Executor 提供的方法中，update 包含了 新增，修改和删除类型，无法直接区分，需要借助 <code>MappedStatement</code> 类的属性 <code>SqlCommandType</code> 来进行判断，该类包含了所有的操作类型</p><figure class="highlight java"><figcaption><span>SqlCommandType.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> SqlCommandType &#123;</span><br><span class="line">    UNKNOWN, INSERT, UPDATE, DELETE, SELECT, FLUSH;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>毕竟新增和修改的场景，有些参数是有区别的，比如<strong>创建时间</strong>和<strong>更新时间</strong>，<code>update</code> 时是无需兼顾创建时间字段的。</p><figure class="highlight java"><figcaption><span>拦截器中获取sql命令类型和参数</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取MappedStatement实例, 并获取当前SQL命令类型</span></span><br><span class="line">MappedStatement ms = (MappedStatement) invocation.getArgs()[<span class="number">0</span>];</span><br><span class="line">SqlCommandType commandType = ms.getSqlCommandType();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 获取当前正在被操作的类, 有可能是Java Bean, 也可能是普通的操作对象, 比如普通的参数传递</span></span><br><span class="line"><span class="comment">// 普通参数, 即是 @Param 包装或者原始 Map 对象, 普通参数会被 Mybatis 包装成 Map 对象</span></span><br><span class="line"><span class="comment">// 即是 org.apache.ibatis.binding.MapperMethod$ParamMap</span></span><br><span class="line">Object parameter = invocation.getArgs()[<span class="number">1</span>];</span><br><span class="line"><span class="comment">// 获取拦截器指定的方法类型, 通常需要拦截 update</span></span><br><span class="line">String methodName = invocation.getMethod().getName();</span><br></pre></td></tr></table></figure><figure class="highlight java"><figcaption><span>/src/main/java/com.xiaotang.springorder.interceptor</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Intercepts</span>(&#123;</span><br><span class="line">        <span class="meta">@Signature</span>(type = Executor.class, method = <span class="string">"update"</span>, args = &#123;MappedStatement.class, Object.class &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertInterceptor</span> <span class="keyword">implements</span> <span class="title">Interceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(Invocation invocation)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        Object[] objects = invocation.getArgs();</span><br><span class="line">        MappedStatement mappedStatement = (MappedStatement) invocation.getArgs()[<span class="number">0</span>];</span><br><span class="line">        String commandType =  mappedStatement.getSqlCommandType().name();</span><br><span class="line">        Object object = objects[<span class="number">1</span>];</span><br><span class="line">        BeanWrapper beanWrapper = <span class="keyword">new</span> BeanWrapperImpl(object);</span><br><span class="line">        PropertyDescriptor[] descriptors = beanWrapper.getPropertyDescriptors();</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"INSERT"</span>.equals(commandType)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (PropertyDescriptor descriptor : descriptors) &#123;</span><br><span class="line">                String filedName = descriptor.getName();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">"class"</span>.equals(filedName) &amp;&amp; !<span class="string">"empty"</span>.equals(filedName)) &#123;</span><br><span class="line">                    Field field = FieldUtils.getField(object.getClass(), filedName, <span class="keyword">true</span>);</span><br><span class="line">                    UUID uuid = field.getAnnotation(UUID.class);</span><br><span class="line">                    CreateTime createTime = field.getAnnotation(CreateTime.class);</span><br><span class="line">                    UpdateTime updateTime = field.getAnnotation(UpdateTime.class);</span><br><span class="line">                    <span class="keyword">if</span> (uuid != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(beanWrapper.getPropertyValue(filedName)==<span class="keyword">null</span> || <span class="string">""</span>.equals(beanWrapper.getPropertyValue(filedName))) &#123;</span><br><span class="line">                            beanWrapper.setPropertyValue(filedName, java.util.UUID.randomUUID().toString().replaceAll(<span class="string">"-"</span>, <span class="string">""</span>));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (createTime != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        beanWrapper.setPropertyValue(filedName, Calendar.getInstance().getTime());</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (updateTime != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        beanWrapper.setPropertyValue(filedName, Calendar.getInstance().getTime());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"UPDATE"</span>.equals(commandType))&#123;</span><br><span class="line">            <span class="keyword">for</span> (PropertyDescriptor descriptor : descriptors) &#123;</span><br><span class="line">                String filedName = descriptor.getName();</span><br><span class="line">                <span class="keyword">if</span>(!<span class="string">"class"</span>.equals(filedName)&amp;&amp;!<span class="string">"empty"</span>.equals(filedName))&#123;</span><br><span class="line">                    Field field=  FieldUtils.getField(object.getClass(), filedName, <span class="keyword">true</span>);</span><br><span class="line">                    UpdateTime updateTime = field.getAnnotation(UpdateTime.class);</span><br><span class="line">                    <span class="keyword">if</span>(updateTime!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                        beanWrapper.setPropertyValue(filedName, Calendar.getInstance().getTime());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        objects[<span class="number">1</span>] = beanWrapper.getWrappedInstance();</span><br><span class="line">        <span class="keyword">return</span> invocation.proceed();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">plugin</span><span class="params">(Object target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (target <span class="keyword">instanceof</span> Executor) &#123;</span><br><span class="line">            <span class="keyword">return</span> Plugin.wrap(target, <span class="keyword">this</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> target;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProperties</span><span class="params">(Properties properties)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>这样配置好拦截器并不会被springboot读取，还需要加一个配置类，将拦截器以bean的形式写入</p><figure class="highlight java"><figcaption><span>/src/main/java/com.xiaotang.springorder.interceptor</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">InsertInterceptor <span class="title">insertInterceptor</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> InsertInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><p><a href="https://segmentfault.com/a/1190000017393523" target="_blank" rel="noopener">Mybatis Interceptor 拦截器</a></p></li><li><p><a href="https://unclecatmyself.github.io/2019/01/19/propertyDescriptor/" target="_blank" rel="noopener">关于属性描述符PropertyDescriptor</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在往数据库中插入数据时，如果 &lt;em&gt;uuid&lt;em&gt;、&lt;/em&gt;createTime&lt;em&gt;、&lt;/em&gt;updateTime&lt;/em&gt; 没有赋值，则程序自动添加一个值，更新数据时则自动更新 &lt;em&gt;updateTime&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="springboot" scheme="http://zhizhi.tangliangdong.me/tags/springboot/"/>
    
      <category term="interceptor" scheme="http://zhizhi.tangliangdong.me/tags/interceptor/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud Gateway和Nacos实现动态路由</title>
    <link href="http://zhizhi.tangliangdong.me/2019/12/26/2019-12-27-springcloud-nacos-gateway-dynamic-config/"/>
    <id>http://zhizhi.tangliangdong.me/2019/12/26/2019-12-27-springcloud-nacos-gateway-dynamic-config/</id>
    <published>2019-12-26T09:08:39.000Z</published>
    <updated>2020-01-07T03:22:57.332Z</updated>
    
    <content type="html"><![CDATA[<p>网关中有两个重要的概念，那就是路由配置和路由规则，路由配置是指配置某请求路径路由到指定的目的地址。而路由规则是指匹配到路由配置之后，再根据路由规则进行转发处理。<br>Spring Cloud Gateway作为所有请求流量的入口，在实际生产环境中为了保证高可靠和高可用，尽量避免重启,需要实现Spring Cloud Gateway动态路由配置。</p><a id="more"></a><p>Spring Cloud Gateway的官方文档并没有讲如何动态配置，查看 Spring Cloud Gateway的源码，发现<code>在org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint</code>类中提供了动态配置的Rest接口，但是<code>需要开启Gateway的端点</code>，而且提供的功能不是很强大。通过参考和 <code>GatewayControllerEndpoint</code> 相关的代码，可以自己编码实际动态路由配置。</p><h2 id="用IDE新建Maven工程"><a href="#用IDE新建Maven工程" class="headerlink" title="用IDE新建Maven工程"></a>用IDE新建Maven工程</h2><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xiaotang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springcloud-gateway<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot Gateway<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR1<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud-alibaba-dependencies.version</span>&gt;</span>0.2.2.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud-alibaba-dependencies.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-alibaba-dependencies.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网关中有两个重要的概念，那就是路由配置和路由规则，路由配置是指配置某请求路径路由到指定的目的地址。而路由规则是指匹配到路由配置之后，再根据路由规则进行转发处理。&lt;br&gt;Spring Cloud Gateway作为所有请求流量的入口，在实际生产环境中为了保证高可靠和高可用，尽量避免重启,需要实现Spring Cloud Gateway动态路由配置。&lt;/p&gt;
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="Gateway" scheme="http://zhizhi.tangliangdong.me/tags/Gateway/"/>
    
      <category term="Spring Cloud" scheme="http://zhizhi.tangliangdong.me/tags/Spring-Cloud/"/>
    
      <category term="Nacos" scheme="http://zhizhi.tangliangdong.me/tags/Nacos/"/>
    
  </entry>
  
  <entry>
    <title>springcloud 配置gateway网关</title>
    <link href="http://zhizhi.tangliangdong.me/2019/12/26/2019-12-26-springcloud-gateway/"/>
    <id>http://zhizhi.tangliangdong.me/2019/12/26/2019-12-26-springcloud-gateway/</id>
    <published>2019-12-26T07:35:30.000Z</published>
    <updated>2019-12-27T07:16:33.204Z</updated>
    
    <content type="html"><![CDATA[<p>概述：Spring Cloud Gateway 是 Spring Cloud 的一个全新项目，该项目是基于 Spring 5.0，Spring Boot 2.0 和 Project Reactor 等技术开发的网关，它旨在为微服务架构提供一种简单有效的统一的 API 路由管理方式。</p><p>Spring Cloud Gateway 作为 Spring Cloud 生态系统中的网关，目标是替代 Netflix Zuul，其不仅提供统一的路由方式，并且基于 Filter 链的方式提供了网关基本的功能，例如：安全、监控、埋点和限流等。</p><a id="more"></a><p>Spring Cloud Gateway 的特征：</p><ul><li>基于 Spring Framework 5，Project Reactor 和 Spring Boot 2.0</li><li>动态路由</li><li>Predicates 和 Filters 作用于特定路由</li><li>集成 Hystrix 断路器</li><li>集成 Spring Cloud DiscoveryClient</li><li>易于编写的 Predicates 和 Filters</li><li>限流</li><li>路径重写</li></ul><h2 id="vs-Netflix-Zuul"><a href="#vs-Netflix-Zuul" class="headerlink" title="vs Netflix Zuul"></a>vs Netflix Zuul</h2><p>Zuul 基于 Servlet 2.5（使用 3.x），使用阻塞 API，它不支持任何长连接，如 WebSockets。而 Spring Cloud Gateway 建立在 Spring Framework 5，Project Reactor 和 Spring Boot 2 之上，使用非阻塞 API，支持 WebSockets，并且由于它与 Spring 紧密集成，所以将会是一个更好的开发体验。</p><p>要说缺点，其实 Spring Cloud Gateway 还是有的。目前它的文档还不是很完善，官方文档有许多还处于 TODO 状态，网络上关于它的文章也还比较少。如果你决定要使用它，那么你必须得有耐心通过自己阅读源码来解决可能遇到的问题。</p><h2 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h2><ul><li><strong>Route（路由）</strong>：这是网关的基本构建块。它由一个 ID，一个目标 URI，一组断言和一组过滤器定义。如果断言为真，则路由匹配。</li><li><strong>Predicate（断言）</strong>：这是一个 <a href="http://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html" target="_blank" rel="noopener">Java 8 的 Predicate</a>。输入类型是一个 <a href="https://docs.spring.io/spring/docs/5.0.x/javadoc-api/org/springframework/web/server/ServerWebExchange.html" target="_blank" rel="noopener"><code>ServerWebExchange</code></a>。我们可以使用它来匹配来自 HTTP 请求的任何内容，例如 headers 或参数。</li><li><strong>Filter（过滤器）</strong>：这是 <code>org.springframework.cloud.gateway.filter.GatewayFilter</code> 的实例，我们可以使用它修改请求和响应。</li></ul><p><img src="1.png" alt="Gateway 流程"></p><p>客户端向 Spring Cloud Gateway 发出请求。然后在 Gateway Handler Mapping 中找到与请求相匹配的路由，将其发送到 Gateway Web Handler。Handler 再通过指定的过滤器链来将请求发送到我们实际的服务执行业务逻辑，然后返回。<br>过滤器之间用虚线分开是因为过滤器可能会在发送代理请求之前（“pre”）或之后（“post”）执行业务逻辑。</p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>新建一个标准的 Spring Boot 工程，命名为 gateway，然后在 pom.xml 中引入以下依赖坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application.yml 配置文件内容如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="comment">#服务端口</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">9010</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">spring-gateway</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    gateway:</span></span><br><span class="line"><span class="attr">      discovery:</span></span><br><span class="line"><span class="attr">        locator:</span></span><br><span class="line"><span class="attr">          enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line">      <span class="comment">#在注册中心中进行注册</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8001/eureka/</span></span><br></pre></td></tr></table></figure><ul><li><code>spring.cloud.gateway.discovery.locator.enabled</code>：是否与服务注册于发现组件进行结合，通过 serviceId 转发到具体的服务实例。默认为 <code>false</code>，设为 <code>true</code> 便开启通过服务中心的自动根据 serviceId 创建路由的功能。</li><li>访问这个<code>localhost:9010/SERVER-01/open/index</code>就相当于访问SERVER-01上的 <code>/open/index</code> 路径</li></ul><p><img src="2.png" alt="Eureka Server"></p><hr><p>也可以为每个服务单独进行配置，只需修改下 <code>application.yml</code> 即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="comment">#服务端口</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">9010</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">spring-gateway</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    gateway:</span></span><br><span class="line"><span class="attr">      routes:</span></span><br><span class="line"><span class="attr">        - id:</span> <span class="string">server-01-route</span></span><br><span class="line"><span class="attr">          uri:</span> <span class="attr">lb://SERVER-01</span></span><br><span class="line"><span class="attr">          predicates:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">Path=/server-01/**</span></span><br><span class="line">          <span class="comment"># 前缀过滤，默认配置下，我们的请求路径是 http://localhost:9010/service-01/** 这时会路由到指定的服务</span></span><br><span class="line">          <span class="comment"># 此处配置去掉1个路径前缀，再配置上面的 Path=/server-01/**，就能按照 http://localhost:9000/server-01/** 的方式访问了</span></span><br><span class="line"><span class="attr">          filters:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">StripPrefix=1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line">      <span class="comment">#在注册中心中进行注册</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8001/eureka/</span></span><br></pre></td></tr></table></figure><ul><li><strong>重点</strong>是需要设置 filters 的 StripPrefix=1，此处配置去掉1个路径前缀。这样访问这个<code>localhost:9010/SERVER-01/open/index</code>就相当于访问SERVER-01上的 <code>/open/index</code> 路径</li></ul><hr><p>参考自 </p><ul><li><a href="https://zhuanlan.zhihu.com/p/90116218" target="_blank" rel="noopener">Spring Cloud gateway 网关服务 一</a></li><li><a href="https://windmt.com/2018/05/07/spring-cloud-13-spring-cloud-gateway-router/" target="_blank" rel="noopener">Spring Cloud（十三）：Spring Cloud Gateway（路由）</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;概述：Spring Cloud Gateway 是 Spring Cloud 的一个全新项目，该项目是基于 Spring 5.0，Spring Boot 2.0 和 Project Reactor 等技术开发的网关，它旨在为微服务架构提供一种简单有效的统一的 API 路由管理方式。&lt;/p&gt;
&lt;p&gt;Spring Cloud Gateway 作为 Spring Cloud 生态系统中的网关，目标是替代 Netflix Zuul，其不仅提供统一的路由方式，并且基于 Filter 链的方式提供了网关基本的功能，例如：安全、监控、埋点和限流等。&lt;/p&gt;
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="springcloud" scheme="http://zhizhi.tangliangdong.me/tags/springcloud/"/>
    
      <category term="Gateway" scheme="http://zhizhi.tangliangdong.me/tags/Gateway/"/>
    
  </entry>
  
  <entry>
    <title>Github的Contributions没有增加的问题</title>
    <link href="http://zhizhi.tangliangdong.me/2019/12/18/2019-12-18-github-contributions/"/>
    <id>http://zhizhi.tangliangdong.me/2019/12/18/2019-12-18-github-contributions/</id>
    <published>2019-12-18T08:10:05.000Z</published>
    <updated>2019-12-26T09:36:03.941Z</updated>
    
    <content type="html"><![CDATA[<p>向Github提交代码的时候，发现自己的Contributions 并没有增加，原来是commit的邮件地址必须与github相一致，这也是为什么我的Commit没有被记入Contributions 和不显示头像的原因。</p><a id="more"></a><p>我们进入到git仓库中，使用 <code>git log</code> 查看每次提交的日志，就会发现用户名和邮箱并没有和Github上保持一致。我们先将commit 时的用户名和邮箱地址改为与Github注册时的一致，防止以后再出现这样的问题，我们可以通过如下的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &lt;your username <span class="keyword">for</span> Github&gt;</span><br><span class="line">git config --global user.email &lt;your email address <span class="keyword">for</span> Github&gt;</span><br></pre></td></tr></table></figure><p>修改后，你再向Github提交代码时，就会看到该commit被记入Contributions了。</p><p>对于已经提交过的代码，也还能修改提交的用户名和邮箱地址。</p><ul><li>进入仓库地址（如果本地没有，就从Github clone下来）</li><li>在git仓库根目录新建一个脚本文件 <code>script.sh</code>，并将下面的内容复制进去，修改掉 <strong>&lt;&gt;</strong> 里面的内容，</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">git filter-branch --env-filter <span class="string">'</span></span><br><span class="line"><span class="string">OLD_EMAIL=&lt;旧邮箱地址&gt;</span></span><br><span class="line"><span class="string">CORRECT_NAME=&lt;正确用户名&gt;</span></span><br><span class="line"><span class="string">CORRECT_EMAIL=&lt;正确邮箱地址&gt;</span></span><br><span class="line"><span class="string">if [ "$GIT_COMMITTER_EMAIL" = "$OLD_EMAIL" ]</span></span><br><span class="line"><span class="string">then</span></span><br><span class="line"><span class="string">export GIT_COMMITTER_NAME="$CORRECT_NAME"</span></span><br><span class="line"><span class="string">export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">if [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ]</span></span><br><span class="line"><span class="string">then</span></span><br><span class="line"><span class="string">export GIT_AUTHOR_NAME="$CORRECT_NAME"</span></span><br><span class="line"><span class="string">export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"</span></span><br><span class="line"><span class="string">fi'</span> --tag-name-filter cat -- --branches --tags</span><br></pre></td></tr></table></figure><p>然后执行script.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh script.sh</span><br></pre></td></tr></table></figure><p>会有一条条commit修改的进度，等待修改完就行了。 </p><p>再输入 <code>git log</code> 查看commit的用户名和邮箱地址是否已经变更了，</p><p><img src="1.png" alt="sh script.sh"></p><p>若是已经成功变更，则再提交到Github上，以前尘封的commit便会重新出现了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --force --tags origin master</span><br></pre></td></tr></table></figure><p>参考自 <a href="https://blog.csdn.net/Liven_Zhu/article/details/80800162" target="_blank" rel="noopener">解决Github的Contribution没有增加的问题</a>，感谢！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;向Github提交代码的时候，发现自己的Contributions 并没有增加，原来是commit的邮件地址必须与github相一致，这也是为什么我的Commit没有被记入Contributions 和不显示头像的原因。&lt;/p&gt;
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="github" scheme="http://zhizhi.tangliangdong.me/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>服务消费者Feign访问springcloud服务提供者</title>
    <link href="http://zhizhi.tangliangdong.me/2019/12/17/2019-12-17-springcloud-feignclient/"/>
    <id>http://zhizhi.tangliangdong.me/2019/12/17/2019-12-17-springcloud-feignclient/</id>
    <published>2019-12-17T01:59:13.000Z</published>
    <updated>2019-12-17T08:37:34.295Z</updated>
    
    <content type="html"><![CDATA[<p><code>Feign</code>是一个声明式的伪<code>Http</code>客户端，它使得写<code>Http</code>客户端变得更简单。</p><p>使用<code>Feign</code>，只需要创建一个接口并注解，它具有可插拔的注解特性，可使用<code>Feign</code> 注解和<code>JAX-RS</code>注解，<code>Feign</code>支持可插拔的编码器和解码器，<code>Feign</code>默认集成了<code>Ribbon</code>，并和<code>Eureka</code>结合，默认实现了负载均衡的效果。</p><a id="more"></a><h3 id="Feign-简介"><a href="#Feign-简介" class="headerlink" title="Feign 简介"></a>Feign 简介</h3><p><strong><code>Feign</code> 具有如下特性：</strong></p><ul><li>可插拔的注解支持，包括<code>Feign</code>注解和<code>JAX-RS</code>注解</li><li>支持可插拔的<code>HTTP</code>编码器和解码器</li><li>支持<code>Hystrix</code>和它的<code>Fallback</code></li><li>支持<code>Ribbon</code>的负载均衡</li><li>支持<code>HTTP</code>请求和响应的压缩<code>Feign</code>是一个声明式的<code>Web Service</code>客户端，它的目的就是让<code>Web Service</code>调用更加简单。它整合了<code>Ribbon</code>和<code>Hystrix</code>，从而不再需要显式地使用这两个组件。<code>Feign</code>还提供了<code>HTTP</code>请求的模板，通过编写简单的接口和注解，就可以定义好<code>HTTP</code>请求的参数、格式、地址等信息。接下来，<code>Feign</code>会完全代理<code>HTTP</code>的请求，我们只需要像调用方法一样调用它就可以完成服务请求。</li></ul><p>简而言之：<code>Feign</code>能干<code>Ribbon</code>和<code>Hystrix</code>的事情，但是要用<code>Ribbon</code>和<code>Hystrix</code>自带的注解必须要引入相应的<code>jar</code>包才可以。</p><p>结构：</p><p><img src="1.png" alt></p><ul><li>springcloud  服务注册中心</li><li>springserver  服务提供者 （服务名：SERVER-01）</li><li>springclient  服务消费者</li></ul><blockquote><p>前一篇文章写过如何配置使用服务器注册中心，这一次主要是讲如何用 <em>Feign</em> 代替 <em>RestTemplate</em> 实现消费者访问提供者的接口</p><p><strong>服务提供者不需要修改任何代码，主要是对服务消费者进行改造。</strong></p></blockquote><h1 id="配置Feign消费者"><a href="#配置Feign消费者" class="headerlink" title="配置Feign消费者"></a>配置Feign消费者</h1><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="开启Feign"><a href="#开启Feign" class="headerlink" title="开启Feign"></a>开启Feign</h2><p>在工程的启动类中,通过<code>@EnableFeignClients</code> 注解开启Feign的功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springclient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringclientApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringclientApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义接口"><a href="#定义接口" class="headerlink" title="定义接口"></a>定义接口</h2><p>通过<code>@FeignClient（&quot;服务名&quot;）</code>，来指定调用哪个服务。<br>比如在代码中调用了<code>SERVER-01</code>服务的 <code>/</code> 接口，<code>/</code> 就是调用：服务提供者项目：<code>springserver</code> 的 <code>index()</code> 方法，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springclient.consumers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient</span>(<span class="string">"SERVER-01"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OpenClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"open/index"</span>)</span><br><span class="line">    <span class="function">Map&lt;String, Object&gt; <span class="title">getIndex</span><span class="params">(@RequestParam(<span class="string">"name"</span>)</span> String name, @<span class="title">RequestParam</span><span class="params">(<span class="string">"age"</span>)</span> String age)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="消费方法"><a href="#消费方法" class="headerlink" title="消费方法"></a>消费方法</h2><p>在Controller中调用提供者提供的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springclient.controllers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springclient.consumers.OpenClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"open"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OpenController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OpenClient openClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"index"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getIndex</span><span class="params">(String name, String age)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> openClient.getIndex(name, age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="comment">#服务端口</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8011</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">client-01</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line">    <span class="comment">#eureka主机名，会在控制页面中显示</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="comment">#eureka服务器页面中status的请求路径</span></span><br><span class="line"><span class="attr">    status-page-url:</span> <span class="attr">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/index</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line">      <span class="comment">#在注册中心中进行注册</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8001/eureka/</span></span><br></pre></td></tr></table></figure><h3 id="服务注册中心"><a href="#服务注册中心" class="headerlink" title="服务注册中心"></a>服务注册中心</h3><p><img src="2.png" alt="服务注册中心"></p><hr><p>参考自 <a href="https://segmentfault.com/a/1190000012312123" target="_blank" rel="noopener"><a href="https://segmentfault.com/a/1190000012312123" target="_blank" rel="noopener">Spring Cloud（四） 服务提供者 Eureka + 服务消费者 Feign</a></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Feign&lt;/code&gt;是一个声明式的伪&lt;code&gt;Http&lt;/code&gt;客户端，它使得写&lt;code&gt;Http&lt;/code&gt;客户端变得更简单。&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;Feign&lt;/code&gt;，只需要创建一个接口并注解，它具有可插拔的注解特性，可使用&lt;code&gt;Feign&lt;/code&gt; 注解和&lt;code&gt;JAX-RS&lt;/code&gt;注解，&lt;code&gt;Feign&lt;/code&gt;支持可插拔的编码器和解码器，&lt;code&gt;Feign&lt;/code&gt;默认集成了&lt;code&gt;Ribbon&lt;/code&gt;，并和&lt;code&gt;Eureka&lt;/code&gt;结合，默认实现了负载均衡的效果。&lt;/p&gt;
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="springcloud" scheme="http://zhizhi.tangliangdong.me/tags/springcloud/"/>
    
      <category term="feign" scheme="http://zhizhi.tangliangdong.me/tags/feign/"/>
    
  </entry>
  
  <entry>
    <title>spring restTemplate调用提供者方法</title>
    <link href="http://zhizhi.tangliangdong.me/2019/12/17/2019-12-17-springcloud-restTemplate/"/>
    <id>http://zhizhi.tangliangdong.me/2019/12/17/2019-12-17-springcloud-restTemplate/</id>
    <published>2019-12-17T01:00:00.000Z</published>
    <updated>2019-12-17T08:41:45.281Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> RestTemplate 简化了发起HTTP请求以及处理响应的过程，并且支持REST</p></blockquote><a id="more"></a><p>只需要引入spring-web包即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>先配置 <code>RestTemplate</code> 的 configuration 文件，</p><p>还要进行中文乱码的配置。</p><p><code>@LoadBalanced</code> 声明 该 restTemplate 开启负载均衡</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springclient.configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.client.RestTemplateBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.converter.StringHttpMessageConverter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.time.Duration;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestTemplateConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        RestTemplate restTemplate = <span class="keyword">new</span> RestTemplateBuilder()</span><br><span class="line">                .setConnectTimeout(Duration.ofSeconds(<span class="number">1</span>))</span><br><span class="line">                .setReadTimeout(Duration.ofSeconds(<span class="number">1</span>))</span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">// 防止RestTemplate获取的中文乱码</span></span><br><span class="line">        restTemplate.getMessageConverters().add(<span class="keyword">new</span> MappingJackson2HttpMessageConverter());</span><br><span class="line"></span><br><span class="line">        StringHttpMessageConverter stringHttpMessageConverter = <span class="keyword">new</span> StringHttpMessageConverter(StandardCharsets.UTF_8);</span><br><span class="line">        stringHttpMessageConverter.setWriteAcceptCharset(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;MediaType&gt; mediaTypeList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        mediaTypeList.add(MediaType.ALL);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; restTemplate.getMessageConverters().size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (restTemplate.getMessageConverters().get(i) <span class="keyword">instanceof</span> StringHttpMessageConverter) &#123;</span><br><span class="line">                restTemplate.getMessageConverters().remove(i);</span><br><span class="line">                restTemplate.getMessageConverters().add(i, stringHttpMessageConverter);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(restTemplate.getMessageConverters().get(i) <span class="keyword">instanceof</span> MappingJackson2HttpMessageConverter)&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    ((MappingJackson2HttpMessageConverter) restTemplate.getMessageConverters().get(i)).setSupportedMediaTypes(mediaTypeList);</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> restTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Controller</code>控制器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springclient.controllers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springclient.consumers.OpenClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.LinkedMultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.MultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2019/12/12</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span> 15:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"open"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OpenController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"test"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(String name, String age)</span></span>&#123;</span><br><span class="line">        MultiValueMap&lt;String, Object&gt; map = <span class="keyword">new</span> LinkedMultiValueMap();</span><br><span class="line">        map.add(<span class="string">"name"</span>, name);</span><br><span class="line">        map.add(<span class="string">"age"</span>, age);</span><br><span class="line">        String response = restTemplate.postForObject(<span class="string">"http://SERVER-01/open/index"</span>, map, String.class);</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>RestTemplate的post参数不能使用MultiValueMap而不能使用HashMap</li><li>SERVER-01 是服务提供者的服务名</li><li>还实现了<strong>简单轮询负载均衡（RoundRobin）</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; RestTemplate 简化了发起HTTP请求以及处理响应的过程，并且支持REST&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="springcloud" scheme="http://zhizhi.tangliangdong.me/tags/springcloud/"/>
    
      <category term="restTemplate" scheme="http://zhizhi.tangliangdong.me/tags/restTemplate/"/>
    
  </entry>
  
  <entry>
    <title>springboot 2.x springcloud Eureka 注册</title>
    <link href="http://zhizhi.tangliangdong.me/2019/12/12/2019-12-12-springcloud-config/"/>
    <id>http://zhizhi.tangliangdong.me/2019/12/12/2019-12-12-springcloud-config/</id>
    <published>2019-12-12T03:15:55.000Z</published>
    <updated>2019-12-12T03:55:53.880Z</updated>
    
    <content type="html"><![CDATA[<p>基于SpringBoot 2.x的Spring Cloud服务注册与发现</p><p><a href="https://github.com/tangliangdong/springboot-integration" target="_blank" rel="noopener">github项目地址</a></p><a id="more"></a><h1 id="创建服务注册中心"><a href="#创建服务注册中心" class="headerlink" title="创建服务注册中心"></a>创建服务注册中心</h1><h2 id="创建springboot工程"><a href="#创建springboot工程" class="headerlink" title="创建springboot工程"></a>创建springboot工程</h2><p>1、在<strong><a href="https://start.spring.io/" target="_blank" rel="noopener">https://start.spring.io</a></strong>中创建</p><p>2、选择Maven Project、Java、2.2.2，添加 <em>Eureka server</em> 依赖</p><p><img src="1.png" alt></p><p>3、点击Generate Project，解压下载的zip压缩包，再用Ideal打开。</p><h2 id="添加注解"><a href="#添加注解" class="headerlink" title="添加注解"></a>添加注解</h2><p>启动类添加 <code>@EnableEurekaServer</code> 注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringcloudApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringcloudApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><p>1、修改pom.xml如下，基本上不需要修改什么，主要是引入<code>spring-cloud-starter-netflix-eureka-server</code>包。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-integration<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-cloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springcloud<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Cloud<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Eureka Server包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、在 <code>application.yml</code> 中添加以下配置 </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="comment"># 服务端口</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8001</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line">    <span class="comment">#服务名</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">service-01</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line">    <span class="comment"># eureka主机名，会在控制页面中显示</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line">    <span class="comment"># 是否将自己注册到Eureka Server，默认为true</span></span><br><span class="line">    <span class="comment"># 由于当前这个应用就是Eureka Server，故而设为false</span></span><br><span class="line"><span class="attr">    registerWithEureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 表示是否从Eureka Server获取注册信息，默认为true。因为这是一个单点的Eureka Server，</span></span><br><span class="line">    <span class="comment"># 不需要同步其他的Eureka Server节点的数据，故而设为false</span></span><br><span class="line"><span class="attr">    fetchRegistry:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line">      <span class="comment"># eureka注册中心服务器地址</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><p>启动Spring Boot项目，在浏览器中输入<a href="http://localhost:8001" target="_blank" rel="noopener">http://localhost:8001</a> 即可进入Eureka主页面。</p><p><img src="3.png" alt="spring Eureka"></p><h1 id="创建服务提供者"><a href="#创建服务提供者" class="headerlink" title="创建服务提供者"></a>创建服务提供者</h1><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>提供者项目创建方式与注册中心服务器基本相同，只需做以下修改：</p><p>1、修改启动类注解@EnableEurekaServer为@EnableEurekaClient</p><p>2、将pom.xml文件中的  <code>spring-cloud-starter-netflix-eureka-server</code>换成 <code>spring-cloud-starter-netflix-eureka-client</code>，并加入如下的 <em>web</em> 包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-integration<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springclient<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring cloud client<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 不加入这个web包，该客户端启动会直接关闭 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Eureka Client 服务提供方的包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、修改application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="comment">#服务端口</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8002</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">server-01</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line">    <span class="comment">#eureka主机名，会在控制页面中显示</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="comment">#eureka服务器页面中status的请求路径</span></span><br><span class="line"><span class="attr">    status-page-url:</span> <span class="attr">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/index</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line">      <span class="comment">#在注册中心中进行注册</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8001/eureka/</span></span><br></pre></td></tr></table></figure><h2 id="启动服务-1"><a href="#启动服务-1" class="headerlink" title="启动服务"></a>启动服务</h2><p>启动项目成功后，即可在服务中心 <strong>DS Replicas -&gt; Instances currently registered with Eureka</strong> 下发现此服务提供者了。</p><p><img src="4.png" alt="启动服务后"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于SpringBoot 2.x的Spring Cloud服务注册与发现&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/tangliangdong/springboot-integration&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github项目地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="springcloud" scheme="http://zhizhi.tangliangdong.me/tags/springcloud/"/>
    
  </entry>
  
  <entry>
    <title>springboot分布式事务atomikos</title>
    <link href="http://zhizhi.tangliangdong.me/2019/12/09/2019-12-9-springboot-atomikos/"/>
    <id>http://zhizhi.tangliangdong.me/2019/12/09/2019-12-9-springboot-atomikos/</id>
    <published>2019-12-09T06:56:21.000Z</published>
    <updated>2019-12-10T02:55:20.833Z</updated>
    
    <content type="html"><![CDATA[<p>场景：现有两个不同的数据库，一个叫db_user，一个叫db_account。一个操作，要同时更新db_user的user表和db_account的account表。失败，则两个表一起回滚。</p><a id="more"></a><h3 id="项目目录："><a href="#项目目录：" class="headerlink" title="项目目录："></a>项目目录：</h3><p><img src="1.png" alt="项目目录结构"></p><ul><li><em>com.example.atomikos.config</em>  数据源配置信息</li><li><em>com.example.atomikos.db1</em>  数据库db_user的业务和对象</li><li><em>com.example.atomikos.db2</em>  数据库db_account的业务和对象</li><li><em>resources/mapper/user</em>  db_user数据库的映射文件</li><li><em>resources/mapper/account</em>  db_account数据库的映射文件</li></ul><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.11.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>atomikos<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>atomikos<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mysql数据库连接包，需指定版本，不然会使用8.0的jar包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.38<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- alibaba的druid数据库连接池 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- jta-atomikos 分布式事务管理 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jta-atomikos<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jakarta.persistence<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jakarta.persistence-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper-spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>$&#123;basedir&#125;/src/main/resources/generator/generatorConfig.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">&lt;!--在application.yml文件中使用@占位符--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">delimiters</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">delimiter</span>&gt;</span>@<span class="tag">&lt;/<span class="name">delimiter</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">delimiters</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">useDefaultDelimiters</span>&gt;</span>false<span class="tag">&lt;/<span class="name">useDefaultDelimiters</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--防止ico二进制文件损坏--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">nonFilteredFileExtensions</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">nonFilteredFileExtension</span>&gt;</span>ico<span class="tag">&lt;/<span class="name">nonFilteredFileExtension</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">nonFilteredFileExtensions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 开发环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">env</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">env</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 测试环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>test<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">env</span>&gt;</span>test<span class="tag">&lt;/<span class="name">env</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 生产环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>pro<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">env</span>&gt;</span>pro<span class="tag">&lt;/<span class="name">env</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>连接的mysql数据库是5.7的，因此使用 <code>mysql-connector-java</code>的是5.1的版本，而mysql 6以上的数据库则需要使用 <code>mysql-connector-java</code>6.0以上，对应的驱动为 <code>com.mysql.cj.jdbc.Driver</code></p></blockquote><h3 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8091</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">@env@</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 该配置节点为独立的节点，不是在在spring的节点下</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line"><span class="attr">  mapper-locations:</span> <span class="attr">classpath:mapping/*/*.xml</span>  <span class="comment">#注意：一定要对应mapper映射xml文件的所在路径</span></span><br><span class="line"><span class="attr">  type-aliases-package:</span> <span class="string">com.example.atomikos.model</span>  <span class="comment"># 注意：对应实体类的路径</span></span><br><span class="line"><span class="attr">  configuration:</span></span><br><span class="line"><span class="attr">    log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span> <span class="comment">#控制台打印sql</span></span><br></pre></td></tr></table></figure><h3 id="application-dev-yml"><a href="#application-dev-yml" class="headerlink" title="application-dev.yml"></a>application-dev.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 开发环境配置</span></span><br><span class="line"><span class="attr">  profile:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    druid:</span></span><br><span class="line"><span class="attr">      one:</span>  <span class="comment">#数据源1</span></span><br><span class="line"><span class="attr">        driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">        url:</span> <span class="attr">jdbc:mysql://116.62.14.208:3306/db_user?useUnicode=true&amp;amp;characterEncoding=UTF-8</span></span><br><span class="line"><span class="attr">        username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">        password:</span> <span class="number">123456</span></span><br><span class="line">        <span class="comment">#初始化时建立物理连接的个数</span></span><br><span class="line"><span class="attr">        initialSize:</span> <span class="number">1</span></span><br><span class="line">        <span class="comment">#池中最大连接数</span></span><br><span class="line"><span class="attr">        maxActive:</span> <span class="number">20</span></span><br><span class="line">        <span class="comment">#最小空闲连接</span></span><br><span class="line"><span class="attr">        minIdle:</span> <span class="number">1</span></span><br><span class="line">        <span class="comment">#获取连接时最大等待时间，单位毫秒</span></span><br><span class="line"><span class="attr">        maxWait:</span> <span class="number">60000</span></span><br><span class="line">        <span class="comment">#有两个含义：</span></span><br><span class="line">        <span class="comment">#1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。</span></span><br><span class="line">        <span class="comment">#2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明</span></span><br><span class="line"><span class="attr">        timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">        <span class="comment">#连接保持空闲而不被驱逐的最小时间，单位是毫秒</span></span><br><span class="line"><span class="attr">        minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">        <span class="comment">#使用该SQL语句检查链接是否可用。如果validationQuery=null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。</span></span><br><span class="line"><span class="attr">        validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">        <span class="comment">#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。</span></span><br><span class="line"><span class="attr">        testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment">#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。</span></span><br><span class="line"><span class="attr">        testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">        <span class="comment">#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。</span></span><br><span class="line"><span class="attr">        testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">        <span class="comment"># 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙</span></span><br><span class="line"><span class="attr">        filters:</span> <span class="string">stat,wall,slf4j</span></span><br><span class="line">        <span class="comment"># 通过connectProperties属性来打开mergeSql功能；慢SQL记录</span></span><br><span class="line">        <span class="comment">#connectionProperties.druid.stat.mergeSql: true</span></span><br><span class="line">        <span class="comment">#connectionProperties.druid.stat.slowSqlMillis: 5000</span></span><br><span class="line">        <span class="comment"># 合并多个DruidDataSource的监控数据</span></span><br><span class="line">        <span class="comment">#useGlobalDataSourceStat: true</span></span><br><span class="line">        <span class="comment">#default-auto-commit: true 默认</span></span><br><span class="line">        <span class="comment">#default-auto-commit: false</span></span><br><span class="line"><span class="attr">      two:</span> <span class="comment">#数据源2</span></span><br><span class="line"><span class="attr">        driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">        url:</span> <span class="attr">jdbc:mysql://116.62.14.208:3306/db_account?useUnicode=true&amp;amp;characterEncoding=UTF-8</span></span><br><span class="line"><span class="attr">        username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">        password:</span> <span class="number">123456</span></span><br><span class="line">        <span class="comment">#初始化时建立物理连接的个数</span></span><br><span class="line"><span class="attr">        initialSize:</span> <span class="number">1</span></span><br><span class="line">        <span class="comment">#池中最大连接数</span></span><br><span class="line"><span class="attr">        maxActive:</span> <span class="number">20</span></span><br><span class="line">        <span class="comment">#最小空闲连接</span></span><br><span class="line"><span class="attr">        minIdle:</span> <span class="number">1</span></span><br><span class="line">        <span class="comment">#获取连接时最大等待时间，单位毫秒</span></span><br><span class="line"><span class="attr">        maxWait:</span> <span class="number">60000</span></span><br><span class="line">        <span class="comment">#有两个含义：</span></span><br><span class="line">        <span class="comment">#1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。</span></span><br><span class="line">        <span class="comment">#2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明</span></span><br><span class="line"><span class="attr">        timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">        <span class="comment">#连接保持空闲而不被驱逐的最小时间，单位是毫秒</span></span><br><span class="line"><span class="attr">        minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">        <span class="comment">#使用该SQL语句检查链接是否可用。如果validationQuery=null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。</span></span><br><span class="line"><span class="attr">        validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">        <span class="comment">#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。</span></span><br><span class="line"><span class="attr">        testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment">#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。</span></span><br><span class="line"><span class="attr">        testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">        <span class="comment">#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。</span></span><br><span class="line"><span class="attr">        testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">        <span class="comment"># 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙</span></span><br><span class="line"><span class="attr">        filters:</span> <span class="string">stat,wall,slf4j</span></span><br><span class="line">        <span class="comment"># 通过connectProperties属性来打开mergeSql功能；慢SQL记录</span></span><br><span class="line">        <span class="comment">#connectionProperties.druid.stat.mergeSql: true</span></span><br><span class="line">        <span class="comment">#connectionProperties.druid.stat.slowSqlMillis: 5000</span></span><br><span class="line">        <span class="comment"># 合并多个DruidDataSource的监控数据</span></span><br><span class="line">        <span class="comment">#useGlobalDataSourceStat: true</span></span><br><span class="line">        <span class="comment">#default-auto-commit: true 默认</span></span><br><span class="line">        <span class="comment">#default-auto-commit: false</span></span><br></pre></td></tr></table></figure><h3 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.atomikos;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tk.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan</span>(&#123;<span class="string">"com.example.atomikos.db1.dao"</span>,<span class="string">"com.example.atomikos.db2.dao"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AtomikosApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(AtomikosApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第一个数据源配置Properties"><a href="#第一个数据源配置Properties" class="headerlink" title="第一个数据源配置Properties"></a>第一个数据源配置Properties</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.atomikos.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @Data注解 提供类所有属性的 get 和 set 方法，此外还提供了equals、canEqual、hashCode、toString 方法。</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.druid.one"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneDataSourceProperties</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String driverClassName;</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Integer initialSize;</span><br><span class="line">    <span class="keyword">private</span> Integer maxActive;</span><br><span class="line">    <span class="keyword">private</span> Integer minIdle;</span><br><span class="line">    <span class="keyword">private</span> Integer maxWait;</span><br><span class="line">    <span class="keyword">private</span> Integer timeBetweenEvictionRunsMillis;</span><br><span class="line">    <span class="keyword">private</span> Integer minEvictableIdleTimeMillis;</span><br><span class="line">    <span class="keyword">private</span> String validationQuery;</span><br><span class="line">    <span class="keyword">private</span> Boolean testWhileIdle;</span><br><span class="line">    <span class="keyword">private</span> Boolean testOnBorrow;</span><br><span class="line">    <span class="keyword">private</span> Boolean testOnReturn;</span><br><span class="line">    <span class="keyword">private</span> String filters;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二个数据源配置Properties"><a href="#第二个数据源配置Properties" class="headerlink" title="第二个数据源配置Properties"></a>第二个数据源配置Properties</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.atomikos.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.druid.two"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoDataSourceProperties</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String driverClassName;</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Integer initialSize;</span><br><span class="line">    <span class="keyword">private</span> Integer maxActive;</span><br><span class="line">    <span class="keyword">private</span> Integer minIdle;</span><br><span class="line">    <span class="keyword">private</span> Integer maxWait;</span><br><span class="line">    <span class="keyword">private</span> Integer timeBetweenEvictionRunsMillis;</span><br><span class="line">    <span class="keyword">private</span> Integer minEvictableIdleTimeMillis;</span><br><span class="line">    <span class="keyword">private</span> String validationQuery;</span><br><span class="line">    <span class="keyword">private</span> Boolean testWhileIdle;</span><br><span class="line">    <span class="keyword">private</span> Boolean testOnBorrow;</span><br><span class="line">    <span class="keyword">private</span> Boolean testOnReturn;</span><br><span class="line">    <span class="keyword">private</span> String filters;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第一个数据源配置"><a href="#第一个数据源配置" class="headerlink" title="第一个数据源配置"></a>第一个数据源配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.atomikos.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.xa.DruidXADataSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionFactoryBean;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.jta.atomikos.AtomikosDataSourceBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.support.PathMatchingResourcePatternResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.support.ResourcePatternResolver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">//这里要指明这个数据适用于哪些mapper，和这个数据源的sqlsessionFactory</span></span><br><span class="line"><span class="meta">@MapperScan</span>(basePackages = <span class="string">"com.example.atomikos.db1.dao"</span>, sqlSessionFactoryRef = <span class="string">"oneSqlSessionFactory"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneDataSourceConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> OneDataSourceProperties oneDataSourceProperties;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置第一个数据源</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"oneDataSource"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">oneDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 这里datasource要使用阿里的支持XA的DruidXADataSource</span></span><br><span class="line">        DruidXADataSource datasource = <span class="keyword">new</span> DruidXADataSource();</span><br><span class="line">        BeanUtils.copyProperties(oneDataSourceProperties,datasource);</span><br><span class="line">        AtomikosDataSourceBean xaDataSource = <span class="keyword">new</span> AtomikosDataSourceBean();</span><br><span class="line">        xaDataSource.setXaDataSource(datasource);</span><br><span class="line">        xaDataSource.setUniqueResourceName(<span class="string">"oneDataSource"</span>);</span><br><span class="line">        <span class="keyword">return</span> xaDataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置第一个sqlsessionFactory</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"oneSqlSessionFactory"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">oneSqlSessionFactory</span><span class="params">(@Qualifier(<span class="string">"oneDataSource"</span>)</span> DataSource oneDataSource)</span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SqlSessionFactoryBean bean = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        bean.setDataSource(oneDataSource);</span><br><span class="line">        ResourcePatternResolver resolver = <span class="keyword">new</span> PathMatchingResourcePatternResolver();</span><br><span class="line">bean.setMapperLocations(resolver.getResources(<span class="string">"classpath:mapper/user/*.xml"</span>));</span><br><span class="line">        <span class="keyword">return</span> bean.getObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二个数据源配置"><a href="#第二个数据源配置" class="headerlink" title="第二个数据源配置"></a>第二个数据源配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.atomikos.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.xa.DruidXADataSource;</span><br><span class="line"><span class="keyword">import</span> com.example.atomikos.config.TwoDataSourceProperties;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionFactoryBean;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.jta.atomikos.AtomikosDataSourceBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.support.PathMatchingResourcePatternResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.support.ResourcePatternResolver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan</span>(basePackages = <span class="string">"com.example.atomikos.db2.dao"</span>, sqlSessionFactoryRef = <span class="string">"twoSqlSessionFactory"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoDataSourceConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> TwoDataSourceProperties twoDataSourceProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"twoDataSource"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">twoDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DruidXADataSource datasource = <span class="keyword">new</span> DruidXADataSource();</span><br><span class="line">        BeanUtils.copyProperties(twoDataSourceProperties,datasource);</span><br><span class="line">        AtomikosDataSourceBean xaDataSource = <span class="keyword">new</span> AtomikosDataSourceBean();</span><br><span class="line">        xaDataSource.setXaDataSource(datasource);</span><br><span class="line">        xaDataSource.setUniqueResourceName(<span class="string">"twoDataSource"</span>);</span><br><span class="line">        <span class="keyword">return</span> xaDataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"twoSqlSessionFactory"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">twoSqlSessionFactory</span><span class="params">(@Qualifier(<span class="string">"twoDataSource"</span>)</span> DataSource twoDataSource)</span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SqlSessionFactoryBean bean = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        bean.setDataSource(twoDataSource);</span><br><span class="line">        ResourcePatternResolver resolver = <span class="keyword">new</span> PathMatchingResourcePatternResolver();</span><br><span class="line">        bean.setMapperLocations(resolver.getResources(<span class="string">"classpath:mapper/account/*.xml"</span>));</span><br><span class="line">        <span class="keyword">return</span> bean.getObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="service层使用事务回滚演示"><a href="#service层使用事务回滚演示" class="headerlink" title="service层使用事务回滚演示"></a>service层使用事务回滚演示</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.atomikos.db1.service.user;</span><br><span class="line"><span class="keyword">import</span> com.example.atomikos.db1.dao.user.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.example.atomikos.db1.model.user.User;</span><br><span class="line"><span class="keyword">import</span> com.example.atomikos.db2.model.account.Account;</span><br><span class="line"><span class="keyword">import</span> com.example.atomikos.db2.service.account.AccountService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> javax.transaction.Transactional;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@ClassName</span>: UserService</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> tangliangdong</span></span><br><span class="line"><span class="comment">* <span class="doctag">@date</span> 2019-12-6</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Service</span>(<span class="string">"userService"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//---------增删改查基础部分S--------</span></span><br><span class="line">    <span class="comment">//保存</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">save</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.insert(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testAtomikos</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        Account account = <span class="keyword">new</span> Account();</span><br><span class="line">        account.setName(name);</span><br><span class="line">        accountService.save(account);</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setName(name);</span><br><span class="line">        save(user);</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"done"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意@Transactional 引入的包是<code>javax.transaction.Transactional</code></p></blockquote><p>源码地址 <a href="https://github.com/tangliangdong/springboot-atomikos" target="_blank" rel="noopener">springboot-atomikos</a></p><p>参考自：<a href="https://blog.csdn.net/jy02268879/article/details/84398657" target="_blank" rel="noopener">【十九】Spring Boot之分布式事务(JTA、Atomikos、Druid、Mybatis)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;场景：现有两个不同的数据库，一个叫db_user，一个叫db_account。一个操作，要同时更新db_user的user表和db_account的account表。失败，则两个表一起回滚。&lt;/p&gt;
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="springboot" scheme="http://zhizhi.tangliangdong.me/tags/springboot/"/>
    
      <category term="atomikos" scheme="http://zhizhi.tangliangdong.me/tags/atomikos/"/>
    
  </entry>
  
  <entry>
    <title>java8 stream流</title>
    <link href="http://zhizhi.tangliangdong.me/2019/11/21/2019-11-21-java8-features/"/>
    <id>http://zhizhi.tangliangdong.me/2019/11/21/2019-11-21-java8-features/</id>
    <published>2019-11-21T01:33:59.000Z</published>
    <updated>2019-11-22T09:34:52.003Z</updated>
    
    <content type="html"><![CDATA[<p>java8新增了很多新的特性，值得去学习下。</p><p>新增加的Stream API (<strong>java.util.stream</strong>)引入了在Java里可以工作的函数式编程。这是目前为止对java库最大的一次功能添加，希望程序员通过编写有效、整洁和简明的代码，能够大大提高生产率。虽然效率没有简单for循环那么快，但是依旧值得我们去学习。 </p><a id="more"></a><blockquote><p>回顾编程的发展历史，我们不难发现一个规律，那就是先是从最初的C/C++演变到Java/.net，这是编程界的一大进步，因为我们不再关注于指针操作，比如在java中JVM虚拟机已经帮我们完成了相应的操作，由于这一进步，这付出的代价是执行效率会降低，但是带来的好处就在于加快了编程开发的速度。</p><p>当编程由Java/.net演变到JavaScript/PHP/Kotlin，这又是编程界的另一大进步，这意味着我们在编写程序时没有必要再关注于数据类型，而该数据类型是由相应的语言在运行时确定，这样，这又一次降低了程序的运行速度，但是相应的又提升了代码编写的效率，因而通过回顾历史我们不难得出如下结论：</p><p>在编写代码时，<em>一定要以最简洁为原则</em>，毕竟运行程序的硬件成本会随着时间的推移在不断降低，而<strong>程序员的薪资则不会</strong>。</p></blockquote><p>参考自 <a href="https://blog.csdn.net/zzy1078689276/article/details/79430772" target="_blank" rel="noopener">for-forEach-stream三种遍历方法执行效率比较与选用思考</a></p><p><img src="1.png" alt="java.util.stream"></p><p> 从上图中可以看见stream包中的接口比较多，类和枚举比较少。我们先来看接口： </p><p><img src="2.png" alt="Stream"></p><p>DoubleStream，IntStream,LongStream，Stream都继承于BaseStream接口。并且它们都有各自的Builder接口：DoubleStream.Builder，IntStream.Builder，LongStream.Builder，Stream.Builder。剩下就只有Collector接口，Collectors，StreamSupport类，Collector,Characteristics枚举。</p><h1 id="Stream接口"><a href="#Stream接口" class="headerlink" title="Stream接口"></a>Stream接口</h1><p>Stream接口是一个泛型接口，而DoubleStream,IntStream,LongStream只不过是对double,int,long的包装而已，所以我们弄懂Stream，其他的接口也都大同小异。 </p><p>范例类：<strong>学生成绩类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Grade</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String student;</span><br><span class="line">    <span class="keyword">public</span> String course;</span><br><span class="line">    <span class="keyword">public</span> Integer score;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Grade</span><span class="params">(String student, String course, Integer score)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.student = student;</span><br><span class="line">        <span class="keyword">this</span>.course = course;</span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="forEach-Consumer-lt-super-T-gt-action"><a href="#forEach-Consumer-lt-super-T-gt-action" class="headerlink" title="forEach(Consumer&lt;? super T&gt; action)"></a>forEach(Consumer&lt;? super T&gt; action)</h2><p>forEach接收一个Consumer接口，该接口只接收一个参数，没有返回值。</p><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;String&gt; stream = Stream.of(<span class="string">"Hello"</span>, <span class="string">"World"</span>, <span class="string">"!!!"</span>);</span><br><span class="line">stream.forEach(System.out::println);</span><br></pre></td></tr></table></figure><p>System.out.println方法我们都很熟悉了，它接收一个参数，并且在控制台打印出来。这正好符合Consumer接口，所以这里输出的结果是 ： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hello</span><br><span class="line">World</span><br><span class="line">!!!</span><br></pre></td></tr></table></figure><h2 id="forEachOrdered-Consumer-lt-super-T-gt-action"><a href="#forEachOrdered-Consumer-lt-super-T-gt-action" class="headerlink" title="forEachOrdered(Consumer&lt;? super T&gt; action)"></a>forEachOrdered(Consumer&lt;? super T&gt; action)</h2><p>forEachOrdered 表示严格按照顺序取数据 ，并且主要用于 parallelStream 流并行处理（并行处理可能会导致结果无序）</p><h2 id="peek-Consumer-lt-super-T-gt-action"><a href="#peek-Consumer-lt-super-T-gt-action" class="headerlink" title="peek(Consumer&lt;? super T&gt; action)"></a>peek(Consumer&lt;? super T&gt; action)</h2><p>peek方法也是接收一个Consumer功能型接口，它与forEach的区别就是它会返回Stream接口，也就是说forEach是一个Terminal操作，而peek是一个Intermediate操作，forEach完了以后Stream就消费完了，不能继续再使用，而peek还可以继续使用。</p><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;String&gt; stream = Stream.of(<span class="string">"Hello"</span>, <span class="string">"World"</span>, <span class="string">"!!!"</span>);</span><br><span class="line">stream.peek(System.out::println).forEach(System.out::println);</span><br></pre></td></tr></table></figure><p> 输出结果: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I</span><br><span class="line">I</span><br><span class="line">love</span><br><span class="line">love</span><br><span class="line">you</span><br><span class="line">you</span><br></pre></td></tr></table></figure><p>因为peek是一个Intermediate操作，它并不会马上执行，当forEach的时候才会把peek和forEach一起执行，来提高效率，所以等于是每个stream元素执行两次打印操作，再执行下一个元素。</p><h2 id="sorted"><a href="#sorted" class="headerlink" title="sorted()"></a>sorted()</h2><p>将此流中的元素根据自然顺序排序，</p><p><code>sorted(Comparator&lt;? super T&gt; comparator)</code></p><p>sorted方法还有一个重载方法，可以传入一个Comparator，这样就可以根据Comparator来排序。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Grade grade1 = <span class="keyword">new</span> Grade(<span class="string">"张三"</span>, <span class="string">"英语"</span>, <span class="number">99</span>);</span><br><span class="line">Grade grade2 = <span class="keyword">new</span> Grade(<span class="string">"张三"</span>, <span class="string">"数学"</span>, <span class="number">59</span>);</span><br><span class="line">Grade grade3 = <span class="keyword">new</span> Grade(<span class="string">"张三"</span>, <span class="string">"计算机"</span>, <span class="number">67</span>);</span><br><span class="line">Grade grade4 = <span class="keyword">new</span> Grade(<span class="string">"李四"</span>, <span class="string">"英语"</span>, <span class="number">20</span>);</span><br><span class="line">Grade grade5 = <span class="keyword">new</span> Grade(<span class="string">"李四"</span>, <span class="string">"英语"</span>, <span class="number">80</span>);</span><br><span class="line">Grade grade6 = <span class="keyword">new</span> Grade(<span class="string">"王五"</span>, <span class="string">"英语"</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">List&lt;Grade&gt; list = Arrays.asList(grade1, grade2, grade3, grade4, grade5, grade6);</span><br><span class="line"><span class="comment">// 根据成绩从高到低进行排序</span></span><br><span class="line">list.stream().sorted(Comparator.comparing(</span><br><span class="line">    Grade::getScore, Integer::compareTo).reversed())</span><br><span class="line">    .forEach(System.out::println);</span><br></pre></td></tr></table></figure><p> 自然序逆序元素，使用<code>Comparator</code> 提供的<code>reverseOrder()</code> 方法  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">list</span><span class="selector-class">.stream</span>()<span class="selector-class">.sorted</span>(<span class="selector-tag">Comparator</span><span class="selector-class">.reverseOrder</span>())</span><br></pre></td></tr></table></figure><h2 id="map-Function-lt-super-T-extends-R-gt-mapper"><a href="#map-Function-lt-super-T-extends-R-gt-mapper" class="headerlink" title="map(Function&lt;? super T, ? extends R&gt; mapper)"></a>map(Function&lt;? super T, ? extends R&gt; mapper)</h2><p>map方法接收一个功能型接口，功能型接口接收一个参数，返回一个值。map用途是将旧数据转换后变为新数据，是一种1：1的映射，每个输入元素按照规则转换成另一个元素。该方法是Intermediate操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;String&gt; stream = Stream.of(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>);</span><br><span class="line">stream.map(String::toUpperCase).forEach(System.out::println);</span><br></pre></td></tr></table></figure><h2 id="flatMap-Function-lt-super-T-extends-Stream-lt-extends-R-gt-gt-mapper"><a href="#flatMap-Function-lt-super-T-extends-Stream-lt-extends-R-gt-gt-mapper" class="headerlink" title="flatMap(Function&lt;? super T, ? extends Stream&lt;? extends R&gt;&gt; mapper)"></a>flatMap(Function&lt;? super T, ? extends Stream&lt;? extends R&gt;&gt; mapper)</h2><p> flatMap从结构上来看跟map差不多，主要是可以用来将stream层级扁平化。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;List&lt;Integer&gt;&gt; inputStream = Stream.of(</span><br><span class="line">    Arrays.asList(<span class="number">1</span>),</span><br><span class="line">    Arrays.asList(<span class="number">2</span>, <span class="number">3</span>),</span><br><span class="line">    Arrays.asList(<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line">);</span><br><span class="line">inputStream.flatMap((n)-&gt;n.stream()).forEach(System.out::println);</span><br></pre></td></tr></table></figure><h2 id="collect-Collector-lt-super-T-A-R-gt-collector"><a href="#collect-Collector-lt-super-T-A-R-gt-collector" class="headerlink" title="collect(Collector&lt;? super T,A,R&gt; collector)"></a>collect(Collector&lt;? super T,A,R&gt; collector)</h2><p>collect方法跟reduce方法功能很类似，都是聚合方法。不同的是，reduce方法在操作每一个元素时总创建一个新，而collect方法只是修改现存的值，而不是创建一个新值。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">collect(Collector&lt;? <span class="keyword">super</span> T,A,R&gt; collector)</span><br><span class="line">collect(Supplier&lt;R&gt; supplier, BiConsumer&lt;R,? <span class="keyword">super</span> T&gt; accumulator, BiConsumer&lt;R,R&gt; combiner)</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据科目，将学生的成绩分类</span></span><br><span class="line">Map&lt;String, List&lt;Grade&gt;&gt; list = list.stream().collect(Collectors.groupingBy(Grade::getCourse));</span><br></pre></td></tr></table></figure><h2 id="reduce-BinaryOperator-accumulator"><a href="#reduce-BinaryOperator-accumulator" class="headerlink" title="reduce(BinaryOperator accumulator)"></a>reduce(BinaryOperator<t> accumulator)</t></h2><p>reduce提供了三种重载方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Optional&lt;T&gt; <span class="title">reduce</span><span class="params">(BinaryOperator&lt;T&gt; accumulator)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">//BinaryOperator 二元操作符，有类型相同的两个参数和一个返回值</span></span></span><br><span class="line"><span class="function">T <span class="title">reduce</span><span class="params">(T identity, BinaryOperator&lt;T&gt; accumulator)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// BiFunction 接收两个参数，有一个返回值</span></span></span><br><span class="line"><span class="function">&lt;U&gt; U <span class="title">reduce</span><span class="params">(U identity, BiFunction&lt;U,? <span class="keyword">super</span> T,U&gt; accumulator, BinaryOperator&lt;U&gt; combiner)</span></span></span><br></pre></td></tr></table></figure><p>若是集合中元素类型是对象，那reduce操作可能会影响集合中对象的值。</p><h2 id="concat-Stream-lt-extends-T-gt-a-Stream-lt-extends-T-gt-b"><a href="#concat-Stream-lt-extends-T-gt-a-Stream-lt-extends-T-gt-b" class="headerlink" title="concat(Stream&lt;? extends T&gt; a, Stream&lt;? extends T&gt; b)"></a>concat(Stream&lt;? extends T&gt; a, Stream&lt;? extends T&gt; b)</h2><p>该方法是Stream的静态方法，用于组合两个Stream生成新的Stream</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stream.concat(Stream.of(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), Stream.of(<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>)).forEach(System.out::println);</span><br></pre></td></tr></table></figure><h2 id="of-T-t"><a href="#of-T-t" class="headerlink" title="of(T t)"></a>of(T t)</h2><p>用于构造Stream</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> &lt;T&gt; <span class="function">Stream&lt;T&gt; <span class="title">of</span><span class="params">(T t)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> &lt;T&gt; Stream&lt;T&gt; <span class="title">of</span><span class="params">(T... values)</span></span></span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;Integer&gt; stream = Stream.of(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h2 id="generate-Supplier-s"><a href="#generate-Supplier-s" class="headerlink" title="generate(Supplier s)"></a>generate(Supplier<t> s)</t></h2><p>用于生成一个无限长度的Stream，接收只有一个参数，没有返回值的Supplier函数</p><blockquote><p>这个无限长度 Stream是懒加载，一般这种无限长度的Stream都会配合Stream的limit()方法来用。</p></blockquote><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取10个随机数的Stream流</span></span><br><span class="line">Stream.generate(() -&gt; Math.random()).limit(<span class="number">10</span>).forEach(System.out::println);</span><br></pre></td></tr></table></figure><h2 id="builder"><a href="#builder" class="headerlink" title="builder()"></a>builder()</h2><p> 当使用builder()的时候,要声明希望存放的元素类型,此方法就会创建一个流对象 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;String&gt; stream = Stream.&lt;String&gt;builder().add(<span class="string">"a"</span>).add(<span class="string">"b"</span>).add(<span class="string">"c"</span>).build();</span><br></pre></td></tr></table></figure><h2 id="empty"><a href="#empty" class="headerlink" title="empty()"></a>empty()</h2><p>empty()方法用来创建一个空的流</p><blockquote><p>这个方法经常被用在创建一个不含元素的空的流进行返回,避免返回null </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Stream&lt;String&gt; <span class="title">streamOf</span><span class="params">(List&lt;String&gt; list)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> list == <span class="keyword">null</span> || list.isEmpty() ? Stream.empty() : list.stream();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="filter-Predicate-lt-super-T-gt-predicate"><a href="#filter-Predicate-lt-super-T-gt-predicate" class="headerlink" title="filter(Predicate&lt;? super T&gt; predicate )"></a>filter(Predicate&lt;? super T&gt; predicate )</h2><p>filter方法接收一个断言型的接口，断言型接口接收一个参数，返回一个<strong>Boolean</strong>类型。filter 方法根据某个条件对stream元素进行过滤，通过过滤的元素将生成一个新的stream。 </p><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 过滤掉小于等于2的数字</span></span><br><span class="line">Stream.of(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>).filter((x) -&gt; x &gt; <span class="number">2</span>).forEach(System.out::println);</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="min-max-Comparator-lt-super-T-gt-comparator"><a href="#min-max-Comparator-lt-super-T-gt-comparator" class="headerlink" title="min/max(Comparator&lt;? super T&gt; comparator)"></a>min/max(Comparator&lt;? super T&gt; comparator)</h2><p>Stream接口中的这两个方法接收一个Comparator参数，通过Comparator返回此流最小或者最大的元素。IntStream,DoubleStream.LongStream则不需要传入Comparator。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取成绩最高的学生对象</span></span><br><span class="line">list.stream().max(Comparator.comparing(Grade::getScore));</span><br><span class="line"><span class="comment">// 获取最高的数字</span></span><br><span class="line">Stream.of(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>).max(Integer::compareTo);</span><br></pre></td></tr></table></figure><h2 id="count"><a href="#count" class="headerlink" title="count()"></a>count()</h2><p> 返回此流元素的数量。 </p><h2 id="distinct"><a href="#distinct" class="headerlink" title="distinct()"></a>distinct()</h2><p> 消除重复元素后返回一个新Stream。 </p><h2 id="allMatch"><a href="#allMatch" class="headerlink" title="allMatch()"></a>allMatch()</h2><p> Stream中的所有元素满足传入的断言型接口，就返回true。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stream.of(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>).allMatch( x -&gt; x == <span class="number">1</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h2 id="anyMatch"><a href="#anyMatch" class="headerlink" title="anyMatch()"></a>anyMatch()</h2><p> Stream中的只要有一个元素满足传入的断言型接口，就返回true。 </p><h2 id="noneMatch"><a href="#noneMatch" class="headerlink" title="noneMatch"></a>noneMatch</h2><p> Stream中没有元素满足传入的断言型接口，就返回true。 </p><h2 id="findAny-findFirst"><a href="#findAny-findFirst" class="headerlink" title="findAny()  / findFirst()"></a>findAny()  / findFirst()</h2><ul><li><p>findAny() 在Stream流中查找到任何一个就返回 Optional </p></li><li><p>findFirst() 在Stream流中查找到任何一个就返回 Optional </p></li></ul><blockquote><p>findAny() 在串行情况下会返回第一个，和findFirst() 结果一致，而在并行的情况下就不能保证是第一个</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List list = Arrays.asList(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br><span class="line">list.parallelStream().findAny(); <span class="comment">// Optional[6]</span></span><br><span class="line">list.parallelStream().findFirst(); <span class="comment">// Optional[1]</span></span><br></pre></td></tr></table></figure><h2 id="skip-long-n"><a href="#skip-long-n" class="headerlink" title="skip(long n)"></a>skip(long n)</h2><p> 接收一个long类型的参数，表示跳过几个元素。 </p><h2 id="limit-long-maxSize"><a href="#limit-long-maxSize" class="headerlink" title="limit(long maxSize)"></a>limit(long maxSize)</h2><p> 该方法接收一个long型参数，表示一共返回几个元素。 </p><h2 id="toArray"><a href="#toArray" class="headerlink" title="toArray()"></a>toArray()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">toArray()</span><br><span class="line"><span class="comment">// 接收一个int类型的参数，和一个泛型返回值</span></span><br><span class="line">toArray(IntFunction&lt;A[]&gt; generator)</span><br></pre></td></tr></table></figure><blockquote><p>参考自 <a href="https://www.jianshu.com/p/b1b7e334ff79" target="_blank" rel="noopener">JAVA8你只需要知道这些（3）</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;java8新增了很多新的特性，值得去学习下。&lt;/p&gt;
&lt;p&gt;新增加的Stream API (&lt;strong&gt;java.util.stream&lt;/strong&gt;)引入了在Java里可以工作的函数式编程。这是目前为止对java库最大的一次功能添加，希望程序员通过编写有效、整洁和简明的代码，能够大大提高生产率。虽然效率没有简单for循环那么快，但是依旧值得我们去学习。 &lt;/p&gt;
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="git" scheme="http://zhizhi.tangliangdong.me/tags/git/"/>
    
      <category term="备忘录" scheme="http://zhizhi.tangliangdong.me/tags/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>jenkins持续集成docker部署</title>
    <link href="http://zhizhi.tangliangdong.me/2019/11/20/2019-11-20-jenkins-docker-deploy/"/>
    <id>http://zhizhi.tangliangdong.me/2019/11/20/2019-11-20-jenkins-docker-deploy/</id>
    <published>2019-11-20T03:09:49.000Z</published>
    <updated>2019-11-20T03:32:34.935Z</updated>
    
    <content type="html"><![CDATA[<p>每次都手动打包springboot项目，部署war包到docker中，显然效率太低了，因此可以使用jenkins实现持续集成部署。</p><a id="more"></a><p>创建一个maven项目，使用git进行源码管理，可以配置<code>webhook</code>，也可以手动构建项目</p><h3 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h3><p>构建中使用Maven进行项目的打包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clean package -pl corp -P dev</span><br></pre></td></tr></table></figure><ul><li>-pl：指定打包的子模块</li><li>-P：指定打包的测试环境（<font color="red">必须是大写</font>）</li></ul><p><img src="1.png" alt="jenkins 项目配置"></p><h3 id="Post-Steps"><a href="#Post-Steps" class="headerlink" title="Post Steps"></a><strong>Post Steps</strong></h3><p>选择执行shell命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建挂载的目录</span></span><br><span class="line">mkdir -p /mnt/service/intelligentization/corp/</span><br><span class="line"><span class="comment"># 清空挂载目录</span></span><br><span class="line">rm -rf /mnt/service/intelligentization/corp/*</span><br><span class="line"><span class="comment"># 将jenkins项目打包的项目war包拷贝到docker的挂载目录</span></span><br><span class="line">cp ./corp/target/ROOT.war /mnt/service/intelligentization/corp/</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment"># 防止因为代码出错，导致命令执行中断。停止容器</span></span><br><span class="line"><span class="comment"># try</span></span><br><span class="line">docker stop intelligentization-corp</span><br><span class="line">docker rm intelligentization-corp</span><br><span class="line">&#125; || &#123;</span><br><span class="line"><span class="comment"># catch</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"失败"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 docker 容器，并指定挂载目录和映射端口</span></span><br><span class="line">docker run -itd --privileged=<span class="literal">true</span> -v /mnt/service/intelligentization/corp/:/usr/<span class="built_in">local</span>/tomcat/webapps/ -p 9998:8080 --name intelligentization-corp tomcat:8</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --privileged=<span class="literal">true</span> -v /mnt/service/intelligentization/corp/:/usr/<span class="built_in">local</span>/tomcat/webapps/ -p 9998:8080 --name intelligentization-corp tomcat:8</span><br></pre></td></tr></table></figure><ul><li><code>-v /mnt/service/intelligentization/corp/:/usr/local/tomcat/webapps/</code> 前一个是挂载的本机的目录，后一个是docker容器的目录，docker会将挂载目录的内容拷贝到docker对应的目录，而且tomcat会热部署，一旦挂载的war包发生变动，tomcat就会自动重新部署</li><li><code>-p 9998:8080</code> 前一个9998是映射的本机端口，一个8080是docker容器的端口</li></ul><h3 id="简化部署"><a href="#简化部署" class="headerlink" title="简化部署"></a>简化部署</h3><p>​    因为要部署的war包并不在docker容器中，而是通过挂载的形式，那每次构建之后新建的docker容器其实是一样的，所以在第一次新建容器之后，其实并不需要每次都去重新构建一次容器，只需要更新docker挂载目录的内容即可。</p><p>​    因此，之前执行的shell命令可以简化一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建挂载的目录</span></span><br><span class="line">mkdir -p /mnt/service/intelligentization/corp/</span><br><span class="line"><span class="comment"># 清空挂载目录</span></span><br><span class="line">rm -rf /mnt/service/intelligentization/corp/*</span><br><span class="line"><span class="comment"># 将jenkins项目打包的项目war包拷贝到docker的挂载目录</span></span><br><span class="line">cp ./corp/target/ROOT.war /mnt/service/intelligentization/corp/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每次都手动打包springboot项目，部署war包到docker中，显然效率太低了，因此可以使用jenkins实现持续集成部署。&lt;/p&gt;
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="docker" scheme="http://zhizhi.tangliangdong.me/tags/docker/"/>
    
      <category term="jenkins" scheme="http://zhizhi.tangliangdong.me/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>jenkins执行脚本权限不足</title>
    <link href="http://zhizhi.tangliangdong.me/2019/11/19/2019-11-19-jenkins-user-permissions/"/>
    <id>http://zhizhi.tangliangdong.me/2019/11/19/2019-11-19-jenkins-user-permissions/</id>
    <published>2019-11-19T06:31:20.000Z</published>
    <updated>2019-11-19T06:54:08.495Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> jenkins默认用户为jenkins , 普通用户执行shell脚本,会缺失某些权限 </p></blockquote><a id="more"></a><h3 id="打开Jenkins的配置文件"><a href="#打开Jenkins的配置文件" class="headerlink" title="打开Jenkins的配置文件"></a>打开Jenkins的配置文件</h3><p>将Jenkins的执行用户修改为 <code>root</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/jenkins</span><br></pre></td></tr></table></figure><h3 id="修改jenkins用户为root，"><a href="#修改jenkins用户为root，" class="headerlink" title="修改jenkins用户为root，"></a>修改jenkins用户为<code>root</code>，</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JENKINS_USER=<span class="string">"root"</span></span><br></pre></td></tr></table></figure><h3 id="修改Jenkins相关文件夹用户权限"><a href="#修改Jenkins相关文件夹用户权限" class="headerlink" title="修改Jenkins相关文件夹用户权限"></a>修改Jenkins相关文件夹用户权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chown -R root:root /var/lib/jenkins</span><br><span class="line">chown -R root:root /var/cache/jenkins</span><br><span class="line">chown -R root:root /var/<span class="built_in">log</span>/jenkins</span><br></pre></td></tr></table></figure><h3 id="重启Jenkins"><a href="#重启Jenkins" class="headerlink" title="重启Jenkins"></a>重启Jenkins</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service jenkins restart</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">systemctl restart jenkins</span><br></pre></td></tr></table></figure><h3 id="查看Jenkins进程所属用户"><a href="#查看Jenkins进程所属用户" class="headerlink" title="查看Jenkins进程所属用户"></a>查看Jenkins进程所属用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep jenkins</span><br></pre></td></tr></table></figure><p>若是显示进程的用户是root，则表示修改成功。</p><p><img src="1.png" alt="ps -ef | grep jenkins"></p><p>转载自 <a href="https://www.blog.lijinghua.club/article/jenkins_权限不足" target="_blank" rel="noopener">Jenkins执行脚本报权限不足错误</a></p>]]></content>
    
    <summary type="html">
    
      jenkins项目构建时执行的shell总会遇到权限不足的问题
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="jenkins" scheme="http://zhizhi.tangliangdong.me/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>tomcat8登陆用户配置</title>
    <link href="http://zhizhi.tangliangdong.me/2019/11/18/2019-11-18-tomcat8-login-configuration/"/>
    <id>http://zhizhi.tangliangdong.me/2019/11/18/2019-11-18-tomcat8-login-configuration/</id>
    <published>2019-11-18T03:51:34.000Z</published>
    <updated>2019-11-18T06:40:01.573Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="tomcat-users-xml"><a href="#tomcat-users-xml" class="headerlink" title="tomcat-users.xml"></a>tomcat-users.xml</h3><p> 在<strong>Tomcat</strong>根目录下找到 <code>conf/tomcat-users.xml</code>文件，在<code>&lt;tomcat-users&gt;&lt;/tomcat-user&gt;</code>标签中添加如下内容 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-gui"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-script"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-jmx"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-status"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">"admin"</span> <span class="attr">password</span>=<span class="string">"123456"</span> <span class="attr">roles</span>=<span class="string">"manager-gui,manager-script,manager-jmx,manager-status"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="context-xml"><a href="#context-xml" class="headerlink" title="context.xml"></a>context.xml</h3><p>还需要修改<strong>Tomcat</strong> 根目录下的 <code>webapps/manager/META_INF/context.xml</code>文件</p><p>将其中的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.RemoteAddrValve"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">allow</span>=<span class="string">"127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>注释掉就行了。 因为默认tomcat不可以通过外部ip访问管理界面。一定要启动Tomcat，不然等构建等时候会报拒绝连接 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  Licensed to the Apache Software Foundation (ASF) under one or more</span></span><br><span class="line"><span class="comment">  contributor license agreements.  See the NOTICE file distributed with</span></span><br><span class="line"><span class="comment">  this work for additional information regarding copyright ownership.</span></span><br><span class="line"><span class="comment">  The ASF licenses this file to You under the Apache License, Version 2.0</span></span><br><span class="line"><span class="comment">  (the "License"); you may not use this file except in compliance with</span></span><br><span class="line"><span class="comment">  the License.  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">  distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment">  See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment">  limitations under the License.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">antiResourceLocking</span>=<span class="string">"false"</span> <span class="attr">privileged</span>=<span class="string">"true"</span> &gt;</span></span><br><span class="line"> <span class="comment">&lt;!-- &lt;Valve className="org.apache.catalina.valves.RemoteAddrValve"</span></span><br><span class="line"><span class="comment">         allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" /&gt;</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Manager</span> <span class="attr">sessionAttributeValueClassNameFilter</span>=<span class="string">"java\.lang\.(?:Boolean|Integer|Long|Number|String)|org\.apache\.catalina\.filters\.CsrfPreventionFilter\$LruCache(?:\$1)?|java\.util\.(?:Linked)?HashMap"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Context</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h3 id=&quot;tomcat-users-xml&quot;&gt;&lt;a href=&quot;#tomcat-users-xml&quot; class=&quot;headerlink&quot; title=&quot;tomcat-users.xml&quot;&gt;&lt;/a&gt;tomcat-users.xml&lt;/h
      
    
    </summary>
    
      <category term="Learn" scheme="http://zhizhi.tangliangdong.me/categories/Learn/"/>
    
    
      <category term="tomcat8" scheme="http://zhizhi.tangliangdong.me/tags/tomcat8/"/>
    
  </entry>
  
  <entry>
    <title>jenkins配置构建失败邮件通知</title>
    <link href="http://zhizhi.tangliangdong.me/2019/11/14/2019-11-14-jenkins-email-notification/"/>
    <id>http://zhizhi.tangliangdong.me/2019/11/14/2019-11-14-jenkins-email-notification/</id>
    <published>2019-11-14T06:42:26.000Z</published>
    <updated>2019-11-18T03:38:34.326Z</updated>
    
    <content type="html"><![CDATA[<p>jenkins自动化构建邮件通知开发者功能配置</p><a id="more"></a><h2 id="jenkins系统配置"><a href="#jenkins系统配置" class="headerlink" title="jenkins系统配置"></a>jenkins系统配置</h2><p>先进入 <code>Manage Jenkins --&gt; Configure System</code></p><p><img src="1.png" alt="Configure System"></p><h3 id="Jenkins-Location-gt-系统管理员邮件地址"><a href="#Jenkins-Location-gt-系统管理员邮件地址" class="headerlink" title="Jenkins Location  -&gt;  系统管理员邮件地址"></a>Jenkins Location  -&gt;  系统管理员邮件地址</h3><p>输入你的邮箱地址</p><p><img src="2.png" alt="系统管理员邮件地址"></p><hr><h3 id="Extended-E-mail-Notification-gt-Default-user-E-mail-suffix"><a href="#Extended-E-mail-Notification-gt-Default-user-E-mail-suffix" class="headerlink" title="Extended E-mail Notification -&gt;  Default user E-mail suffix"></a>Extended E-mail Notification -&gt;  Default user E-mail suffix</h3><p><img src="3.png" alt></p><hr><h3 id="邮件通知"><a href="#邮件通知" class="headerlink" title="邮件通知"></a>邮件通知</h3><p><img src="4.png" alt></p><ol><li>SMTP服务器地址需要去对应的邮箱中查看，并需同时开启邮箱的SMTP功能。见下方汇总</li><li>需开启SMTP认证，用户名就是邮箱号，密码需要去邮箱设置。</li><li>SMTP默认是465，也可以在邮箱设置SMTP服务的地方查看。</li><li>最后，可以通过发送测试邮件测试配置，如果出现如图中 <code>Email was successfully sent</code> 信息，则说明邮件通知功能配置成功。</li></ol><p>1、例如网易邮箱配置： <code>设置 -&gt; POP3/SMTP/IMAP</code></p><p><img src="5.png" alt="网易邮箱SMTP服务"></p><p>腾讯企业邮开启<strong>SMTP服务</strong>并查看SMTP服务器地址：<code>设置 -&gt; 收发信设置</code></p><p><img src="6.png" alt="腾讯企业邮SMTP服务"></p><p>可以看到邮箱SMTP服务的端口为465</p><p>2、网易邮箱设置客户端授权密码</p><p><img src="7.png" alt="网易邮箱客户端授权码"></p><p>开启客户端授权码并进行设置就行了，如果之前已经设置过，直接输入到jenkins中就行了。</p><p><strong>腾讯企业邮客户端授权密码</strong></p><p><img src="11.png" alt="腾讯企业邮客户端授权码"></p><p>开启安全登陆 -&gt; 生成客户端专用密码（需保存下来，只显示一次）</p><hr><h2 id="针对项目中进行邮件通知配置"><a href="#针对项目中进行邮件通知配置" class="headerlink" title="针对项目中进行邮件通知配置"></a>针对项目中进行邮件通知配置</h2><p>先新建一个项目</p><p><img src="8.png" alt></p><p>在配置项目信息的地方，其他都不用管，拉到页面的最底下，找到 <strong>构建后操作</strong>，点击 <strong>增加构建后的操作步骤</strong>，选择 <code>E-mail Notification</code></p><p><img src="9.png" alt></p><p>输入需要接受通知的邮箱账号</p><p><img src="10.png" alt></p><h2 id="构建项目"><a href="#构建项目" class="headerlink" title="构建项目"></a>构建项目</h2><p>点击 <code>Build now</code>，构建项目</p><p><img src="12.png" alt></p><p>当项目构建失败时，就会发送邮件到项目配置的邮箱地址。</p><p><img src="13.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jenkins自动化构建邮件通知开发者功能配置&lt;/p&gt;
    
    </summary>
    
      <category term="learn" scheme="http://zhizhi.tangliangdong.me/categories/learn/"/>
    
    
      <category term="jenkins" scheme="http://zhizhi.tangliangdong.me/tags/jenkins/"/>
    
      <category term="email" scheme="http://zhizhi.tangliangdong.me/tags/email/"/>
    
  </entry>
  
</feed>
